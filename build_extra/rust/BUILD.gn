import("rust.gni")

# Dependencies between third party crates is mapped out here manually.  This is
# not so difficult and having it be tedious to add dependencies might help us
# avoid dependency hell later on.
# Versioning for third party rust crates is controlled in //gclient_config.py
# TODO(ry) Use Cargo for versioning?

crates = "//third_party/rust_crates"

rust_component("libc") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/libc-0.2.42/src/lib.rs"
  cfg = [ "feature=\"use_std\"" ]
}

rust_component("url") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/url-1.7.1/src/lib.rs"
  extern = [
    ":matches",
    ":idna",
    ":percent_encoding",
  ]
}

rust_component("percent_encoding") {
  source_root = "$crates/registry/src/github.com-1ecc6299db9ec823/percent-encoding-1.0.1/lib.rs"
  args = [
    # TODO: Suppress some warnings at this moment
    # This should be removed when it's fixed in servo/rust-url repository
    # https://github.com/servo/rust-url/issues/455
    "-Aunused-imports",
    "-Adeprecated",
  ]
}

rust_component("matches") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/matches-0.1.6/lib.rs"
}

rust_component("idna") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/idna-0.1.5/src/lib.rs"
  extern = [
    ":matches",
    ":unicode_bidi",
    ":unicode_normalization",
  ]
}

rust_component("unicode_bidi") {
  source_root = "$crates/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs"
  extern = [ ":matches" ]
}

rust_component("unicode_normalization") {
  source_root = "$crates/registry/src/github.com-1ecc6299db9ec823/unicode-normalization-0.1.7/src/lib.rs"
}

rust_component("log") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/log-0.4.3/src/lib.rs"
  extern = [ ":cfg_if" ]
}

rust_component("cfg_if") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.4/src/lib.rs"
}

rust_component("tokio") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.7/src/lib.rs"
  extern = [
    ":futures",
    ":mio",
    ":tokio_executor",
    ":tokio_fs",
    ":tokio_io",
    ":tokio_reactor",
    ":tokio_tcp",
    ":tokio_threadpool",
    ":tokio_timer",
    ":tokio_udp"
  ]
}

rust_component("futures") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/futures-0.1.23/src/lib.rs"
  cfg = [ "feature=\"use_std\"", "feature=\"with-deprecated\"" ]
}

rust_component("mio") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/mio-0.6.15/src/lib.rs"
  extern = [
    ":iovec",
    ":lazycell",
    ":log",
    ":net2",
    ":slab",
    ":libc"
  ]
  cfg = [ "feature=\"with-deprecated\"" ]
}

rust_component("iovec") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.2/src/lib.rs"
  extern = [ ":libc" ]
}

rust_component("lazycell") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/lazycell-0.6.0/src/lib.rs"
}

rust_component("net2") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs"
  extern = [ ":cfg_if", ":libc" ]
}

rust_component("slab") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/slab-0.4.0/src/lib.rs"
}

rust_component("tokio_executor") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.2/src/lib.rs"
  extern = [ ":futures" ]
}

rust_component("tokio_fs") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-fs-0.1.2/src/lib.rs"
  extern = [
    ":futures",
    ":tokio_io",
    ":tokio_threadpool"
  ]
}

rust_component("tokio_io") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.7/src/lib.rs"
  extern = [
    ":bytes",
    ":futures",
    ":log"
  ]
}

rust_component("bytes") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.9/src/lib.rs"
  extern = [ ":byteorder", ":iovec" ]
}

rust_component("byteorder") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.3/src/lib.rs"
}

rust_component("tokio_reactor") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-reactor-0.1.2/src/lib.rs"
  extern = [
    ":futures",
    ":log",
    ":mio",
    ":slab",
    ":tokio_executor",
    ":tokio_io"
  ]
}

rust_component("tokio_tcp") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.0/src/lib.rs"
  extern = [
    ":bytes",
    ":futures",
    ":iovec",
    ":mio",
    ":tokio_io",
    ":tokio_reactor"
  ]
}

rust_component("tokio_threadpool") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-threadpool-0.1.5/src/lib.rs"
  extern = [
    ":crossbeam_deque",
    ":futures",
    ":log",
    ":num_cpus",
    ":rand",
    ":tokio_executor"
  ]
}

rust_component("crossbeam_deque") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/crossbeam-deque-0.3.1/src/lib.rs"
  extern = [ ":crossbeam_epoch", ":crossbeam_utils" ]
}

rust_component("crossbeam_epoch") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.4.3/src/lib.rs"
  extern = [
    ":arrayvec",
    ":cfg_if",
    ":crossbeam_utils",
    ":lazy_static",
    ":memoffset",
    ":scopeguard"
  ]
  cfg = [ "feature=\"use_std\"" ]
}

rust_component("arrayvec") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.4.7/src/lib.rs"
  extern = [ ":nodrop" ]
}

rust_component("nodrop") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/nodrop-0.1.12/src/lib.rs"
}

rust_component("lazy_static") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.0.2/src/lib.rs"
}

rust_component("memoffset") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/memoffset-0.2.1/src/lib.rs"
}

rust_component("scopeguard") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/scopeguard-0.3.3/src/lib.rs"
  cfg = [ "feature=\"use_std\"" ]
}

rust_component("crossbeam_utils") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.3.2/src/lib.rs"
  extern = [ ":cfg_if" ]
  cfg = [ "feature=\"use_std\"" ]
}

rust_component("num_cpus") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/num_cpus-1.8.0/src/lib.rs"
  extern = [ ":libc" ]
}

rust_component("rand") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs"
}

rust_component("tokio_timer") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-timer-0.2.4/src/lib.rs"
  extern = [ ":futures", ":tokio_executor" ]
}

rust_component("tokio_udp") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-udp-0.1.1/src/lib.rs"
  extern = [
    ":bytes",
    ":futures",
    ":log",
    ":mio",
    ":tokio_codec",
    ":tokio_io",
    ":tokio_reactor"
  ]
}

rust_component("tokio_codec") {
  source_root =
      "$crates/registry/src/github.com-1ecc6299db9ec823/tokio-codec-0.1.0/src/lib.rs"
  extern = [
    ":bytes",
    ":futures",
    ":tokio_io"
  ]
}