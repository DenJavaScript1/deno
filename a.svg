<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="502" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="485.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="485.00"> </text><svg id="frames" x="10" width="1180" total_samples="4948"><g><title>http_bench_json_ops`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="0.0000%" y="389" width="0.0202%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.1617%" y="357" width="0.0202%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="1"/><text x="0.4117%" y="367.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (3 samples, 0.06%)</title><rect x="0.1819%" y="357" width="0.0606%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="3"/><text x="0.4319%" y="367.50"></text></g><g><title>http_bench_json_ops`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="0.2425%" y="357" width="0.0202%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="1"/><text x="0.4925%" y="367.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::modules::ModuleMap&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2627%" y="357" width="0.0202%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="1"/><text x="0.5127%" y="367.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::func_op_read::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2829%" y="357" width="0.0202%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="1"/><text x="0.5329%" y="367.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (1 samples, 0.02%)</title><rect x="0.3032%" y="357" width="0.0202%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="1"/><text x="0.5532%" y="367.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (2 samples, 0.04%)</title><rect x="0.3234%" y="357" width="0.0404%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="2"/><text x="0.5734%" y="367.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::poll_sessions (1 samples, 0.02%)</title><rect x="0.3638%" y="357" width="0.0202%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="1"/><text x="0.6138%" y="367.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="0.3840%" y="357" width="0.0202%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="1"/><text x="0.6340%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="0.3840%" y="341" width="0.0202%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="1"/><text x="0.6340%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.3840%" y="325" width="0.0202%" height="15" fill="rgb(240,193,28)" fg:x="19" fg:w="1"/><text x="0.6340%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="0.3840%" y="309" width="0.0202%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="1"/><text x="0.6340%" y="319.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="0.3840%" y="293" width="0.0202%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="1"/><text x="0.6340%" y="303.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="0.3840%" y="277" width="0.0202%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="1"/><text x="0.6340%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.3840%" y="261" width="0.0202%" height="15" fill="rgb(231,73,38)" fg:x="19" fg:w="1"/><text x="0.6340%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_ConstructHandler (1 samples, 0.02%)</title><rect x="0.3840%" y="245" width="0.0202%" height="15" fill="rgb(225,20,46)" fg:x="19" fg:w="1"/><text x="0.6340%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_JSBuiltinsConstructStub (1 samples, 0.02%)</title><rect x="0.3840%" y="229" width="0.0202%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="1"/><text x="0.6340%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_TypedArrayConstructor (1 samples, 0.02%)</title><rect x="0.3840%" y="213" width="0.0202%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="1"/><text x="0.6340%" y="223.50"></text></g><g><title>http_bench_json_ops`Builtins_CloneFastJSArray (1 samples, 0.02%)</title><rect x="0.3840%" y="197" width="0.0202%" height="15" fill="rgb(226,26,5)" fg:x="19" fg:w="1"/><text x="0.6340%" y="207.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::evaluate_pending_module (1 samples, 0.02%)</title><rect x="0.4042%" y="357" width="0.0202%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="1"/><text x="0.6542%" y="367.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (2 samples, 0.04%)</title><rect x="0.4244%" y="357" width="0.0404%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="2"/><text x="0.6744%" y="367.50"></text></g><g><title>http_bench_json_ops`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="3.8197%" y="277" width="0.0404%" height="15" fill="rgb(221,5,38)" fg:x="189" fg:w="2"/><text x="4.0697%" y="287.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cancel::internal::Node&gt; (4 samples, 0.08%)</title><rect x="3.8601%" y="277" width="0.0808%" height="15" fill="rgb(247,18,42)" fg:x="191" fg:w="4"/><text x="4.1101%" y="287.50"></text></g><g><title>http_bench_json_ops`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="3.8601%" y="261" width="0.0808%" height="15" fill="rgb(241,131,45)" fg:x="191" fg:w="4"/><text x="4.1101%" y="271.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowFutureImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="3.9410%" y="277" width="0.0202%" height="15" fill="rgb(249,31,29)" fg:x="195" fg:w="1"/><text x="4.1910%" y="287.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (2 samples, 0.04%)</title><rect x="3.9612%" y="277" width="0.0404%" height="15" fill="rgb(225,111,53)" fg:x="196" fg:w="2"/><text x="4.2112%" y="287.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (2 samples, 0.04%)</title><rect x="3.9612%" y="261" width="0.0404%" height="15" fill="rgb(238,160,17)" fg:x="196" fg:w="2"/><text x="4.2112%" y="271.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (3 samples, 0.06%)</title><rect x="4.0016%" y="277" width="0.0606%" height="15" fill="rgb(214,148,48)" fg:x="198" fg:w="3"/><text x="4.2516%" y="287.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (33 samples, 0.67%)</title><rect x="4.0622%" y="277" width="0.6669%" height="15" fill="rgb(232,36,49)" fg:x="201" fg:w="33"/><text x="4.3122%" y="287.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::clone_arc_raw (2 samples, 0.04%)</title><rect x="4.7292%" y="277" width="0.0404%" height="15" fill="rgb(209,103,24)" fg:x="234" fg:w="2"/><text x="4.9792%" y="287.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (6 samples, 0.12%)</title><rect x="4.7696%" y="277" width="0.1213%" height="15" fill="rgb(229,88,8)" fg:x="236" fg:w="6"/><text x="5.0196%" y="287.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 1.92%)</title><rect x="3.3145%" y="293" width="1.9200%" height="15" fill="rgb(213,181,19)" fg:x="164" fg:w="95"/><text x="3.5645%" y="303.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.34%)</title><rect x="4.8909%" y="277" width="0.3436%" height="15" fill="rgb(254,191,54)" fg:x="242" fg:w="17"/><text x="5.1409%" y="287.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.22%)</title><rect x="5.2344%" y="293" width="0.2223%" height="15" fill="rgb(241,83,37)" fg:x="259" fg:w="11"/><text x="5.4844%" y="303.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$recv (1 samples, 0.02%)</title><rect x="5.4568%" y="293" width="0.0202%" height="15" fill="rgb(233,36,39)" fg:x="270" fg:w="1"/><text x="5.7068%" y="303.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (1 samples, 0.02%)</title><rect x="5.4770%" y="293" width="0.0202%" height="15" fill="rgb(226,3,54)" fg:x="271" fg:w="1"/><text x="5.7270%" y="303.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.04%)</title><rect x="5.4972%" y="293" width="0.0404%" height="15" fill="rgb(245,192,40)" fg:x="272" fg:w="2"/><text x="5.7472%" y="303.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.02%)</title><rect x="5.5376%" y="293" width="0.0202%" height="15" fill="rgb(238,167,29)" fg:x="274" fg:w="1"/><text x="5.7876%" y="303.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,840 samples, 37.19%)</title><rect x="2.9709%" y="309" width="37.1867%" height="15" fill="rgb(232,182,51)" fg:x="147" fg:w="1840"/><text x="3.2209%" y="319.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,712 samples, 34.60%)</title><rect x="5.5578%" y="293" width="34.5998%" height="15" fill="rgb(231,60,39)" fg:x="275" fg:w="1712"/><text x="5.8078%" y="303.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.06%)</title><rect x="40.3395%" y="261" width="0.0606%" height="15" fill="rgb(208,69,12)" fg:x="1996" fg:w="3"/><text x="40.5895%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.04%)</title><rect x="40.3597%" y="245" width="0.0404%" height="15" fill="rgb(235,93,37)" fg:x="1997" fg:w="2"/><text x="40.6097%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.20%)</title><rect x="40.2183%" y="293" width="0.2021%" height="15" fill="rgb(213,116,39)" fg:x="1990" fg:w="10"/><text x="40.4683%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.16%)</title><rect x="40.2587%" y="277" width="0.1617%" height="15" fill="rgb(222,207,29)" fg:x="1992" fg:w="8"/><text x="40.5087%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="40.4002%" y="261" width="0.0202%" height="15" fill="rgb(206,96,30)" fg:x="1999" fg:w="1"/><text x="40.6502%" y="271.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (14 samples, 0.28%)</title><rect x="40.1576%" y="309" width="0.2829%" height="15" fill="rgb(218,138,4)" fg:x="1987" fg:w="14"/><text x="40.4076%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="40.4204%" y="293" width="0.0202%" height="15" fill="rgb(250,191,14)" fg:x="2000" fg:w="1"/><text x="40.6704%" y="303.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="40.4406%" y="309" width="0.0202%" height="15" fill="rgb(239,60,40)" fg:x="2001" fg:w="1"/><text x="40.6906%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.26%)</title><rect x="40.4608%" y="309" width="0.2627%" height="15" fill="rgb(206,27,48)" fg:x="2002" fg:w="13"/><text x="40.7108%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.08%)</title><rect x="40.6427%" y="293" width="0.0808%" height="15" fill="rgb(225,35,8)" fg:x="2011" fg:w="4"/><text x="40.8927%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.14%)</title><rect x="40.7235%" y="309" width="0.1415%" height="15" fill="rgb(250,213,24)" fg:x="2015" fg:w="7"/><text x="40.9735%" y="319.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,922 samples, 38.84%)</title><rect x="2.0614%" y="325" width="38.8440%" height="15" fill="rgb(247,123,22)" fg:x="102" fg:w="1922"/><text x="2.3114%" y="335.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.04%)</title><rect x="40.8650%" y="309" width="0.0404%" height="15" fill="rgb(231,138,38)" fg:x="2022" fg:w="2"/><text x="41.1150%" y="319.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (1 samples, 0.02%)</title><rect x="40.9054%" y="325" width="0.0202%" height="15" fill="rgb(231,145,46)" fg:x="2024" fg:w="1"/><text x="41.1554%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.10%)</title><rect x="40.9256%" y="325" width="0.1011%" height="15" fill="rgb(251,118,11)" fg:x="2025" fg:w="5"/><text x="41.1756%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="41.0267%" y="325" width="0.0202%" height="15" fill="rgb(217,147,25)" fg:x="2030" fg:w="1"/><text x="41.2767%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="41.0469%" y="325" width="0.0202%" height="15" fill="rgb(247,81,37)" fg:x="2031" fg:w="1"/><text x="41.2969%" y="335.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,952 samples, 39.45%)</title><rect x="1.6774%" y="341" width="39.4503%" height="15" fill="rgb(209,12,38)" fg:x="83" fg:w="1952"/><text x="1.9274%" y="351.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.06%)</title><rect x="41.0671%" y="325" width="0.0606%" height="15" fill="rgb(227,1,9)" fg:x="2032" fg:w="3"/><text x="41.3171%" y="335.50"></text></g><g><title>http_bench_json_ops`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.12%)</title><rect x="41.1277%" y="341" width="0.1213%" height="15" fill="rgb(248,47,43)" fg:x="2035" fg:w="6"/><text x="41.3777%" y="351.50"></text></g><g><title>http_bench_json_ops`core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.02%)</title><rect x="41.2490%" y="341" width="0.0202%" height="15" fill="rgb(221,10,30)" fg:x="2041" fg:w="1"/><text x="41.4990%" y="351.50"></text></g><g><title>http_bench_json_ops`core::hash::BuildHasher::hash_one (7 samples, 0.14%)</title><rect x="41.2692%" y="341" width="0.1415%" height="15" fill="rgb(210,229,1)" fg:x="2042" fg:w="7"/><text x="41.5192%" y="351.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (1 samples, 0.02%)</title><rect x="41.4107%" y="341" width="0.0202%" height="15" fill="rgb(222,148,37)" fg:x="2049" fg:w="1"/><text x="41.6607%" y="351.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="41.5926%" y="325" width="0.0202%" height="15" fill="rgb(234,67,33)" fg:x="2058" fg:w="1"/><text x="41.8426%" y="335.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (11 samples, 0.22%)</title><rect x="41.4309%" y="341" width="0.2223%" height="15" fill="rgb(247,98,35)" fg:x="2050" fg:w="11"/><text x="41.6809%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (2 samples, 0.04%)</title><rect x="41.6128%" y="325" width="0.0404%" height="15" fill="rgb(247,138,52)" fg:x="2059" fg:w="2"/><text x="41.8628%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::has_active_sessions (1 samples, 0.02%)</title><rect x="41.6532%" y="341" width="0.0202%" height="15" fill="rgb(213,79,30)" fg:x="2061" fg:w="1"/><text x="41.9032%" y="351.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::poll_sessions (2 samples, 0.04%)</title><rect x="41.6734%" y="341" width="0.0404%" height="15" fill="rgb(246,177,23)" fg:x="2062" fg:w="2"/><text x="41.9234%" y="351.50"></text></g><g><title>http_bench_json_ops`deno_core::ops::OpResult::to_v8 (1 samples, 0.02%)</title><rect x="41.7138%" y="341" width="0.0202%" height="15" fill="rgb(230,62,27)" fg:x="2064" fg:w="1"/><text x="41.9638%" y="351.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (1 samples, 0.02%)</title><rect x="41.7340%" y="341" width="0.0202%" height="15" fill="rgb(216,154,8)" fg:x="2065" fg:w="1"/><text x="41.9840%" y="351.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::check_promise_exceptions (2 samples, 0.04%)</title><rect x="41.7542%" y="341" width="0.0404%" height="15" fill="rgb(244,35,45)" fg:x="2066" fg:w="2"/><text x="42.0042%" y="351.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.02%)</title><rect x="41.8149%" y="325" width="0.0202%" height="15" fill="rgb(251,115,12)" fg:x="2069" fg:w="1"/><text x="42.0649%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::GetWasmEngine (1 samples, 0.02%)</title><rect x="41.8351%" y="325" width="0.0202%" height="15" fill="rgb(240,54,50)" fg:x="2070" fg:w="1"/><text x="42.0851%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (4 samples, 0.08%)</title><rect x="41.7947%" y="341" width="0.0808%" height="15" fill="rgb(233,84,52)" fg:x="2068" fg:w="4"/><text x="42.0447%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::WasmEngine::HasRunningCompileJob (1 samples, 0.02%)</title><rect x="41.8553%" y="325" width="0.0202%" height="15" fill="rgb(207,117,47)" fg:x="2071" fg:w="1"/><text x="42.1053%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="41.8553%" y="309" width="0.0202%" height="15" fill="rgb(249,43,39)" fg:x="2071" fg:w="1"/><text x="42.1053%" y="319.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="41.9968%" y="309" width="0.0202%" height="15" fill="rgb(209,38,44)" fg:x="2078" fg:w="1"/><text x="42.2468%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (7 samples, 0.14%)</title><rect x="42.0170%" y="309" width="0.1415%" height="15" fill="rgb(236,212,23)" fg:x="2079" fg:w="7"/><text x="42.2670%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (3 samples, 0.06%)</title><rect x="42.0978%" y="293" width="0.0606%" height="15" fill="rgb(242,79,21)" fg:x="2083" fg:w="3"/><text x="42.3478%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (3 samples, 0.06%)</title><rect x="42.1584%" y="309" width="0.0606%" height="15" fill="rgb(211,96,35)" fg:x="2086" fg:w="3"/><text x="42.4084%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (3 samples, 0.06%)</title><rect x="42.1584%" y="293" width="0.0606%" height="15" fill="rgb(253,215,40)" fg:x="2086" fg:w="3"/><text x="42.4084%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (2 samples, 0.04%)</title><rect x="42.2191%" y="309" width="0.0404%" height="15" fill="rgb(211,81,21)" fg:x="2089" fg:w="2"/><text x="42.4691%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (1 samples, 0.02%)</title><rect x="42.2595%" y="309" width="0.0202%" height="15" fill="rgb(208,190,38)" fg:x="2091" fg:w="1"/><text x="42.5095%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (1 samples, 0.02%)</title><rect x="42.2797%" y="309" width="0.0202%" height="15" fill="rgb(235,213,38)" fg:x="2092" fg:w="1"/><text x="42.5297%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (4 samples, 0.08%)</title><rect x="42.3403%" y="277" width="0.0808%" height="15" fill="rgb(237,122,38)" fg:x="2095" fg:w="4"/><text x="42.5903%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (8 samples, 0.16%)</title><rect x="42.4212%" y="277" width="0.1617%" height="15" fill="rgb(244,218,35)" fg:x="2099" fg:w="8"/><text x="42.6712%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (5 samples, 0.10%)</title><rect x="42.4818%" y="261" width="0.1011%" height="15" fill="rgb(240,68,47)" fg:x="2102" fg:w="5"/><text x="42.7318%" y="271.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (16 samples, 0.32%)</title><rect x="42.3201%" y="293" width="0.3234%" height="15" fill="rgb(210,16,53)" fg:x="2094" fg:w="16"/><text x="42.5701%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (3 samples, 0.06%)</title><rect x="42.5829%" y="277" width="0.0606%" height="15" fill="rgb(235,124,12)" fg:x="2107" fg:w="3"/><text x="42.8329%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (4 samples, 0.08%)</title><rect x="42.6435%" y="293" width="0.0808%" height="15" fill="rgb(224,169,11)" fg:x="2110" fg:w="4"/><text x="42.8935%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (1 samples, 0.02%)</title><rect x="42.7243%" y="293" width="0.0202%" height="15" fill="rgb(250,166,2)" fg:x="2114" fg:w="1"/><text x="42.9743%" y="303.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (45 samples, 0.91%)</title><rect x="41.8755%" y="325" width="0.9095%" height="15" fill="rgb(242,216,29)" fg:x="2072" fg:w="45"/><text x="42.1255%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::scope::data::ScopeData::try_exit_scope (24 samples, 0.49%)</title><rect x="42.2999%" y="309" width="0.4850%" height="15" fill="rgb(230,116,27)" fg:x="2093" fg:w="24"/><text x="42.5499%" y="319.50"></text></g><g><title>http_bench_json_ops`v8__Context__Exit (2 samples, 0.04%)</title><rect x="42.7445%" y="293" width="0.0404%" height="15" fill="rgb(228,99,48)" fg:x="2115" fg:w="2"/><text x="42.9945%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (3 samples, 0.06%)</title><rect x="42.8658%" y="309" width="0.0606%" height="15" fill="rgb(253,11,6)" fg:x="2121" fg:w="3"/><text x="43.1158%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::MoveGlobal (3 samples, 0.06%)</title><rect x="42.9264%" y="309" width="0.0606%" height="15" fill="rgb(247,143,39)" fg:x="2124" fg:w="3"/><text x="43.1764%" y="319.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (17 samples, 0.34%)</title><rect x="42.7850%" y="325" width="0.3436%" height="15" fill="rgb(236,97,10)" fg:x="2117" fg:w="17"/><text x="43.0350%" y="335.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (7 samples, 0.14%)</title><rect x="42.9871%" y="309" width="0.1415%" height="15" fill="rgb(233,208,19)" fg:x="2127" fg:w="7"/><text x="43.2371%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (4 samples, 0.08%)</title><rect x="43.0477%" y="293" width="0.0808%" height="15" fill="rgb(216,164,2)" fg:x="2130" fg:w="4"/><text x="43.2977%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (3 samples, 0.06%)</title><rect x="43.1285%" y="325" width="0.0606%" height="15" fill="rgb(220,129,5)" fg:x="2134" fg:w="3"/><text x="43.3785%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (66 samples, 1.33%)</title><rect x="41.8755%" y="341" width="1.3339%" height="15" fill="rgb(242,17,10)" fg:x="2072" fg:w="66"/><text x="42.1255%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (1 samples, 0.02%)</title><rect x="43.1892%" y="325" width="0.0202%" height="15" fill="rgb(242,107,0)" fg:x="2137" fg:w="1"/><text x="43.4392%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::inspector (2 samples, 0.04%)</title><rect x="43.2094%" y="341" width="0.0404%" height="15" fill="rgb(251,28,31)" fg:x="2138" fg:w="2"/><text x="43.4594%" y="351.50"></text></g><g><title>http_bench_json_ops`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (2 samples, 0.04%)</title><rect x="43.2498%" y="341" width="0.0404%" height="15" fill="rgb(233,223,10)" fg:x="2140" fg:w="2"/><text x="43.4998%" y="351.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::clone_arc_raw (1 samples, 0.02%)</title><rect x="43.2902%" y="341" width="0.0202%" height="15" fill="rgb(215,21,27)" fg:x="2142" fg:w="1"/><text x="43.5402%" y="351.50"></text></g><g><title>http_bench_json_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.08%)</title><rect x="43.3508%" y="325" width="0.0808%" height="15" fill="rgb(232,23,21)" fg:x="2145" fg:w="4"/><text x="43.6008%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.04%)</title><rect x="43.4317%" y="325" width="0.0404%" height="15" fill="rgb(244,5,23)" fg:x="2149" fg:w="2"/><text x="43.6817%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="43.4721%" y="325" width="0.0202%" height="15" fill="rgb(226,81,46)" fg:x="2151" fg:w="1"/><text x="43.7221%" y="335.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (10 samples, 0.20%)</title><rect x="43.3104%" y="341" width="0.2021%" height="15" fill="rgb(247,70,30)" fg:x="2143" fg:w="10"/><text x="43.5604%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="43.4923%" y="325" width="0.0202%" height="15" fill="rgb(212,68,19)" fg:x="2152" fg:w="1"/><text x="43.7423%" y="335.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::drop_arc_raw (1 samples, 0.02%)</title><rect x="43.5125%" y="341" width="0.0202%" height="15" fill="rgb(240,187,13)" fg:x="2153" fg:w="1"/><text x="43.7625%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (1 samples, 0.02%)</title><rect x="43.5327%" y="341" width="0.0202%" height="15" fill="rgb(223,113,26)" fg:x="2154" fg:w="1"/><text x="43.7827%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (9 samples, 0.18%)</title><rect x="43.8965%" y="325" width="0.1819%" height="15" fill="rgb(206,192,2)" fg:x="2172" fg:w="9"/><text x="44.1465%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (3 samples, 0.06%)</title><rect x="44.0178%" y="309" width="0.0606%" height="15" fill="rgb(241,108,4)" fg:x="2178" fg:w="3"/><text x="44.2678%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (2 samples, 0.04%)</title><rect x="44.0784%" y="325" width="0.0404%" height="15" fill="rgb(247,173,49)" fg:x="2181" fg:w="2"/><text x="44.3284%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.04%)</title><rect x="44.1188%" y="325" width="0.0404%" height="15" fill="rgb(224,114,35)" fg:x="2183" fg:w="2"/><text x="44.3688%" y="335.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (3 samples, 0.06%)</title><rect x="44.3007%" y="309" width="0.0606%" height="15" fill="rgb(245,159,27)" fg:x="2192" fg:w="3"/><text x="44.5507%" y="319.50"></text></g><g><title>0x11000e740 (1 samples, 0.02%)</title><rect x="44.8464%" y="277" width="0.0202%" height="15" fill="rgb(245,172,44)" fg:x="2219" fg:w="1"/><text x="45.0964%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsAny (3 samples, 0.06%)</title><rect x="44.8666%" y="277" width="0.0606%" height="15" fill="rgb(236,23,11)" fg:x="2220" fg:w="3"/><text x="45.1166%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsAny (1 samples, 0.02%)</title><rect x="44.9272%" y="277" width="0.0202%" height="15" fill="rgb(205,117,38)" fg:x="2223" fg:w="1"/><text x="45.1772%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (5 samples, 0.10%)</title><rect x="44.9475%" y="277" width="0.1011%" height="15" fill="rgb(237,72,25)" fg:x="2224" fg:w="5"/><text x="45.1975%" y="287.50"></text></g><g><title>0x11000bd58 (1 samples, 0.02%)</title><rect x="45.0889%" y="261" width="0.0202%" height="15" fill="rgb(244,70,9)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_BaselineOutOfLinePrologue (1 samples, 0.02%)</title><rect x="45.0889%" y="245" width="0.0202%" height="15" fill="rgb(217,125,39)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="45.0889%" y="229" width="0.0202%" height="15" fill="rgb(235,36,10)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_StackGuardWithGap (1 samples, 0.02%)</title><rect x="45.0889%" y="213" width="0.0202%" height="15" fill="rgb(251,123,47)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::StackGuard::HandleInterrupts (1 samples, 0.02%)</title><rect x="45.0889%" y="197" width="0.0202%" height="15" fill="rgb(221,13,13)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::InstallOptimizedFunctions (1 samples, 0.02%)</title><rect x="45.0889%" y="181" width="0.0202%" height="15" fill="rgb(238,131,9)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::FinalizeTurbofanCompilationJob (1 samples, 0.02%)</title><rect x="45.0889%" y="165" width="0.0202%" height="15" fill="rgb(211,50,8)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::FinalizeJobImpl (1 samples, 0.02%)</title><rect x="45.0889%" y="149" width="0.0202%" height="15" fill="rgb(245,182,24)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::(anonymous namespace)::ProtectorDependency::IsValid (1 samples, 0.02%)</title><rect x="45.0889%" y="133" width="0.0202%" height="15" fill="rgb(242,14,37)" fg:x="2231" fg:w="1"/><text x="45.3389%" y="143.50"></text></g><g><title>0x11000e774 (1 samples, 0.02%)</title><rect x="45.1091%" y="261" width="0.0202%" height="15" fill="rgb(246,228,12)" fg:x="2232" fg:w="1"/><text x="45.3591%" y="271.50"></text></g><g><title>0x11000e7a4 (1 samples, 0.02%)</title><rect x="45.1293%" y="261" width="0.0202%" height="15" fill="rgb(213,55,15)" fg:x="2233" fg:w="1"/><text x="45.3793%" y="271.50"></text></g><g><title>0x11000e7b4 (1 samples, 0.02%)</title><rect x="45.1496%" y="261" width="0.0202%" height="15" fill="rgb(209,9,3)" fg:x="2234" fg:w="1"/><text x="45.3996%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_EnqueueMicrotask (5 samples, 0.10%)</title><rect x="45.2708%" y="213" width="0.1011%" height="15" fill="rgb(230,59,30)" fg:x="2240" fg:w="5"/><text x="45.5208%" y="223.50"></text></g><g><title>0x11000e7e8 (18 samples, 0.36%)</title><rect x="45.1698%" y="261" width="0.3638%" height="15" fill="rgb(209,121,21)" fg:x="2235" fg:w="18"/><text x="45.4198%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (17 samples, 0.34%)</title><rect x="45.1900%" y="245" width="0.3436%" height="15" fill="rgb(220,109,13)" fg:x="2236" fg:w="17"/><text x="45.4400%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (13 samples, 0.26%)</title><rect x="45.2708%" y="229" width="0.2627%" height="15" fill="rgb(232,18,1)" fg:x="2240" fg:w="13"/><text x="45.5208%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (8 samples, 0.16%)</title><rect x="45.3719%" y="213" width="0.1617%" height="15" fill="rgb(215,41,42)" fg:x="2245" fg:w="8"/><text x="45.6219%" y="223.50"></text></g><g><title>0x11000e7f0 (1 samples, 0.02%)</title><rect x="45.5335%" y="261" width="0.0202%" height="15" fill="rgb(224,123,36)" fg:x="2253" fg:w="1"/><text x="45.7835%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="45.5538%" y="261" width="0.0202%" height="15" fill="rgb(240,125,3)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="45.5538%" y="245" width="0.0202%" height="15" fill="rgb(205,98,50)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_ReturnHandler (1 samples, 0.02%)</title><rect x="45.5538%" y="229" width="0.0202%" height="15" fill="rgb(205,185,37)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="45.5538%" y="213" width="0.0202%" height="15" fill="rgb(238,207,15)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_BytecodeBudgetInterrupt_Ignition (1 samples, 0.02%)</title><rect x="45.5538%" y="197" width="0.0202%" height="15" fill="rgb(213,199,42)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::BytecodeBudgetInterrupt(v8::internal::Isolate*, v8::internal::Arguments&lt; (1 samples, 0.02%)</title><rect x="45.5538%" y="181" width="0.0202%" height="15" fill="rgb(235,201,11)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::TieringManager::OnInterruptTick(v8::internal::Handle (1 samples, 0.02%)</title><rect x="45.5538%" y="165" width="0.0202%" height="15" fill="rgb(207,46,11)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineBatchCompiler::CompileBatch(v8::internal::Handle (1 samples, 0.02%)</title><rect x="45.5538%" y="149" width="0.0202%" height="15" fill="rgb(241,35,35)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineBatchCompiler::MaybeCompileFunction (1 samples, 0.02%)</title><rect x="45.5538%" y="133" width="0.0202%" height="15" fill="rgb(243,32,47)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::CompileSharedWithBaseline(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="45.5538%" y="117" width="0.0202%" height="15" fill="rgb(247,202,23)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::GenerateBaselineCode(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="45.5538%" y="101" width="0.0202%" height="15" fill="rgb(219,102,11)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineCompiler::GenerateCode (1 samples, 0.02%)</title><rect x="45.5538%" y="85" width="0.0202%" height="15" fill="rgb(243,110,44)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="95.50"></text></g><g><title>http_bench_json_ops`void v8::internal::baseline::BaselineCompiler::BuildCall&lt;(v8::internal::ConvertReceiverMode)1, v8::internal::interpreter::Register, v8::internal::interpreter::Register&gt; (1 samples, 0.02%)</title><rect x="45.5538%" y="69" width="0.0202%" height="15" fill="rgb(222,74,54)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::TurboAssembler::Mov (1 samples, 0.02%)</title><rect x="45.5538%" y="53" width="0.0202%" height="15" fill="rgb(216,99,12)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="63.50"></text></g><g><title>http_bench_json_ops`v8::internal::TurboAssembler::TryOneInstrMoveImmediate (1 samples, 0.02%)</title><rect x="45.5538%" y="37" width="0.0202%" height="15" fill="rgb(226,22,26)" fg:x="2254" fg:w="1"/><text x="45.8038%" y="47.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (39 samples, 0.79%)</title><rect x="44.8060%" y="293" width="0.7882%" height="15" fill="rgb(217,163,10)" fg:x="2217" fg:w="39"/><text x="45.0560%" y="303.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (27 samples, 0.55%)</title><rect x="45.0485%" y="277" width="0.5457%" height="15" fill="rgb(213,25,53)" fg:x="2229" fg:w="27"/><text x="45.2985%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (1 samples, 0.02%)</title><rect x="45.5740%" y="261" width="0.0202%" height="15" fill="rgb(252,105,26)" fg:x="2255" fg:w="1"/><text x="45.8240%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (63 samples, 1.27%)</title><rect x="44.3614%" y="309" width="1.2732%" height="15" fill="rgb(220,39,43)" fg:x="2195" fg:w="63"/><text x="44.6114%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (2 samples, 0.04%)</title><rect x="45.5942%" y="293" width="0.0404%" height="15" fill="rgb(229,68,48)" fg:x="2256" fg:w="2"/><text x="45.8442%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::DumpOnJavascriptExecution::IsAllowed (2 samples, 0.04%)</title><rect x="45.6346%" y="309" width="0.0404%" height="15" fill="rgb(252,8,32)" fg:x="2258" fg:w="2"/><text x="45.8846%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="45.6750%" y="309" width="0.0202%" height="15" fill="rgb(223,20,43)" fg:x="2260" fg:w="1"/><text x="45.9250%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.02%)</title><rect x="45.6952%" y="309" width="0.0202%" height="15" fill="rgb(229,81,49)" fg:x="2261" fg:w="1"/><text x="45.9452%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (78 samples, 1.58%)</title><rect x="44.1593%" y="325" width="1.5764%" height="15" fill="rgb(236,28,36)" fg:x="2185" fg:w="78"/><text x="44.4093%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::ThrowOnJavascriptExecution::IsAllowed (1 samples, 0.02%)</title><rect x="45.7154%" y="309" width="0.0202%" height="15" fill="rgb(249,185,26)" fg:x="2262" fg:w="1"/><text x="45.9654%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::SuppressMicrotaskExecutionScope::SuppressMicrotaskExecutionScope (2 samples, 0.04%)</title><rect x="45.7963%" y="293" width="0.0404%" height="15" fill="rgb(249,174,33)" fg:x="2266" fg:w="2"/><text x="46.0463%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="46.0994%" y="277" width="0.0202%" height="15" fill="rgb(233,201,37)" fg:x="2281" fg:w="1"/><text x="46.3494%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::SetCaptureMessage (1 samples, 0.02%)</title><rect x="46.1601%" y="261" width="0.0202%" height="15" fill="rgb(221,78,26)" fg:x="2284" fg:w="1"/><text x="46.4101%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::SetVerbose (1 samples, 0.02%)</title><rect x="46.1803%" y="261" width="0.0202%" height="15" fill="rgb(250,127,30)" fg:x="2285" fg:w="1"/><text x="46.4303%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (1 samples, 0.02%)</title><rect x="46.2005%" y="261" width="0.0202%" height="15" fill="rgb(230,49,44)" fg:x="2286" fg:w="1"/><text x="46.4505%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (4 samples, 0.08%)</title><rect x="46.2207%" y="261" width="0.0808%" height="15" fill="rgb(229,67,23)" fg:x="2287" fg:w="4"/><text x="46.4707%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (4 samples, 0.08%)</title><rect x="46.3015%" y="261" width="0.0808%" height="15" fill="rgb(249,83,47)" fg:x="2291" fg:w="4"/><text x="46.5515%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (4 samples, 0.08%)</title><rect x="46.4228%" y="245" width="0.0808%" height="15" fill="rgb(215,43,3)" fg:x="2297" fg:w="4"/><text x="46.6728%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::GetCurrentStackPosition (1 samples, 0.02%)</title><rect x="46.4834%" y="229" width="0.0202%" height="15" fill="rgb(238,154,13)" fg:x="2300" fg:w="1"/><text x="46.7334%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (1 samples, 0.02%)</title><rect x="46.5036%" y="245" width="0.0202%" height="15" fill="rgb(219,56,2)" fg:x="2301" fg:w="1"/><text x="46.7536%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (2 samples, 0.04%)</title><rect x="47.0897%" y="197" width="0.0404%" height="15" fill="rgb(233,0,4)" fg:x="2330" fg:w="2"/><text x="47.3397%" y="207.50"></text></g><g><title>0x11000bf1c (1 samples, 0.02%)</title><rect x="47.4131%" y="133" width="0.0202%" height="15" fill="rgb(235,30,7)" fg:x="2346" fg:w="1"/><text x="47.6631%" y="143.50"></text></g><g><title>0x11000bc20 (1 samples, 0.02%)</title><rect x="47.4131%" y="117" width="0.0202%" height="15" fill="rgb(250,79,13)" fg:x="2346" fg:w="1"/><text x="47.6631%" y="127.50"></text></g><g><title>http_bench_json_ops`Builtins_JSBuiltinsConstructStub (1 samples, 0.02%)</title><rect x="47.4131%" y="101" width="0.0202%" height="15" fill="rgb(211,146,34)" fg:x="2346" fg:w="1"/><text x="47.6631%" y="111.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (1 samples, 0.02%)</title><rect x="47.4131%" y="85" width="0.0202%" height="15" fill="rgb(228,22,38)" fg:x="2346" fg:w="1"/><text x="47.6631%" y="95.50"></text></g><g><title>0x11000d158 (1 samples, 0.02%)</title><rect x="47.4333%" y="133" width="0.0202%" height="15" fill="rgb(235,168,5)" fg:x="2347" fg:w="1"/><text x="47.6833%" y="143.50"></text></g><g><title>0x11000c2b0 (3 samples, 0.06%)</title><rect x="47.4131%" y="165" width="0.0606%" height="15" fill="rgb(221,155,16)" fg:x="2346" fg:w="3"/><text x="47.6631%" y="175.50"></text></g><g><title>0x11000c0dc (3 samples, 0.06%)</title><rect x="47.4131%" y="149" width="0.0606%" height="15" fill="rgb(215,215,53)" fg:x="2346" fg:w="3"/><text x="47.6631%" y="159.50"></text></g><g><title>0x11000d160 (1 samples, 0.02%)</title><rect x="47.4535%" y="133" width="0.0202%" height="15" fill="rgb(223,4,10)" fg:x="2348" fg:w="1"/><text x="47.7035%" y="143.50"></text></g><g><title>http_bench_json_ops`deno_core::ops_builtin::func_op_read (1 samples, 0.02%)</title><rect x="47.4535%" y="117" width="0.0202%" height="15" fill="rgb(234,103,6)" fg:x="2348" fg:w="1"/><text x="47.7035%" y="127.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (1 samples, 0.02%)</title><rect x="47.4535%" y="101" width="0.0202%" height="15" fill="rgb(227,97,0)" fg:x="2348" fg:w="1"/><text x="47.7035%" y="111.50"></text></g><g><title>0x11000c45c (9 samples, 0.18%)</title><rect x="47.4737%" y="165" width="0.1819%" height="15" fill="rgb(234,150,53)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (9 samples, 0.18%)</title><rect x="47.4737%" y="149" width="0.1819%" height="15" fill="rgb(228,201,54)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (9 samples, 0.18%)</title><rect x="47.4737%" y="133" width="0.1819%" height="15" fill="rgb(222,22,37)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (9 samples, 0.18%)</title><rect x="47.4737%" y="117" width="0.1819%" height="15" fill="rgb(237,53,32)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="127.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (9 samples, 0.18%)</title><rect x="47.4737%" y="101" width="0.1819%" height="15" fill="rgb(233,25,53)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (9 samples, 0.18%)</title><rect x="47.4737%" y="85" width="0.1819%" height="15" fill="rgb(210,40,34)" fg:x="2349" fg:w="9"/><text x="47.7237%" y="95.50"></text></g><g><title>0x11000d46c (1 samples, 0.02%)</title><rect x="47.6556%" y="165" width="0.0202%" height="15" fill="rgb(241,220,44)" fg:x="2358" fg:w="1"/><text x="47.9056%" y="175.50"></text></g><g><title>0x11000d498 (1 samples, 0.02%)</title><rect x="47.6758%" y="165" width="0.0202%" height="15" fill="rgb(235,28,35)" fg:x="2359" fg:w="1"/><text x="47.9258%" y="175.50"></text></g><g><title>0x11000d6e8 (4 samples, 0.08%)</title><rect x="47.6960%" y="165" width="0.0808%" height="15" fill="rgb(210,56,17)" fg:x="2360" fg:w="4"/><text x="47.9460%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (4 samples, 0.08%)</title><rect x="47.6960%" y="149" width="0.0808%" height="15" fill="rgb(224,130,29)" fg:x="2360" fg:w="4"/><text x="47.9460%" y="159.50"></text></g><g><title>0x11000d734 (1 samples, 0.02%)</title><rect x="47.7769%" y="165" width="0.0202%" height="15" fill="rgb(235,212,8)" fg:x="2364" fg:w="1"/><text x="48.0269%" y="175.50"></text></g><g><title>0x11000d73c (1 samples, 0.02%)</title><rect x="47.7971%" y="165" width="0.0202%" height="15" fill="rgb(223,33,50)" fg:x="2365" fg:w="1"/><text x="48.0471%" y="175.50"></text></g><g><title>0x11000d7a4 (1 samples, 0.02%)</title><rect x="47.8173%" y="165" width="0.0202%" height="15" fill="rgb(219,149,13)" fg:x="2366" fg:w="1"/><text x="48.0673%" y="175.50"></text></g><g><title>0x11000d7f0 (2 samples, 0.04%)</title><rect x="47.8375%" y="165" width="0.0404%" height="15" fill="rgb(250,156,29)" fg:x="2367" fg:w="2"/><text x="48.0875%" y="175.50"></text></g><g><title>0x11000d830 (3 samples, 0.06%)</title><rect x="47.8779%" y="165" width="0.0606%" height="15" fill="rgb(216,193,19)" fg:x="2369" fg:w="3"/><text x="48.1279%" y="175.50"></text></g><g><title>http_bench_json_ops`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.02%)</title><rect x="48.1002%" y="133" width="0.0202%" height="15" fill="rgb(216,135,14)" fg:x="2380" fg:w="1"/><text x="48.3502%" y="143.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (5 samples, 0.10%)</title><rect x="48.7672%" y="117" width="0.1011%" height="15" fill="rgb(241,47,5)" fg:x="2413" fg:w="5"/><text x="49.0172%" y="127.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.02%)</title><rect x="48.8480%" y="101" width="0.0202%" height="15" fill="rgb(233,42,35)" fg:x="2417" fg:w="1"/><text x="49.0980%" y="111.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::op_try_write::call (38 samples, 0.77%)</title><rect x="48.1205%" y="133" width="0.7680%" height="15" fill="rgb(231,13,6)" fg:x="2381" fg:w="38"/><text x="48.3705%" y="143.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.02%)</title><rect x="48.8682%" y="117" width="0.0202%" height="15" fill="rgb(207,181,40)" fg:x="2418" fg:w="1"/><text x="49.1182%" y="127.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (1,841 samples, 37.21%)</title><rect x="47.9992%" y="149" width="37.2070%" height="15" fill="rgb(254,173,49)" fg:x="2375" fg:w="1841"/><text x="48.2492%" y="159.50">http_bench_json_ops`http_bench_json_ops::func_op_try_write</text></g><g><title>libsystem_kernel.dylib`__sendto (1,797 samples, 36.32%)</title><rect x="48.8884%" y="133" width="36.3177%" height="15" fill="rgb(221,1,38)" fg:x="2419" fg:w="1797"/><text x="49.1384%" y="143.50">libsystem_kernel.dylib`__sendto</text></g><g><title>http_bench_json_ops`http_bench_json_ops::op_try_write::call (2 samples, 0.04%)</title><rect x="85.2061%" y="149" width="0.0404%" height="15" fill="rgb(206,124,46)" fg:x="4216" fg:w="2"/><text x="85.4561%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::External::Value (1 samples, 0.02%)</title><rect x="85.2466%" y="149" width="0.0202%" height="15" fill="rgb(249,21,11)" fg:x="4218" fg:w="1"/><text x="85.4966%" y="159.50"></text></g><g><title>0x11000d838 (1,851 samples, 37.41%)</title><rect x="47.9386%" y="165" width="37.4091%" height="15" fill="rgb(222,201,40)" fg:x="2372" fg:w="1851"/><text x="48.1886%" y="175.50">0x11000d838</text></g><g><title>http_bench_json_ops`v8__External__Value (4 samples, 0.08%)</title><rect x="85.2668%" y="149" width="0.0808%" height="15" fill="rgb(235,61,29)" fg:x="4219" fg:w="4"/><text x="85.5168%" y="159.50"></text></g><g><title>0x11000d874 (1 samples, 0.02%)</title><rect x="85.3476%" y="165" width="0.0202%" height="15" fill="rgb(219,207,3)" fg:x="4223" fg:w="1"/><text x="85.5976%" y="175.50"></text></g><g><title>0x11000d8e4 (1 samples, 0.02%)</title><rect x="85.3678%" y="165" width="0.0202%" height="15" fill="rgb(222,56,46)" fg:x="4224" fg:w="1"/><text x="85.6178%" y="175.50"></text></g><g><title>0x11000da58 (1 samples, 0.02%)</title><rect x="85.3880%" y="165" width="0.0202%" height="15" fill="rgb(239,76,54)" fg:x="4225" fg:w="1"/><text x="85.6380%" y="175.50"></text></g><g><title>0x11000dab4 (2 samples, 0.04%)</title><rect x="85.4082%" y="165" width="0.0404%" height="15" fill="rgb(231,124,27)" fg:x="4226" fg:w="2"/><text x="85.6582%" y="175.50"></text></g><g><title>0x11000dabc (3 samples, 0.06%)</title><rect x="85.4487%" y="165" width="0.0606%" height="15" fill="rgb(249,195,6)" fg:x="4228" fg:w="3"/><text x="85.6987%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (3 samples, 0.06%)</title><rect x="85.4487%" y="149" width="0.0606%" height="15" fill="rgb(237,174,47)" fg:x="4228" fg:w="3"/><text x="85.6987%" y="159.50"></text></g><g><title>0x11000dad8 (1 samples, 0.02%)</title><rect x="85.5093%" y="165" width="0.0202%" height="15" fill="rgb(206,201,31)" fg:x="4231" fg:w="1"/><text x="85.7593%" y="175.50"></text></g><g><title>0x11000daf8 (1 samples, 0.02%)</title><rect x="85.5295%" y="165" width="0.0202%" height="15" fill="rgb(231,57,52)" fg:x="4232" fg:w="1"/><text x="85.7795%" y="175.50"></text></g><g><title>0x11000db00 (2 samples, 0.04%)</title><rect x="85.5497%" y="165" width="0.0404%" height="15" fill="rgb(248,177,22)" fg:x="4233" fg:w="2"/><text x="85.7997%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (2 samples, 0.04%)</title><rect x="85.5497%" y="149" width="0.0404%" height="15" fill="rgb(215,211,37)" fg:x="4233" fg:w="2"/><text x="85.7997%" y="159.50"></text></g><g><title>0x11000db30 (1 samples, 0.02%)</title><rect x="85.5901%" y="165" width="0.0202%" height="15" fill="rgb(241,128,51)" fg:x="4235" fg:w="1"/><text x="85.8401%" y="175.50"></text></g><g><title>0x11000dbac (1 samples, 0.02%)</title><rect x="85.6103%" y="165" width="0.0202%" height="15" fill="rgb(227,165,31)" fg:x="4236" fg:w="1"/><text x="85.8603%" y="175.50"></text></g><g><title>0x11000dbbc (1 samples, 0.02%)</title><rect x="85.6306%" y="165" width="0.0202%" height="15" fill="rgb(228,167,24)" fg:x="4237" fg:w="1"/><text x="85.8806%" y="175.50"></text></g><g><title>0x11000dc5c (1 samples, 0.02%)</title><rect x="85.6508%" y="165" width="0.0202%" height="15" fill="rgb(228,143,12)" fg:x="4238" fg:w="1"/><text x="85.9008%" y="175.50"></text></g><g><title>0x11000dc74 (2 samples, 0.04%)</title><rect x="85.6710%" y="165" width="0.0404%" height="15" fill="rgb(249,149,8)" fg:x="4239" fg:w="2"/><text x="85.9210%" y="175.50"></text></g><g><title>0x11000dc7c (1 samples, 0.02%)</title><rect x="85.7114%" y="165" width="0.0202%" height="15" fill="rgb(243,35,44)" fg:x="4241" fg:w="1"/><text x="85.9614%" y="175.50"></text></g><g><title>0x11000dc80 (1 samples, 0.02%)</title><rect x="85.7316%" y="165" width="0.0202%" height="15" fill="rgb(246,89,9)" fg:x="4242" fg:w="1"/><text x="85.9816%" y="175.50"></text></g><g><title>0x11000dc84 (1 samples, 0.02%)</title><rect x="85.7518%" y="165" width="0.0202%" height="15" fill="rgb(233,213,13)" fg:x="4243" fg:w="1"/><text x="86.0018%" y="175.50"></text></g><g><title>0x11000dcdc (1 samples, 0.02%)</title><rect x="85.7720%" y="165" width="0.0202%" height="15" fill="rgb(233,141,41)" fg:x="4244" fg:w="1"/><text x="86.0220%" y="175.50"></text></g><g><title>0x11000dcf4 (1 samples, 0.02%)</title><rect x="85.7922%" y="165" width="0.0202%" height="15" fill="rgb(239,167,4)" fg:x="4245" fg:w="1"/><text x="86.0422%" y="175.50"></text></g><g><title>0x11000dd60 (1 samples, 0.02%)</title><rect x="85.8124%" y="165" width="0.0202%" height="15" fill="rgb(209,217,16)" fg:x="4246" fg:w="1"/><text x="86.0624%" y="175.50"></text></g><g><title>0x11000de2c (9 samples, 0.18%)</title><rect x="85.8327%" y="165" width="0.1819%" height="15" fill="rgb(219,88,35)" fg:x="4247" fg:w="9"/><text x="86.0827%" y="175.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (35 samples, 0.71%)</title><rect x="86.1358%" y="133" width="0.7074%" height="15" fill="rgb(220,193,23)" fg:x="4262" fg:w="35"/><text x="86.3858%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.32%)</title><rect x="86.5198%" y="117" width="0.3234%" height="15" fill="rgb(230,90,52)" fg:x="4281" fg:w="16"/><text x="86.7698%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.24%)</title><rect x="86.6006%" y="101" width="0.2425%" height="15" fill="rgb(252,106,19)" fg:x="4285" fg:w="12"/><text x="86.8506%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.24%)</title><rect x="86.6006%" y="85" width="0.2425%" height="15" fill="rgb(206,74,20)" fg:x="4285" fg:w="12"/><text x="86.8506%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.20%)</title><rect x="86.6411%" y="69" width="0.2021%" height="15" fill="rgb(230,138,44)" fg:x="4287" fg:w="10"/><text x="86.8911%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::api_internal::GlobalizeReference (1 samples, 0.02%)</title><rect x="86.8432%" y="133" width="0.0202%" height="15" fill="rgb(235,182,43)" fg:x="4297" fg:w="1"/><text x="87.0932%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (2 samples, 0.04%)</title><rect x="86.8634%" y="133" width="0.0404%" height="15" fill="rgb(242,16,51)" fg:x="4298" fg:w="2"/><text x="87.1134%" y="143.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (6 samples, 0.12%)</title><rect x="86.9038%" y="133" width="0.1213%" height="15" fill="rgb(248,9,4)" fg:x="4300" fg:w="6"/><text x="87.1538%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (5 samples, 0.10%)</title><rect x="86.9240%" y="117" width="0.1011%" height="15" fill="rgb(210,31,22)" fg:x="4301" fg:w="5"/><text x="87.1740%" y="127.50"></text></g><g><title>http_bench_json_ops`deno_core::ops_builtin::func_op_read (69 samples, 1.39%)</title><rect x="86.0146%" y="149" width="1.3945%" height="15" fill="rgb(239,54,39)" fg:x="4256" fg:w="69"/><text x="86.2646%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.38%)</title><rect x="87.0251%" y="133" width="0.3840%" height="15" fill="rgb(230,99,41)" fg:x="4306" fg:w="19"/><text x="87.2751%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.30%)</title><rect x="87.1059%" y="117" width="0.3032%" height="15" fill="rgb(253,106,12)" fg:x="4310" fg:w="15"/><text x="87.3559%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.26%)</title><rect x="87.1463%" y="101" width="0.2627%" height="15" fill="rgb(213,46,41)" fg:x="4312" fg:w="13"/><text x="87.3963%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.18%)</title><rect x="87.2272%" y="85" width="0.1819%" height="15" fill="rgb(215,133,35)" fg:x="4316" fg:w="9"/><text x="87.4772%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::External::Value (2 samples, 0.04%)</title><rect x="87.4091%" y="149" width="0.0404%" height="15" fill="rgb(213,28,5)" fg:x="4325" fg:w="2"/><text x="87.6591%" y="159.50"></text></g><g><title>0x11000de34 (72 samples, 1.46%)</title><rect x="86.0146%" y="165" width="1.4551%" height="15" fill="rgb(215,77,49)" fg:x="4256" fg:w="72"/><text x="86.2646%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="87.4495%" y="149" width="0.0202%" height="15" fill="rgb(248,100,22)" fg:x="4327" fg:w="1"/><text x="87.6995%" y="159.50"></text></g><g><title>0x11000de50 (1 samples, 0.02%)</title><rect x="87.4697%" y="165" width="0.0202%" height="15" fill="rgb(208,67,9)" fg:x="4328" fg:w="1"/><text x="87.7197%" y="175.50"></text></g><g><title>0x11000de64 (2 samples, 0.04%)</title><rect x="87.4899%" y="165" width="0.0404%" height="15" fill="rgb(219,133,21)" fg:x="4329" fg:w="2"/><text x="87.7399%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_AllocateRegularInYoungGeneration (1 samples, 0.02%)</title><rect x="87.5303%" y="149" width="0.0202%" height="15" fill="rgb(246,46,29)" fg:x="4331" fg:w="1"/><text x="87.7803%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::AllocationCounter::InvokeAllocationObservers (1 samples, 0.02%)</title><rect x="87.7122%" y="85" width="0.0202%" height="15" fill="rgb(246,185,52)" fg:x="4340" fg:w="1"/><text x="87.9622%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengeJob::ScheduleTaskIfNeeded (1 samples, 0.02%)</title><rect x="87.7122%" y="69" width="0.0202%" height="15" fill="rgb(252,136,11)" fg:x="4340" fg:w="1"/><text x="87.9622%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::MemoryChunkLayout::AllocatableMemoryInDataPage (1 samples, 0.02%)</title><rect x="87.7122%" y="53" width="0.0202%" height="15" fill="rgb(219,138,53)" fg:x="4340" fg:w="1"/><text x="87.9622%" y="63.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.02%)</title><rect x="87.7324%" y="85" width="0.0202%" height="15" fill="rgb(211,51,23)" fg:x="4341" fg:w="1"/><text x="87.9824%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::Space::RoundSizeDownToObjectAlignment (1 samples, 0.02%)</title><rect x="87.7324%" y="69" width="0.0202%" height="15" fill="rgb(247,221,28)" fg:x="4341" fg:w="1"/><text x="87.9824%" y="79.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (3 samples, 0.06%)</title><rect x="87.7122%" y="133" width="0.0606%" height="15" fill="rgb(251,222,45)" fg:x="4340" fg:w="3"/><text x="87.9622%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (3 samples, 0.06%)</title><rect x="87.7122%" y="117" width="0.0606%" height="15" fill="rgb(217,162,53)" fg:x="4340" fg:w="3"/><text x="87.9622%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (3 samples, 0.06%)</title><rect x="87.7122%" y="101" width="0.0606%" height="15" fill="rgb(229,93,14)" fg:x="4340" fg:w="3"/><text x="87.9622%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (1 samples, 0.02%)</title><rect x="87.7526%" y="85" width="0.0202%" height="15" fill="rgb(209,67,49)" fg:x="4342" fg:w="1"/><text x="88.0026%" y="95.50"></text></g><g><title>0x11000de6c (16 samples, 0.32%)</title><rect x="87.5303%" y="165" width="0.3234%" height="15" fill="rgb(213,87,29)" fg:x="4331" fg:w="16"/><text x="87.7803%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitUncaught (15 samples, 0.30%)</title><rect x="87.5505%" y="149" width="0.3032%" height="15" fill="rgb(205,151,52)" fg:x="4332" fg:w="15"/><text x="87.8005%" y="159.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (4 samples, 0.08%)</title><rect x="87.7728%" y="133" width="0.0808%" height="15" fill="rgb(253,215,39)" fg:x="4343" fg:w="4"/><text x="88.0228%" y="143.50"></text></g><g><title>0x11000de7c (1 samples, 0.02%)</title><rect x="87.8537%" y="165" width="0.0202%" height="15" fill="rgb(221,220,41)" fg:x="4347" fg:w="1"/><text x="88.1037%" y="175.50"></text></g><g><title>0x11000dea8 (1 samples, 0.02%)</title><rect x="87.8739%" y="165" width="0.0202%" height="15" fill="rgb(218,133,21)" fg:x="4348" fg:w="1"/><text x="88.1239%" y="175.50"></text></g><g><title>0x11000dec8 (1 samples, 0.02%)</title><rect x="87.8941%" y="165" width="0.0202%" height="15" fill="rgb(221,193,43)" fg:x="4349" fg:w="1"/><text x="88.1441%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (1 samples, 0.02%)</title><rect x="87.9143%" y="117" width="0.0202%" height="15" fill="rgb(240,128,52)" fg:x="4350" fg:w="1"/><text x="88.1643%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::GetFillToAlign (1 samples, 0.02%)</title><rect x="87.9143%" y="101" width="0.0202%" height="15" fill="rgb(253,114,12)" fg:x="4350" fg:w="1"/><text x="88.1643%" y="111.50"></text></g><g><title>0x11000e1a4 (2 samples, 0.04%)</title><rect x="87.9143%" y="165" width="0.0404%" height="15" fill="rgb(215,223,47)" fg:x="4350" fg:w="2"/><text x="88.1643%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.04%)</title><rect x="87.9143%" y="149" width="0.0404%" height="15" fill="rgb(248,225,23)" fg:x="4350" fg:w="2"/><text x="88.1643%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (2 samples, 0.04%)</title><rect x="87.9143%" y="133" width="0.0404%" height="15" fill="rgb(250,108,0)" fg:x="4350" fg:w="2"/><text x="88.1643%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.02%)</title><rect x="87.9345%" y="117" width="0.0202%" height="15" fill="rgb(228,208,7)" fg:x="4351" fg:w="1"/><text x="88.1845%" y="127.50"></text></g><g><title>0x11000e2cc (1 samples, 0.02%)</title><rect x="87.9547%" y="165" width="0.0202%" height="15" fill="rgb(244,45,10)" fg:x="4352" fg:w="1"/><text x="88.2047%" y="175.50"></text></g><g><title>0x11000e2fc (4 samples, 0.08%)</title><rect x="87.9749%" y="165" width="0.0808%" height="15" fill="rgb(207,125,25)" fg:x="4353" fg:w="4"/><text x="88.2249%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="88.0558%" y="165" width="0.0202%" height="15" fill="rgb(210,195,18)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="88.0558%" y="149" width="0.0202%" height="15" fill="rgb(249,80,12)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="88.0558%" y="133" width="0.0202%" height="15" fill="rgb(221,65,9)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="88.0558%" y="117" width="0.0202%" height="15" fill="rgb(235,49,36)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="127.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="88.0558%" y="101" width="0.0202%" height="15" fill="rgb(225,32,20)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.02%)</title><rect x="88.0558%" y="85" width="0.0202%" height="15" fill="rgb(215,141,46)" fg:x="4357" fg:w="1"/><text x="88.3058%" y="95.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (12 samples, 0.24%)</title><rect x="88.0760%" y="165" width="0.2425%" height="15" fill="rgb(250,160,47)" fg:x="4358" fg:w="12"/><text x="88.3260%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadICTrampoline (3 samples, 0.06%)</title><rect x="88.3185%" y="165" width="0.0606%" height="15" fill="rgb(216,222,40)" fg:x="4370" fg:w="3"/><text x="88.5685%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (2,040 samples, 41.23%)</title><rect x="47.1706%" y="181" width="41.2288%" height="15" fill="rgb(234,217,39)" fg:x="2334" fg:w="2040"/><text x="47.4206%" y="191.50">http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (1 samples, 0.02%)</title><rect x="88.3791%" y="165" width="0.0202%" height="15" fill="rgb(207,178,40)" fg:x="4373" fg:w="1"/><text x="88.6291%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (2,069 samples, 41.81%)</title><rect x="46.7057%" y="229" width="41.8149%" height="15" fill="rgb(221,136,13)" fg:x="2311" fg:w="2069"/><text x="46.9557%" y="239.50">http_bench_json_ops`Builtins_JSRunMicrotasksEntry</text></g><g><title>http_bench_json_ops`Builtins_RunMicrotasks (2,066 samples, 41.75%)</title><rect x="46.7664%" y="213" width="41.7542%" height="15" fill="rgb(249,199,10)" fg:x="2314" fg:w="2066"/><text x="47.0164%" y="223.50">http_bench_json_ops`Builtins_RunMicrotasks</text></g><g><title>http_bench_json_ops`Builtins_PromiseFulfillReactionJob (2,048 samples, 41.39%)</title><rect x="47.1302%" y="197" width="41.3905%" height="15" fill="rgb(249,222,13)" fg:x="2332" fg:w="2048"/><text x="47.3802%" y="207.50">http_bench_json_ops`Builtins_PromiseFulfillReactionJob</text></g><g><title>http_bench_json_ops`Builtins_ResumeGeneratorTrampoline (6 samples, 0.12%)</title><rect x="88.3994%" y="181" width="0.1213%" height="15" fill="rgb(244,185,38)" fg:x="4374" fg:w="6"/><text x="88.6494%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2,080 samples, 42.04%)</title><rect x="46.5238%" y="245" width="42.0372%" height="15" fill="rgb(236,202,9)" fg:x="2302" fg:w="2080"/><text x="46.7738%" y="255.50">http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::i..</text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (2 samples, 0.04%)</title><rect x="88.5206%" y="229" width="0.0404%" height="15" fill="rgb(250,229,37)" fg:x="4380" fg:w="2"/><text x="88.7706%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::DumpOnJavascriptExecution::IsAllowed (1 samples, 0.02%)</title><rect x="88.5610%" y="245" width="0.0202%" height="15" fill="rgb(206,174,23)" fg:x="4382" fg:w="1"/><text x="88.8110%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::UnregisterTryCatchHandler (2 samples, 0.04%)</title><rect x="88.5812%" y="245" width="0.0404%" height="15" fill="rgb(211,33,43)" fg:x="4383" fg:w="2"/><text x="88.8312%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="88.6217%" y="245" width="0.0202%" height="15" fill="rgb(245,58,50)" fg:x="4385" fg:w="1"/><text x="88.8717%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2,124 samples, 42.93%)</title><rect x="45.7357%" y="309" width="42.9264%" height="15" fill="rgb(244,68,36)" fg:x="2263" fg:w="2124"/><text x="45.9857%" y="319.50">http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInt..</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2,119 samples, 42.83%)</title><rect x="45.8367%" y="293" width="42.8254%" height="15" fill="rgb(232,229,15)" fg:x="2268" fg:w="2119"/><text x="46.0867%" y="303.50">http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (2,105 samples, 42.54%)</title><rect x="46.1196%" y="277" width="42.5424%" height="15" fill="rgb(254,30,23)" fg:x="2282" fg:w="2105"/><text x="46.3696%" y="287.50">http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (2,092 samples, 42.28%)</title><rect x="46.3824%" y="261" width="42.2797%" height="15" fill="rgb(235,160,14)" fg:x="2295" fg:w="2092"/><text x="46.6324%" y="271.50">http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTr..</text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::~SaveContext (1 samples, 0.02%)</title><rect x="88.6419%" y="245" width="0.0202%" height="15" fill="rgb(212,155,44)" fg:x="4386" fg:w="1"/><text x="88.8919%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2,233 samples, 45.13%)</title><rect x="43.5530%" y="341" width="45.1293%" height="15" fill="rgb(226,2,50)" fg:x="2155" fg:w="2233"/><text x="43.8030%" y="351.50">http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v..</text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (2,125 samples, 42.95%)</title><rect x="45.7357%" y="325" width="42.9466%" height="15" fill="rgb(234,177,6)" fg:x="2263" fg:w="2125"/><text x="45.9857%" y="335.50">http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackIn..</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (1 samples, 0.02%)</title><rect x="88.6621%" y="309" width="0.0202%" height="15" fill="rgb(217,24,9)" fg:x="4387" fg:w="1"/><text x="88.9121%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::HasPendingBackgroundTasks (2 samples, 0.04%)</title><rect x="88.6823%" y="341" width="0.0404%" height="15" fill="rgb(220,13,46)" fg:x="4388" fg:w="2"/><text x="88.9323%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (1 samples, 0.02%)</title><rect x="88.7227%" y="341" width="0.0202%" height="15" fill="rgb(239,221,27)" fg:x="4390" fg:w="1"/><text x="88.9727%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (2 samples, 0.04%)</title><rect x="88.7429%" y="341" width="0.0404%" height="15" fill="rgb(222,198,25)" fg:x="4391" fg:w="2"/><text x="88.9929%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (1 samples, 0.02%)</title><rect x="88.7833%" y="341" width="0.0202%" height="15" fill="rgb(211,99,13)" fg:x="4393" fg:w="1"/><text x="89.0333%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (3 samples, 0.06%)</title><rect x="88.8036%" y="341" width="0.0606%" height="15" fill="rgb(232,111,31)" fg:x="4394" fg:w="3"/><text x="89.0536%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::ClearKeptObjects (1 samples, 0.02%)</title><rect x="88.8642%" y="341" width="0.0202%" height="15" fill="rgb(245,82,37)" fg:x="4397" fg:w="1"/><text x="89.1142%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (1 samples, 0.02%)</title><rect x="88.8844%" y="341" width="0.0202%" height="15" fill="rgb(227,149,46)" fg:x="4398" fg:w="1"/><text x="89.1344%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (1 samples, 0.02%)</title><rect x="88.8844%" y="325" width="0.0202%" height="15" fill="rgb(218,36,50)" fg:x="4398" fg:w="1"/><text x="89.1344%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (10 samples, 0.20%)</title><rect x="88.9046%" y="341" width="0.2021%" height="15" fill="rgb(226,80,48)" fg:x="4399" fg:w="10"/><text x="89.1546%" y="351.50"></text></g><g><title>http_bench_json_ops`non-virtual thunk to v8::internal::ScavengeJob::Task::~Task (1 samples, 0.02%)</title><rect x="89.1067%" y="325" width="0.0202%" height="15" fill="rgb(238,224,15)" fg:x="4409" fg:w="1"/><text x="89.3567%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.02%)</title><rect x="89.1067%" y="309" width="0.0202%" height="15" fill="rgb(241,136,10)" fg:x="4409" fg:w="1"/><text x="89.3567%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::UpdateStatistics (1 samples, 0.02%)</title><rect x="89.1269%" y="293" width="0.0202%" height="15" fill="rgb(208,32,45)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Print (1 samples, 0.02%)</title><rect x="89.1269%" y="277" width="0.0202%" height="15" fill="rgb(207,135,9)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Output (1 samples, 0.02%)</title><rect x="89.1269%" y="261" width="0.0202%" height="15" fill="rgb(206,86,44)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::base::OS::VSNPrintF (1 samples, 0.02%)</title><rect x="89.1269%" y="245" width="0.0202%" height="15" fill="rgb(245,177,15)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="255.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="89.1269%" y="229" width="0.0202%" height="15" fill="rgb(206,64,50)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="239.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="89.1269%" y="213" width="0.0202%" height="15" fill="rgb(234,36,40)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="89.1269%" y="197" width="0.0202%" height="15" fill="rgb(213,64,8)" fg:x="4410" fg:w="1"/><text x="89.3769%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::IterateYoungStrongAndDependentRoots (1 samples, 0.02%)</title><rect x="89.1471%" y="245" width="0.0202%" height="15" fill="rgb(210,75,36)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="255.50"></text></g><g><title>http_bench_json_ops`heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="89.1471%" y="229" width="0.0202%" height="15" fill="rgb(229,88,21)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="239.50"></text></g><g><title>http_bench_json_ops`heap::base::Worklist&lt;std::__1::pair&lt;v8::internal::HeapObject, int&gt;, (unsigned short)256&gt;::Local::PublishPushSegment (1 samples, 0.02%)</title><rect x="89.1471%" y="213" width="0.0202%" height="15" fill="rgb(252,204,47)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="89.1471%" y="197" width="0.0202%" height="15" fill="rgb(208,77,27)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.1471%" y="181" width="0.0202%" height="15" fill="rgb(221,76,26)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.1471%" y="165" width="0.0202%" height="15" fill="rgb(225,139,18)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="89.1471%" y="149" width="0.0202%" height="15" fill="rgb(230,137,11)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="89.1471%" y="133" width="0.0202%" height="15" fill="rgb(212,28,1)" fg:x="4411" fg:w="1"/><text x="89.3971%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.02%)</title><rect x="89.1673%" y="245" width="0.0202%" height="15" fill="rgb(248,164,17)" fg:x="4412" fg:w="1"/><text x="89.4173%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="89.1673%" y="229" width="0.0202%" height="15" fill="rgb(222,171,42)" fg:x="4412" fg:w="1"/><text x="89.4173%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::RootVisitor::Synchronize (1 samples, 0.02%)</title><rect x="89.1876%" y="245" width="0.0202%" height="15" fill="rgb(243,84,45)" fg:x="4413" fg:w="1"/><text x="89.4376%" y="255.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::BodyDescriptorApply&lt;v8::internal::CallIterateBody, v8::internal::Map&amp;, v8::internal::HeapObject&amp;, int&amp;, v8::internal::IterateAndScavengePromotedObjectsVisitor*&amp;&gt; (1 samples, 0.02%)</title><rect x="89.2280%" y="181" width="0.0202%" height="15" fill="rgb(252,49,23)" fg:x="4415" fg:w="1"/><text x="89.4780%" y="191.50"></text></g><g><title>http_bench_json_ops`heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="89.2280%" y="165" width="0.0202%" height="15" fill="rgb(215,19,7)" fg:x="4415" fg:w="1"/><text x="89.4780%" y="175.50"></text></g><g><title>http_bench_json_ops`void v8::internal::BodyDescriptorBase::IterateJSObjectBodyImpl&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.02%)</title><rect x="89.2482%" y="181" width="0.0202%" height="15" fill="rgb(238,81,41)" fg:x="4416" fg:w="1"/><text x="89.4982%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::Join (4 samples, 0.08%)</title><rect x="89.2078%" y="229" width="0.0808%" height="15" fill="rgb(210,199,37)" fg:x="4414" fg:w="4"/><text x="89.4578%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::JobTask::ProcessItems (4 samples, 0.08%)</title><rect x="89.2078%" y="213" width="0.0808%" height="15" fill="rgb(244,192,49)" fg:x="4414" fg:w="4"/><text x="89.4578%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::Process (4 samples, 0.08%)</title><rect x="89.2078%" y="197" width="0.0808%" height="15" fill="rgb(226,211,11)" fg:x="4414" fg:w="4"/><text x="89.4578%" y="207.50"></text></g><g><title>http_bench_json_ops`void v8::internal::JSFunction::BodyDescriptor::IterateBody&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.02%)</title><rect x="89.2684%" y="181" width="0.0202%" height="15" fill="rgb(236,162,54)" fg:x="4417" fg:w="1"/><text x="89.5184%" y="191.50"></text></g><g><title>http_bench_json_ops`heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="89.2684%" y="165" width="0.0202%" height="15" fill="rgb(220,229,9)" fg:x="4417" fg:w="1"/><text x="89.5184%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobHandle::Join (5 samples, 0.10%)</title><rect x="89.2078%" y="245" width="0.1011%" height="15" fill="rgb(250,87,22)" fg:x="4414" fg:w="5"/><text x="89.4578%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.02%)</title><rect x="89.2886%" y="229" width="0.0202%" height="15" fill="rgb(239,43,17)" fg:x="4418" fg:w="1"/><text x="89.5386%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::base::ConditionVariable::~ConditionVariable (1 samples, 0.02%)</title><rect x="89.2886%" y="213" width="0.0202%" height="15" fill="rgb(231,177,25)" fg:x="4418" fg:w="1"/><text x="89.5386%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.02%)</title><rect x="89.2886%" y="197" width="0.0202%" height="15" fill="rgb(219,179,1)" fg:x="4418" fg:w="1"/><text x="89.5386%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengeJob::Task::RunInternal (10 samples, 0.20%)</title><rect x="89.1269%" y="325" width="0.2021%" height="15" fill="rgb(238,219,53)" fg:x="4410" fg:w="10"/><text x="89.3769%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::CollectGarbage (10 samples, 0.20%)</title><rect x="89.1269%" y="309" width="0.2021%" height="15" fill="rgb(232,167,36)" fg:x="4410" fg:w="10"/><text x="89.3769%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::PerformGarbageCollection (9 samples, 0.18%)</title><rect x="89.1471%" y="293" width="0.1819%" height="15" fill="rgb(244,19,51)" fg:x="4411" fg:w="9"/><text x="89.3971%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::Scavenge (9 samples, 0.18%)</title><rect x="89.1471%" y="277" width="0.1819%" height="15" fill="rgb(224,6,22)" fg:x="4411" fg:w="9"/><text x="89.3971%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::CollectGarbage (9 samples, 0.18%)</title><rect x="89.1471%" y="261" width="0.1819%" height="15" fill="rgb(224,145,5)" fg:x="4411" fg:w="9"/><text x="89.3971%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="89.3088%" y="245" width="0.0202%" height="15" fill="rgb(234,130,49)" fg:x="4419" fg:w="1"/><text x="89.5588%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex, (2 samples, 0.04%)</title><rect x="89.3290%" y="325" width="0.0404%" height="15" fill="rgb(254,6,2)" fg:x="4420" fg:w="2"/><text x="89.5790%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex, (1 samples, 0.02%)</title><rect x="89.3897%" y="309" width="0.0202%" height="15" fill="rgb(208,96,46)" fg:x="4423" fg:w="1"/><text x="89.6397%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultPlatform::PumpMessageLoop (17 samples, 0.34%)</title><rect x="89.1067%" y="341" width="0.3436%" height="15" fill="rgb(239,3,39)" fg:x="4409" fg:w="17"/><text x="89.3567%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (4 samples, 0.08%)</title><rect x="89.3694%" y="325" width="0.0808%" height="15" fill="rgb(233,210,1)" fg:x="4422" fg:w="4"/><text x="89.6194%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex,  (2 samples, 0.04%)</title><rect x="89.4099%" y="309" width="0.0404%" height="15" fill="rgb(244,137,37)" fg:x="4424" fg:w="2"/><text x="89.6599%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromDelayedQueueLocked(v8::base::LockGuard&lt;v8::base::Mutex, (2 samples, 0.04%)</title><rect x="89.4099%" y="293" width="0.0404%" height="15" fill="rgb(240,136,2)" fg:x="4424" fg:w="2"/><text x="89.6599%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::exception (4 samples, 0.08%)</title><rect x="89.4503%" y="341" width="0.0808%" height="15" fill="rgb(239,18,37)" fg:x="4426" fg:w="4"/><text x="89.7003%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (3 samples, 0.06%)</title><rect x="89.5513%" y="325" width="0.0606%" height="15" fill="rgb(218,185,22)" fg:x="4431" fg:w="3"/><text x="89.8013%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (5 samples, 0.10%)</title><rect x="89.5311%" y="341" width="0.1011%" height="15" fill="rgb(225,218,4)" fg:x="4430" fg:w="5"/><text x="89.7811%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::GetCurrentStackPosition (1 samples, 0.02%)</title><rect x="89.6120%" y="325" width="0.0202%" height="15" fill="rgb(230,182,32)" fg:x="4434" fg:w="1"/><text x="89.8620%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="89.6322%" y="341" width="0.0202%" height="15" fill="rgb(242,56,43)" fg:x="4435" fg:w="1"/><text x="89.8822%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.28%)</title><rect x="89.6524%" y="341" width="0.2829%" height="15" fill="rgb(233,99,24)" fg:x="4436" fg:w="14"/><text x="89.9024%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.06%)</title><rect x="89.8747%" y="325" width="0.0606%" height="15" fill="rgb(234,209,42)" fg:x="4447" fg:w="3"/><text x="90.1247%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.06%)</title><rect x="89.9353%" y="341" width="0.0606%" height="15" fill="rgb(227,7,12)" fg:x="4450" fg:w="3"/><text x="90.1853%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.04%)</title><rect x="89.9960%" y="341" width="0.0404%" height="15" fill="rgb(245,203,43)" fg:x="4453" fg:w="2"/><text x="90.2460%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="90.0364%" y="341" width="0.0202%" height="15" fill="rgb(238,205,33)" fg:x="4455" fg:w="1"/><text x="90.2864%" y="351.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (4,435 samples, 89.63%)</title><rect x="0.4648%" y="357" width="89.6322%" height="15" fill="rgb(231,56,7)" fg:x="23" fg:w="4435"/><text x="0.7148%" y="367.50">http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="90.0566%" y="341" width="0.0404%" height="15" fill="rgb(244,186,29)" fg:x="4456" fg:w="2"/><text x="90.3066%" y="351.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (1 samples, 0.02%)</title><rect x="90.0970%" y="357" width="0.0202%" height="15" fill="rgb(234,111,31)" fg:x="4458" fg:w="1"/><text x="90.3470%" y="367.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::clone_arc_raw (2 samples, 0.04%)</title><rect x="90.1172%" y="357" width="0.0404%" height="15" fill="rgb(241,149,10)" fg:x="4459" fg:w="2"/><text x="90.3672%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2 samples, 0.04%)</title><rect x="90.1576%" y="357" width="0.0404%" height="15" fill="rgb(249,206,44)" fg:x="4461" fg:w="2"/><text x="90.4076%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (1 samples, 0.02%)</title><rect x="90.1981%" y="357" width="0.0202%" height="15" fill="rgb(251,153,30)" fg:x="4463" fg:w="1"/><text x="90.4481%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (1 samples, 0.02%)</title><rect x="90.2183%" y="357" width="0.0202%" height="15" fill="rgb(239,152,38)" fg:x="4464" fg:w="1"/><text x="90.4683%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (1 samples, 0.02%)</title><rect x="90.2385%" y="357" width="0.0202%" height="15" fill="rgb(249,139,47)" fg:x="4465" fg:w="1"/><text x="90.4885%" y="367.50"></text></g><g><title>http_bench_json_ops`v8__Undefined (1 samples, 0.02%)</title><rect x="90.2587%" y="357" width="0.0202%" height="15" fill="rgb(244,64,35)" fg:x="4466" fg:w="1"/><text x="90.5087%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.04%)</title><rect x="90.2789%" y="357" width="0.0404%" height="15" fill="rgb(216,46,15)" fg:x="4467" fg:w="2"/><text x="90.5289%" y="367.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,463 samples, 90.20%)</title><rect x="0.1415%" y="373" width="90.1981%" height="15" fill="rgb(250,74,19)" fg:x="7" fg:w="4463"/><text x="0.3915%" y="383.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="90.3193%" y="357" width="0.0202%" height="15" fill="rgb(249,42,33)" fg:x="4469" fg:w="1"/><text x="90.5693%" y="367.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="90.3395%" y="357" width="0.0202%" height="15" fill="rgb(242,149,17)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="90.3395%" y="341" width="0.0202%" height="15" fill="rgb(244,29,21)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.3395%" y="325" width="0.0202%" height="15" fill="rgb(220,130,37)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="90.3395%" y="309" width="0.0202%" height="15" fill="rgb(211,67,2)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="319.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="90.3395%" y="293" width="0.0202%" height="15" fill="rgb(235,68,52)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="303.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="90.3395%" y="277" width="0.0202%" height="15" fill="rgb(246,142,3)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.3395%" y="261" width="0.0202%" height="15" fill="rgb(241,25,7)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.3395%" y="245" width="0.0202%" height="15" fill="rgb(242,119,39)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_ArrayForEach (1 samples, 0.02%)</title><rect x="90.3395%" y="229" width="0.0202%" height="15" fill="rgb(241,98,45)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.3395%" y="213" width="0.0202%" height="15" fill="rgb(254,28,30)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="223.50"></text></g><g><title>0x1100084f4 (1 samples, 0.02%)</title><rect x="90.3395%" y="197" width="0.0202%" height="15" fill="rgb(241,142,54)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="207.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="90.3395%" y="181" width="0.0202%" height="15" fill="rgb(222,85,15)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_ReflectDefineProperty (1 samples, 0.02%)</title><rect x="90.3395%" y="165" width="0.0202%" height="15" fill="rgb(210,85,47)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::JSReceiver::DefineOwnProperty(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSReceiver&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::PropertyDescriptor*, v8::Maybe (1 samples, 0.02%)</title><rect x="90.3395%" y="149" width="0.0202%" height="15" fill="rgb(224,206,25)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::PropertyKey::PropertyKey(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.3395%" y="133" width="0.0202%" height="15" fill="rgb(243,201,19)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::StringTable::LookupString(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.3395%" y="117" width="0.0202%" height="15" fill="rgb(236,59,4)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::String::SlowFlatten(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.3395%" y="101" width="0.0202%" height="15" fill="rgb(254,179,45)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="111.50"></text></g><g><title>http_bench_json_ops`void v8::internal::String::WriteToFlat&lt;unsigned char&gt; (1 samples, 0.02%)</title><rect x="90.3395%" y="85" width="0.0202%" height="15" fill="rgb(226,14,10)" fg:x="4470" fg:w="1"/><text x="90.5895%" y="95.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::new (2 samples, 0.04%)</title><rect x="90.3395%" y="373" width="0.0404%" height="15" fill="rgb(244,27,41)" fg:x="4470" fg:w="2"/><text x="90.5895%" y="383.50"></text></g><g><title>http_bench_json_ops`std::sync::once::Once::call_inner (1 samples, 0.02%)</title><rect x="90.3597%" y="357" width="0.0202%" height="15" fill="rgb(235,35,32)" fg:x="4471" fg:w="1"/><text x="90.6097%" y="367.50"></text></g><g><title>http_bench_json_ops`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.02%)</title><rect x="90.3597%" y="341" width="0.0202%" height="15" fill="rgb(218,68,31)" fg:x="4471" fg:w="1"/><text x="90.6097%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::V8::Initialize (1 samples, 0.02%)</title><rect x="90.3597%" y="325" width="0.0202%" height="15" fill="rgb(207,120,37)" fg:x="4471" fg:w="1"/><text x="90.6097%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::V8::Initialize (1 samples, 0.02%)</title><rect x="90.3597%" y="309" width="0.0202%" height="15" fill="rgb(227,98,0)" fg:x="4471" fg:w="1"/><text x="90.6097%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (1 samples, 0.02%)</title><rect x="90.3597%" y="293" width="0.0202%" height="15" fill="rgb(207,7,3)" fg:x="4471" fg:w="1"/><text x="90.6097%" y="303.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (1 samples, 0.02%)</title><rect x="90.3800%" y="373" width="0.0202%" height="15" fill="rgb(206,98,19)" fg:x="4472" fg:w="1"/><text x="90.6300%" y="383.50"></text></g><g><title>http_bench_json_ops`tokio::process::imp::GlobalOrphanQueue::reap_orphans (2 samples, 0.04%)</title><rect x="90.5012%" y="357" width="0.0404%" height="15" fill="rgb(217,5,26)" fg:x="4478" fg:w="2"/><text x="90.7512%" y="367.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::wake_arc_raw (1 samples, 0.02%)</title><rect x="90.7842%" y="341" width="0.0202%" height="15" fill="rgb(235,190,38)" fg:x="4492" fg:w="1"/><text x="91.0342%" y="351.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::Driver::turn (97 samples, 1.96%)</title><rect x="90.5416%" y="357" width="1.9604%" height="15" fill="rgb(247,86,24)" fg:x="4480" fg:w="97"/><text x="90.7916%" y="367.50">h..</text></g><g><title>http_bench_json_ops`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (84 samples, 1.70%)</title><rect x="90.8044%" y="341" width="1.6977%" height="15" fill="rgb(205,101,16)" fg:x="4493" fg:w="84"/><text x="91.0544%" y="351.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::wake_arc_raw (61 samples, 1.23%)</title><rect x="91.2692%" y="325" width="1.2328%" height="15" fill="rgb(246,168,33)" fg:x="4516" fg:w="61"/><text x="91.5192%" y="335.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (61 samples, 1.23%)</title><rect x="91.2692%" y="309" width="1.2328%" height="15" fill="rgb(231,114,1)" fg:x="4516" fg:w="61"/><text x="91.5192%" y="319.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::wake_arc_raw (52 samples, 1.05%)</title><rect x="91.4511%" y="293" width="1.0509%" height="15" fill="rgb(207,184,53)" fg:x="4525" fg:w="52"/><text x="91.7011%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent (52 samples, 1.05%)</title><rect x="91.4511%" y="277" width="1.0509%" height="15" fill="rgb(224,95,51)" fg:x="4525" fg:w="52"/><text x="91.7011%" y="287.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (2 samples, 0.04%)</title><rect x="92.5020%" y="357" width="0.0404%" height="15" fill="rgb(212,188,45)" fg:x="4577" fg:w="2"/><text x="92.7520%" y="367.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (4 samples, 0.08%)</title><rect x="92.5627%" y="341" width="0.0808%" height="15" fill="rgb(223,154,38)" fg:x="4580" fg:w="4"/><text x="92.8127%" y="351.50"></text></g><g><title>http_bench_json_ops`tokio::signal::unix::driver::Driver::process (7 samples, 0.14%)</title><rect x="92.5424%" y="357" width="0.1415%" height="15" fill="rgb(251,22,52)" fg:x="4579" fg:w="7"/><text x="92.7924%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.04%)</title><rect x="92.6435%" y="341" width="0.0404%" height="15" fill="rgb(229,209,22)" fg:x="4584" fg:w="2"/><text x="92.8935%" y="351.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (444 samples, 8.97%)</title><rect x="90.4002%" y="373" width="8.9733%" height="15" fill="rgb(234,138,34)" fg:x="4473" fg:w="444"/><text x="90.6502%" y="383.50">http_bench_js..</text></g><g><title>libsystem_kernel.dylib`kevent (331 samples, 6.69%)</title><rect x="92.6839%" y="357" width="6.6896%" height="15" fill="rgb(212,95,11)" fg:x="4586" fg:w="331"/><text x="92.9339%" y="367.50">libsystem..</text></g><g><title>http_bench_json_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (1 samples, 0.02%)</title><rect x="99.3735%" y="373" width="0.0202%" height="15" fill="rgb(240,179,47)" fg:x="4917" fg:w="1"/><text x="99.6235%" y="383.50"></text></g><g><title>http_bench_json_ops`v8_inspector::V8Inspector::create (1 samples, 0.02%)</title><rect x="99.3937%" y="373" width="0.0202%" height="15" fill="rgb(240,163,11)" fg:x="4918" fg:w="1"/><text x="99.6437%" y="383.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::main (4,924 samples, 99.51%)</title><rect x="0.0202%" y="389" width="99.5150%" height="15" fill="rgb(236,37,12)" fg:x="1" fg:w="4924"/><text x="0.2702%" y="399.50">http_bench_json_ops`http_bench_json_ops::main</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.12%)</title><rect x="99.4139%" y="373" width="0.1213%" height="15" fill="rgb(232,164,16)" fg:x="4919" fg:w="6"/><text x="99.6639%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="99.5352%" y="389" width="0.0202%" height="15" fill="rgb(244,205,15)" fg:x="4925" fg:w="1"/><text x="99.7852%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.16%)</title><rect x="99.5554%" y="389" width="0.1617%" height="15" fill="rgb(223,117,47)" fg:x="4926" fg:w="8"/><text x="99.8054%" y="399.50"></text></g><g><title>dyld`start (4,937 samples, 99.78%)</title><rect x="0.0000%" y="437" width="99.7777%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="4937"/><text x="0.2500%" y="447.50">dyld`start</text></g><g><title>http_bench_json_ops`main (4,937 samples, 99.78%)</title><rect x="0.0000%" y="421" width="99.7777%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="4937"/><text x="0.2500%" y="431.50">http_bench_json_ops`main</text></g><g><title>http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (4,937 samples, 99.78%)</title><rect x="0.0000%" y="405" width="99.7777%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="4937"/><text x="0.2500%" y="415.50">http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.06%)</title><rect x="99.7171%" y="389" width="0.0606%" height="15" fill="rgb(254,188,9)" fg:x="4934" fg:w="3"/><text x="99.9671%" y="399.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (1 samples, 0.02%)</title><rect x="99.7777%" y="389" width="0.0202%" height="15" fill="rgb(206,112,54)" fg:x="4937" fg:w="1"/><text x="100.0277%" y="399.50"></text></g><g><title>dyld`dyld4::RuntimeState::withLoadersReadLock(void  (1 samples, 0.02%)</title><rect x="99.7777%" y="373" width="0.0202%" height="15" fill="rgb(216,84,49)" fg:x="4937" fg:w="1"/><text x="100.0277%" y="383.50"></text></g><g><title>dyld`invocation function for block in dyld4::APIs::dlsym (1 samples, 0.02%)</title><rect x="99.7777%" y="357" width="0.0202%" height="15" fill="rgb(214,194,35)" fg:x="4937" fg:w="1"/><text x="100.0277%" y="367.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (1 samples, 0.02%)</title><rect x="99.7777%" y="341" width="0.0202%" height="15" fill="rgb(249,28,3)" fg:x="4937" fg:w="1"/><text x="100.0277%" y="351.50"></text></g><g><title>dyld`dyld3::MachOLoaded::trieWalk (1 samples, 0.02%)</title><rect x="99.7777%" y="325" width="0.0202%" height="15" fill="rgb(222,56,52)" fg:x="4937" fg:w="1"/><text x="100.0277%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::AssembleCode (1 samples, 0.02%)</title><rect x="99.7979%" y="309" width="0.0202%" height="15" fill="rgb(245,217,50)" fg:x="4938" fg:w="1"/><text x="100.0479%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::CodeGenerator::AssembleCode (1 samples, 0.02%)</title><rect x="99.7979%" y="293" width="0.0202%" height="15" fill="rgb(213,201,24)" fg:x="4938" fg:w="1"/><text x="100.0479%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Deoptimizer::GetDeoptimizationEntry (1 samples, 0.02%)</title><rect x="99.7979%" y="277" width="0.0202%" height="15" fill="rgb(248,116,28)" fg:x="4938" fg:w="1"/><text x="100.0479%" y="287.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EarlyGraphTrimmingPhase&gt; (1 samples, 0.02%)</title><rect x="99.8181%" y="293" width="0.0202%" height="15" fill="rgb(219,72,43)" fg:x="4939" fg:w="1"/><text x="100.0681%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EarlyGraphTrimmingPhase::Run (1 samples, 0.02%)</title><rect x="99.8181%" y="277" width="0.0202%" height="15" fill="rgb(209,138,14)" fg:x="4939" fg:w="1"/><text x="100.0681%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphTrimmer::TrimGraph (1 samples, 0.02%)</title><rect x="99.8181%" y="261" width="0.0202%" height="15" fill="rgb(222,18,33)" fg:x="4939" fg:w="1"/><text x="100.0681%" y="271.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (1 samples, 0.02%)</title><rect x="99.8383%" y="293" width="0.0202%" height="15" fill="rgb(213,199,7)" fg:x="4940" fg:w="1"/><text x="100.0883%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysisPhase::Run (1 samples, 0.02%)</title><rect x="99.8383%" y="277" width="0.0202%" height="15" fill="rgb(250,110,10)" fg:x="4940" fg:w="1"/><text x="100.0883%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectGraphReducer::ReduceFrom (1 samples, 0.02%)</title><rect x="99.8383%" y="261" width="0.0202%" height="15" fill="rgb(248,123,6)" fg:x="4940" fg:w="1"/><text x="100.0883%" y="271.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GenericLoweringPhase&gt; (1 samples, 0.02%)</title><rect x="99.8585%" y="293" width="0.0202%" height="15" fill="rgb(206,91,31)" fg:x="4941" fg:w="1"/><text x="100.1085%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GenericLoweringPhase::Run (1 samples, 0.02%)</title><rect x="99.8585%" y="277" width="0.0202%" height="15" fill="rgb(211,154,13)" fg:x="4941" fg:w="1"/><text x="100.1085%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="99.8585%" y="261" width="0.0202%" height="15" fill="rgb(225,148,7)" fg:x="4941" fg:w="1"/><text x="100.1085%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="99.8585%" y="245" width="0.0202%" height="15" fill="rgb(220,160,43)" fg:x="4941" fg:w="1"/><text x="100.1085%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="99.8585%" y="229" width="0.0202%" height="15" fill="rgb(213,52,39)" fg:x="4941" fg:w="1"/><text x="100.1085%" y="239.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (1 samples, 0.02%)</title><rect x="99.8787%" y="293" width="0.0202%" height="15" fill="rgb(243,137,7)" fg:x="4942" fg:w="1"/><text x="100.1287%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LoadEliminationPhase::Run (1 samples, 0.02%)</title><rect x="99.8787%" y="277" width="0.0202%" height="15" fill="rgb(230,79,13)" fg:x="4942" fg:w="1"/><text x="100.1287%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="99.8787%" y="261" width="0.0202%" height="15" fill="rgb(247,105,23)" fg:x="4942" fg:w="1"/><text x="100.1287%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="99.8787%" y="245" width="0.0202%" height="15" fill="rgb(223,179,41)" fg:x="4942" fg:w="1"/><text x="100.1287%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="99.8787%" y="229" width="0.0202%" height="15" fill="rgb(218,9,34)" fg:x="4942" fg:w="1"/><text x="100.1287%" y="239.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::MachineOperatorOptimizationPhase&gt; (1 samples, 0.02%)</title><rect x="99.8989%" y="293" width="0.0202%" height="15" fill="rgb(222,106,8)" fg:x="4943" fg:w="1"/><text x="100.1489%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::MachineOperatorOptimizationPhase::Run (1 samples, 0.02%)</title><rect x="99.8989%" y="277" width="0.0202%" height="15" fill="rgb(211,220,0)" fg:x="4943" fg:w="1"/><text x="100.1489%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="99.8989%" y="261" width="0.0202%" height="15" fill="rgb(229,52,16)" fg:x="4943" fg:w="1"/><text x="100.1489%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="99.8989%" y="245" width="0.0202%" height="15" fill="rgb(212,155,18)" fg:x="4943" fg:w="1"/><text x="100.1489%" y="255.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::TypedLoweringPhase&gt; (1 samples, 0.02%)</title><rect x="99.9192%" y="293" width="0.0202%" height="15" fill="rgb(242,21,14)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::TypedLoweringPhase::Run (1 samples, 0.02%)</title><rect x="99.9192%" y="277" width="0.0202%" height="15" fill="rgb(222,19,48)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="99.9192%" y="261" width="0.0202%" height="15" fill="rgb(232,45,27)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceTop (1 samples, 0.02%)</title><rect x="99.9192%" y="245" width="0.0202%" height="15" fill="rgb(249,103,42)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::Reduce (1 samples, 0.02%)</title><rect x="99.9192%" y="229" width="0.0202%" height="15" fill="rgb(246,81,33)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::CommonOperatorReducer::Reduce (1 samples, 0.02%)</title><rect x="99.9192%" y="213" width="0.0202%" height="15" fill="rgb(252,33,42)" fg:x="4944" fg:w="1"/><text x="100.1692%" y="223.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (1 samples, 0.02%)</title><rect x="99.9394%" y="261" width="0.0202%" height="15" fill="rgb(209,212,41)" fg:x="4945" fg:w="1"/><text x="100.1894%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (1 samples, 0.02%)</title><rect x="99.9394%" y="245" width="0.0202%" height="15" fill="rgb(207,154,6)" fg:x="4945" fg:w="1"/><text x="100.1894%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LinearScanAllocator::AllocateBlockedReg (1 samples, 0.02%)</title><rect x="99.9394%" y="229" width="0.0202%" height="15" fill="rgb(223,64,47)" fg:x="4945" fg:w="1"/><text x="100.1894%" y="239.50"></text></g><g><title>all (4,948 samples, 100%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(211,161,38)" fg:x="0" fg:w="4948"/><text x="0.2500%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (11 samples, 0.22%)</title><rect x="99.7777%" y="437" width="0.2223%" height="15" fill="rgb(219,138,40)" fg:x="4937" fg:w="11"/><text x="100.0277%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (11 samples, 0.22%)</title><rect x="99.7777%" y="421" width="0.2223%" height="15" fill="rgb(241,228,46)" fg:x="4937" fg:w="11"/><text x="100.0277%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::base::ThreadEntry (11 samples, 0.22%)</title><rect x="99.7777%" y="405" width="0.2223%" height="15" fill="rgb(223,209,38)" fg:x="4937" fg:w="11"/><text x="100.0277%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (10 samples, 0.20%)</title><rect x="99.7979%" y="389" width="0.2021%" height="15" fill="rgb(236,164,45)" fg:x="4938" fg:w="10"/><text x="100.0479%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (10 samples, 0.20%)</title><rect x="99.7979%" y="373" width="0.2021%" height="15" fill="rgb(231,15,5)" fg:x="4938" fg:w="10"/><text x="100.0479%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (10 samples, 0.20%)</title><rect x="99.7979%" y="357" width="0.2021%" height="15" fill="rgb(252,35,15)" fg:x="4938" fg:w="10"/><text x="100.0479%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (10 samples, 0.20%)</title><rect x="99.7979%" y="341" width="0.2021%" height="15" fill="rgb(248,181,18)" fg:x="4938" fg:w="10"/><text x="100.0479%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (10 samples, 0.20%)</title><rect x="99.7979%" y="325" width="0.2021%" height="15" fill="rgb(233,39,42)" fg:x="4938" fg:w="10"/><text x="100.0479%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (9 samples, 0.18%)</title><rect x="99.8181%" y="309" width="0.1819%" height="15" fill="rgb(238,110,33)" fg:x="4939" fg:w="9"/><text x="100.0681%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::SelectInstructions (3 samples, 0.06%)</title><rect x="99.9394%" y="293" width="0.0606%" height="15" fill="rgb(233,195,10)" fg:x="4945" fg:w="3"/><text x="100.1894%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (3 samples, 0.06%)</title><rect x="99.9394%" y="277" width="0.0606%" height="15" fill="rgb(254,105,3)" fg:x="4945" fg:w="3"/><text x="100.1894%" y="287.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ResolveControlFlowPhase&gt; (2 samples, 0.04%)</title><rect x="99.9596%" y="261" width="0.0404%" height="15" fill="rgb(221,225,9)" fg:x="4946" fg:w="2"/><text x="100.2096%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LiveRangeConnector::ResolveControlFlow (2 samples, 0.04%)</title><rect x="99.9596%" y="245" width="0.0404%" height="15" fill="rgb(224,227,45)" fg:x="4946" fg:w="2"/><text x="100.2096%" y="255.50"></text></g></svg></svg>