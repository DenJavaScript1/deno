<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="1476"><g><title>bun`src.bun.js.bindings.exports.ZigGlobalObject.create (1 samples, 0.07%)</title><rect x="0.0000%" y="613" width="0.0678%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>bun`Zig__GlobalObject__create (1 samples, 0.07%)</title><rect x="0.0000%" y="597" width="0.0678%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>bun`JSC::JSGlobalObject::JSGlobalObject (1 samples, 0.07%)</title><rect x="0.0000%" y="581" width="0.0678%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>bun`JSC::Heap::registerWeakGCHashTable (1 samples, 0.07%)</title><rect x="0.0000%" y="565" width="0.0678%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>bun`JSCInitialize (1 samples, 0.07%)</title><rect x="0.0678%" y="597" width="0.0678%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.3178%" y="607.50"></text></g><g><title>libc++.1.dylib`std::__1::__call_once(unsigned long volatile&amp;, void*, void (*) (1 samples, 0.07%)</title><rect x="0.0678%" y="581" width="0.0678%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3178%" y="591.50"></text></g><g><title>bun`void std::__1::__call_once_proxy&lt;std::__1::tuple&lt;WTF::initializeMainThread()::$_0&amp;&amp;&gt; &gt; (1 samples, 0.07%)</title><rect x="0.0678%" y="565" width="0.0678%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3178%" y="575.50"></text></g><g><title>libc++.1.dylib`std::__1::__call_once(unsigned long volatile&amp;, void*, void (*) (1 samples, 0.07%)</title><rect x="0.0678%" y="549" width="0.0678%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3178%" y="559.50"></text></g><g><title>bun`void std::__1::__call_once_proxy&lt;std::__1::tuple&lt;WTF::initialize()::$_1&amp;&amp;&gt; &gt; (1 samples, 0.07%)</title><rect x="0.0678%" y="533" width="0.0678%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3178%" y="543.50"></text></g><g><title>libc++.1.dylib`std::__1::__call_once(unsigned long volatile&amp;, void*, void (*) (1 samples, 0.07%)</title><rect x="0.0678%" y="517" width="0.0678%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3178%" y="527.50"></text></g><g><title>bun`void std::__1::__call_once_proxy&lt;std::__1::tuple&lt;WTF::activeThreads()::$_3&amp;&amp;&gt; &gt; (1 samples, 0.07%)</title><rect x="0.0678%" y="501" width="0.0678%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3178%" y="511.50"></text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (1 samples, 0.07%)</title><rect x="0.0678%" y="485" width="0.0678%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3178%" y="495.50"></text></g><g><title>bun`bmalloc_allocate_impl_impl_slow(__pas_heap_ref*, unsigned long, unsigned long) (.27483) (1 samples, 0.07%)</title><rect x="0.0678%" y="469" width="0.0678%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3178%" y="479.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_try_allocate_common_impl_slow (1 samples, 0.07%)</title><rect x="0.0678%" y="453" width="0.0678%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3178%" y="463.50"></text></g><g><title>bun`pas_segregated_heap_ensure_size_directory_for_size (1 samples, 0.07%)</title><rect x="0.0678%" y="437" width="0.0678%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3178%" y="447.50"></text></g><g><title>bun`bmalloc_heap_config_activate (1 samples, 0.07%)</title><rect x="0.0678%" y="421" width="0.0678%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3178%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_register (1 samples, 0.07%)</title><rect x="0.0678%" y="405" width="0.0678%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.3178%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (1 samples, 0.07%)</title><rect x="0.0678%" y="389" width="0.0678%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.3178%" y="399.50"></text></g><g><title>0x10e034480 (1 samples, 0.07%)</title><rect x="0.1355%" y="485" width="0.0678%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.3855%" y="495.50"></text></g><g><title>0x10e0344d0 (5 samples, 0.34%)</title><rect x="0.2033%" y="485" width="0.3388%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="5"/><text x="0.4533%" y="495.50"></text></g><g><title>0x10e0344dc (1 samples, 0.07%)</title><rect x="0.5420%" y="485" width="0.0678%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="0.7920%" y="495.50"></text></g><g><title>bun`WTF::StringImpl::~StringImpl (2 samples, 0.14%)</title><rect x="0.6098%" y="469" width="0.1355%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="2"/><text x="0.8598%" y="479.50"></text></g><g><title>bun`WTF::URL::path (6 samples, 0.41%)</title><rect x="0.7453%" y="469" width="0.4065%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="6"/><text x="0.9953%" y="479.50"></text></g><g><title>bun`WebCore::DOMURL::fullURL (1 samples, 0.07%)</title><rect x="1.1518%" y="469" width="0.0678%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="1"/><text x="1.4018%" y="479.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (2 samples, 0.14%)</title><rect x="1.5583%" y="453" width="0.1355%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="2"/><text x="1.8083%" y="463.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (2 samples, 0.14%)</title><rect x="1.8970%" y="437" width="0.1355%" height="15" fill="rgb(249,31,29)" fg:x="28" fg:w="2"/><text x="2.1470%" y="447.50"></text></g><g><title>bun`WTF::fastMalloc (3 samples, 0.20%)</title><rect x="2.0325%" y="437" width="0.2033%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="3"/><text x="2.2825%" y="447.50"></text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (1 samples, 0.07%)</title><rect x="2.2358%" y="437" width="0.0678%" height="15" fill="rgb(238,160,17)" fg:x="33" fg:w="1"/><text x="2.4858%" y="447.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (1 samples, 0.07%)</title><rect x="2.2358%" y="421" width="0.0678%" height="15" fill="rgb(214,148,48)" fg:x="33" fg:w="1"/><text x="2.4858%" y="431.50"></text></g><g><title>bun`WTF::String::String (16 samples, 1.08%)</title><rect x="1.6938%" y="453" width="1.0840%" height="15" fill="rgb(232,36,49)" fg:x="25" fg:w="16"/><text x="1.9438%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (7 samples, 0.47%)</title><rect x="2.3035%" y="437" width="0.4743%" height="15" fill="rgb(209,103,24)" fg:x="34" fg:w="7"/><text x="2.5535%" y="447.50"></text></g><g><title>bun`WTF::StringImpl::~StringImpl (2 samples, 0.14%)</title><rect x="2.7778%" y="453" width="0.1355%" height="15" fill="rgb(229,88,8)" fg:x="41" fg:w="2"/><text x="3.0278%" y="463.50"></text></g><g><title>bun`WTF::fastFree (4 samples, 0.27%)</title><rect x="2.9133%" y="453" width="0.2710%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="4"/><text x="3.1633%" y="463.50"></text></g><g><title>bun`pas_thread_local_cache_flush_deallocation_log (9 samples, 0.61%)</title><rect x="3.1843%" y="453" width="0.6098%" height="15" fill="rgb(254,191,54)" fg:x="47" fg:w="9"/><text x="3.4343%" y="463.50"></text></g><g><title>0x10e0344e4 (51 samples, 3.46%)</title><rect x="0.6098%" y="485" width="3.4553%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="51"/><text x="0.8598%" y="495.50">0x1..</text></g><g><title>bun`WebCore::jsDOMURL_pathname (42 samples, 2.85%)</title><rect x="1.2195%" y="469" width="2.8455%" height="15" fill="rgb(233,36,39)" fg:x="18" fg:w="42"/><text x="1.4695%" y="479.50">bu..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.27%)</title><rect x="3.7940%" y="453" width="0.2710%" height="15" fill="rgb(226,3,54)" fg:x="56" fg:w="4"/><text x="4.0440%" y="463.50"></text></g><g><title>bun`WTF::String::String (1 samples, 0.07%)</title><rect x="4.0650%" y="469" width="0.0678%" height="15" fill="rgb(245,192,40)" fg:x="60" fg:w="1"/><text x="4.3150%" y="479.50"></text></g><g><title>bun`WTF::StringImpl::~StringImpl (2 samples, 0.14%)</title><rect x="4.1328%" y="469" width="0.1355%" height="15" fill="rgb(238,167,29)" fg:x="61" fg:w="2"/><text x="4.3828%" y="479.50"></text></g><g><title>bun`WTF::URL::path (2 samples, 0.14%)</title><rect x="4.2683%" y="469" width="0.1355%" height="15" fill="rgb(232,182,51)" fg:x="63" fg:w="2"/><text x="4.5183%" y="479.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (3 samples, 0.20%)</title><rect x="4.6070%" y="437" width="0.2033%" height="15" fill="rgb(231,60,39)" fg:x="68" fg:w="3"/><text x="4.8570%" y="447.50"></text></g><g><title>bun`WTF::fastMalloc (2 samples, 0.14%)</title><rect x="4.8103%" y="437" width="0.1355%" height="15" fill="rgb(208,69,12)" fg:x="71" fg:w="2"/><text x="5.0603%" y="447.50"></text></g><g><title>bun`WTF::String::String (7 samples, 0.47%)</title><rect x="4.5393%" y="453" width="0.4743%" height="15" fill="rgb(235,93,37)" fg:x="67" fg:w="7"/><text x="4.7893%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.07%)</title><rect x="4.9458%" y="437" width="0.0678%" height="15" fill="rgb(213,116,39)" fg:x="73" fg:w="1"/><text x="5.1958%" y="447.50"></text></g><g><title>0x10e034ea4 (15 samples, 1.02%)</title><rect x="4.0650%" y="485" width="1.0163%" height="15" fill="rgb(222,207,29)" fg:x="60" fg:w="15"/><text x="4.3150%" y="495.50"></text></g><g><title>bun`WebCore::jsDOMURL_pathname (10 samples, 0.68%)</title><rect x="4.4038%" y="469" width="0.6775%" height="15" fill="rgb(206,96,30)" fg:x="65" fg:w="10"/><text x="4.6538%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.07%)</title><rect x="5.0136%" y="453" width="0.0678%" height="15" fill="rgb(218,138,4)" fg:x="74" fg:w="1"/><text x="5.2636%" y="463.50"></text></g><g><title>0x10e0a8104 (1 samples, 0.07%)</title><rect x="5.0813%" y="485" width="0.0678%" height="15" fill="rgb(250,191,14)" fg:x="75" fg:w="1"/><text x="5.3313%" y="495.50"></text></g><g><title>bun`WebCore::JSDOMConstructor&lt;WebCore::JSDOMURL&gt;::construct (1 samples, 0.07%)</title><rect x="5.1491%" y="453" width="0.0678%" height="15" fill="rgb(239,60,40)" fg:x="76" fg:w="1"/><text x="5.3991%" y="463.50"></text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (3 samples, 0.20%)</title><rect x="5.7588%" y="421" width="0.2033%" height="15" fill="rgb(206,27,48)" fg:x="85" fg:w="3"/><text x="6.0088%" y="431.50"></text></g><g><title>bun`JSC::Heap::runFixpointPhase (4 samples, 0.27%)</title><rect x="6.4363%" y="309" width="0.2710%" height="15" fill="rgb(225,35,8)" fg:x="95" fg:w="4"/><text x="6.6863%" y="319.50"></text></g><g><title>bun`JSC::MarkingConstraintSet::executeConvergence (4 samples, 0.27%)</title><rect x="6.4363%" y="293" width="0.2710%" height="15" fill="rgb(250,213,24)" fg:x="95" fg:w="4"/><text x="6.6863%" y="303.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::execute(JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (4 samples, 0.27%)</title><rect x="6.4363%" y="277" width="0.2710%" height="15" fill="rgb(247,123,22)" fg:x="95" fg:w="4"/><text x="6.6863%" y="287.50"></text></g><g><title>bun`JSC::Heap::runTaskInParallel(WTF::RefPtr&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt;, WTF::RawPtrTraits&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt; &gt;, WTF::DefaultRefDerefTraits&lt;WTF::SharedTask&lt;void  (4 samples, 0.27%)</title><rect x="6.4363%" y="261" width="0.2710%" height="15" fill="rgb(231,138,38)" fg:x="95" fg:w="4"/><text x="6.6863%" y="271.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::runExecutionThread(JSC::SlotVisitor&amp;, JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (4 samples, 0.27%)</title><rect x="6.4363%" y="245" width="0.2710%" height="15" fill="rgb(231,145,46)" fg:x="95" fg:w="4"/><text x="6.6863%" y="255.50"></text></g><g><title>bun`WTF::Detail::CallableWrapper&lt;JSC::Heap::addCoreConstraints()::$_38, void, JSC::SlotVisitor&amp;&gt;::call (4 samples, 0.27%)</title><rect x="6.4363%" y="229" width="0.2710%" height="15" fill="rgb(251,118,11)" fg:x="95" fg:w="4"/><text x="6.6863%" y="239.50"></text></g><g><title>bun`JSC::WeakBlock::visit (3 samples, 0.20%)</title><rect x="6.5041%" y="213" width="0.2033%" height="15" fill="rgb(217,147,25)" fg:x="96" fg:w="3"/><text x="6.7541%" y="223.50"></text></g><g><title>bun`JSC::Heap::stopIfNecessary (6 samples, 0.41%)</title><rect x="6.4363%" y="389" width="0.4065%" height="15" fill="rgb(247,81,37)" fg:x="95" fg:w="6"/><text x="6.6863%" y="399.50"></text></g><g><title>bun`JSC::Heap::collectInMutatorThread (6 samples, 0.41%)</title><rect x="6.4363%" y="373" width="0.4065%" height="15" fill="rgb(209,12,38)" fg:x="95" fg:w="6"/><text x="6.6863%" y="383.50"></text></g><g><title>bun`JSC::callWithCurrentThreadState(WTF::ScopedLambda&lt;void  (6 samples, 0.41%)</title><rect x="6.4363%" y="357" width="0.4065%" height="15" fill="rgb(227,1,9)" fg:x="95" fg:w="6"/><text x="6.6863%" y="367.50"></text></g><g><title>bun`WTF::ScopedLambdaFunctor&lt;void (JSC::CurrentThreadState&amp;), JSC::Heap::collectInMutatorThread()::$_0&gt;::implFunction (6 samples, 0.41%)</title><rect x="6.4363%" y="341" width="0.4065%" height="15" fill="rgb(248,47,43)" fg:x="95" fg:w="6"/><text x="6.6863%" y="351.50"></text></g><g><title>bun`JSC::Heap::runCurrentPhase (6 samples, 0.41%)</title><rect x="6.4363%" y="325" width="0.4065%" height="15" fill="rgb(221,10,30)" fg:x="95" fg:w="6"/><text x="6.6863%" y="335.50"></text></g><g><title>bun`JSC::WeakBlock::reap (2 samples, 0.14%)</title><rect x="6.7073%" y="309" width="0.1355%" height="15" fill="rgb(210,229,1)" fg:x="99" fg:w="2"/><text x="6.9573%" y="319.50"></text></g><g><title>bun`WTF::fastFree (3 samples, 0.20%)</title><rect x="6.9106%" y="341" width="0.2033%" height="15" fill="rgb(222,148,37)" fg:x="102" fg:w="3"/><text x="7.1606%" y="351.50"></text></g><g><title>bun`WebCore::JSDOMURL::destroy (1 samples, 0.07%)</title><rect x="7.1138%" y="341" width="0.0678%" height="15" fill="rgb(234,67,33)" fg:x="105" fg:w="1"/><text x="7.3638%" y="351.50"></text></g><g><title>bun`WebCore::DOMURL::~DOMURL (1 samples, 0.07%)</title><rect x="7.1138%" y="325" width="0.0678%" height="15" fill="rgb(247,98,35)" fg:x="105" fg:w="1"/><text x="7.3638%" y="335.50"></text></g><g><title>bun`pas_thread_local_cache_flush_deallocation_log (6 samples, 0.41%)</title><rect x="7.1816%" y="341" width="0.4065%" height="15" fill="rgb(247,138,52)" fg:x="106" fg:w="6"/><text x="7.4316%" y="351.50"></text></g><g><title>bun`JSC::JSDestructibleObjectHeapCellType::finishSweep (14 samples, 0.95%)</title><rect x="6.8428%" y="357" width="0.9485%" height="15" fill="rgb(213,79,30)" fg:x="101" fg:w="14"/><text x="7.0928%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.20%)</title><rect x="7.5881%" y="341" width="0.2033%" height="15" fill="rgb(246,177,23)" fg:x="112" fg:w="3"/><text x="7.8381%" y="351.50"></text></g><g><title>bun`JSC::WeakBlock::sweep (32 samples, 2.17%)</title><rect x="7.7913%" y="341" width="2.1680%" height="15" fill="rgb(230,62,27)" fg:x="115" fg:w="32"/><text x="8.0413%" y="351.50">b..</text></g><g><title>bun`JSC::LocalAllocator::allocateSlowCase (61 samples, 4.13%)</title><rect x="6.4363%" y="405" width="4.1328%" height="15" fill="rgb(216,154,8)" fg:x="95" fg:w="61"/><text x="6.6863%" y="415.50">bun`J..</text></g><g><title>bun`JSC::LocalAllocator::tryAllocateIn (55 samples, 3.73%)</title><rect x="6.8428%" y="389" width="3.7263%" height="15" fill="rgb(244,35,45)" fg:x="101" fg:w="55"/><text x="7.0928%" y="399.50">bun`..</text></g><g><title>bun`JSC::MarkedBlock::Handle::sweep (55 samples, 3.73%)</title><rect x="6.8428%" y="373" width="3.7263%" height="15" fill="rgb(251,115,12)" fg:x="101" fg:w="55"/><text x="7.0928%" y="383.50">bun`..</text></g><g><title>bun`JSC::WeakSet::sweep (41 samples, 2.78%)</title><rect x="7.7913%" y="357" width="2.7778%" height="15" fill="rgb(240,54,50)" fg:x="115" fg:w="41"/><text x="8.0413%" y="367.50">bu..</text></g><g><title>bun`WebCore::JSDOMURLOwner::finalize(JSC::Handle (9 samples, 0.61%)</title><rect x="9.9593%" y="341" width="0.6098%" height="15" fill="rgb(233,84,52)" fg:x="147" fg:w="9"/><text x="10.2093%" y="351.50"></text></g><g><title>bun`JSC::JSValue WebCore::toJSNewlyCreated&lt;WebCore::IDLInterface&lt;WebCore::DOMURL&gt;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits&lt;WebCore::DOMURL&gt; &gt; &gt; &gt;(JSC::JSGlobalObject&amp;, Zig::GlobalObject&amp;, JSC::ThrowScope&amp;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (81 samples, 5.49%)</title><rect x="5.6911%" y="437" width="5.4878%" height="15" fill="rgb(207,117,47)" fg:x="84" fg:w="81"/><text x="5.9411%" y="447.50">bun`JSC..</text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (77 samples, 5.22%)</title><rect x="5.9621%" y="421" width="5.2168%" height="15" fill="rgb(249,43,39)" fg:x="88" fg:w="77"/><text x="6.2121%" y="431.50">bun`st..</text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (9 samples, 0.61%)</title><rect x="10.5691%" y="405" width="0.6098%" height="15" fill="rgb(209,38,44)" fg:x="156" fg:w="9"/><text x="10.8191%" y="415.50"></text></g><g><title>bun`WTF::replaceUnpairedSurrogatesWithReplacementCharacter (1 samples, 0.07%)</title><rect x="11.1789%" y="437" width="0.0678%" height="15" fill="rgb(236,212,23)" fg:x="165" fg:w="1"/><text x="11.4289%" y="447.50"></text></g><g><title>bun`WTF::URL::URL (6 samples, 0.41%)</title><rect x="11.4499%" y="421" width="0.4065%" height="15" fill="rgb(242,79,21)" fg:x="169" fg:w="6"/><text x="11.6999%" y="431.50"></text></g><g><title>bun`WTF::URLParser::URLParser (3 samples, 0.20%)</title><rect x="11.6531%" y="405" width="0.2033%" height="15" fill="rgb(211,96,35)" fg:x="172" fg:w="3"/><text x="11.9031%" y="415.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (9 samples, 0.61%)</title><rect x="17.7507%" y="341" width="0.6098%" height="15" fill="rgb(253,215,40)" fg:x="262" fg:w="9"/><text x="18.0007%" y="351.50"></text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (72 samples, 4.88%)</title><rect x="14.4986%" y="357" width="4.8780%" height="15" fill="rgb(211,81,21)" fg:x="214" fg:w="72"/><text x="14.7486%" y="367.50">bun`WT..</text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4PieceParsingError&gt; WTF::URLParser::parseIPv4Piece&lt;unsigned char&gt;(WTF::CodePointIterator (15 samples, 1.02%)</title><rect x="18.3604%" y="341" width="1.0163%" height="15" fill="rgb(208,190,38)" fg:x="271" fg:w="15"/><text x="18.6104%" y="351.50"></text></g><g><title>bun`WTF::dnsNameEndsInNumber (3 samples, 0.20%)</title><rect x="19.3767%" y="357" width="0.2033%" height="15" fill="rgb(235,213,38)" fg:x="286" fg:w="3"/><text x="19.6267%" y="367.50"></text></g><g><title>bun`WTF::URLParser::URLParser (110 samples, 7.45%)</title><rect x="12.1951%" y="389" width="7.4526%" height="15" fill="rgb(237,122,38)" fg:x="180" fg:w="110"/><text x="12.4451%" y="399.50">bun`WTF::U..</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (110 samples, 7.45%)</title><rect x="12.1951%" y="373" width="7.4526%" height="15" fill="rgb(244,218,35)" fg:x="180" fg:w="110"/><text x="12.4451%" y="383.50">bun`void W..</text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (1 samples, 0.07%)</title><rect x="19.5799%" y="357" width="0.0678%" height="15" fill="rgb(240,68,47)" fg:x="289" fg:w="1"/><text x="19.8299%" y="367.50"></text></g><g><title>bun`WTF::URL::URL (115 samples, 7.79%)</title><rect x="11.9919%" y="405" width="7.7913%" height="15" fill="rgb(210,16,53)" fg:x="177" fg:w="115"/><text x="12.2419%" y="415.50">bun`WTF::UR..</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (2 samples, 0.14%)</title><rect x="19.6477%" y="389" width="0.1355%" height="15" fill="rgb(235,124,12)" fg:x="290" fg:w="2"/><text x="19.8977%" y="399.50"></text></g><g><title>bun`WTF::URLParser::URLParser (1 samples, 0.07%)</title><rect x="19.7832%" y="405" width="0.0678%" height="15" fill="rgb(224,169,11)" fg:x="292" fg:w="1"/><text x="20.0332%" y="415.50"></text></g><g><title>bun`WTF::fastMalloc (2 samples, 0.14%)</title><rect x="19.8509%" y="405" width="0.1355%" height="15" fill="rgb(250,166,2)" fg:x="293" fg:w="2"/><text x="20.1009%" y="415.50"></text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (1 samples, 0.07%)</title><rect x="19.9864%" y="405" width="0.0678%" height="15" fill="rgb(242,216,29)" fg:x="295" fg:w="1"/><text x="20.2364%" y="415.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (1 samples, 0.07%)</title><rect x="19.9864%" y="389" width="0.0678%" height="15" fill="rgb(230,116,27)" fg:x="295" fg:w="1"/><text x="20.2364%" y="399.50"></text></g><g><title>bun`pas_segregated_page_construct (1 samples, 0.07%)</title><rect x="19.9864%" y="373" width="0.0678%" height="15" fill="rgb(228,99,48)" fg:x="295" fg:w="1"/><text x="20.2364%" y="383.50"></text></g><g><title>bun`WebCore::DOMURL::create (132 samples, 8.94%)</title><rect x="11.2466%" y="437" width="8.9431%" height="15" fill="rgb(253,11,6)" fg:x="166" fg:w="132"/><text x="11.4966%" y="447.50">bun`WebCore::..</text></g><g><title>bun`WebCore::DOMURL::create (123 samples, 8.33%)</title><rect x="11.8564%" y="421" width="8.3333%" height="15" fill="rgb(247,143,39)" fg:x="175" fg:w="123"/><text x="12.1064%" y="431.50">bun`WebCore:..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.14%)</title><rect x="20.0542%" y="405" width="0.1355%" height="15" fill="rgb(236,97,10)" fg:x="296" fg:w="2"/><text x="20.3042%" y="415.50"></text></g><g><title>bun`WebCore::valueToUSVString (3 samples, 0.20%)</title><rect x="20.1897%" y="437" width="0.2033%" height="15" fill="rgb(233,208,19)" fg:x="298" fg:w="3"/><text x="20.4397%" y="447.50"></text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (1 samples, 0.07%)</title><rect x="20.3930%" y="437" width="0.0678%" height="15" fill="rgb(216,164,2)" fg:x="301" fg:w="1"/><text x="20.6430%" y="447.50"></text></g><g><title>0x10e0340f0 (228 samples, 15.45%)</title><rect x="5.1491%" y="469" width="15.4472%" height="15" fill="rgb(220,129,5)" fg:x="76" fg:w="228"/><text x="5.3991%" y="479.50">0x10e0340f0</text></g><g><title>bun`WebCore::constructJSDOMURL1 (227 samples, 15.38%)</title><rect x="5.2168%" y="453" width="15.3794%" height="15" fill="rgb(242,17,10)" fg:x="77" fg:w="227"/><text x="5.4668%" y="463.50">bun`WebCore::constructJS..</text></g><g><title>bun`void WebCore::setSubclassStructureIfNeeded&lt;WebCore::DOMURL&gt; (2 samples, 0.14%)</title><rect x="20.4607%" y="437" width="0.1355%" height="15" fill="rgb(242,107,0)" fg:x="302" fg:w="2"/><text x="20.7107%" y="447.50"></text></g><g><title>0x10e0a8130 (229 samples, 15.51%)</title><rect x="5.1491%" y="485" width="15.5149%" height="15" fill="rgb(251,28,31)" fg:x="76" fg:w="229"/><text x="5.3991%" y="495.50">0x10e0a8130</text></g><g><title>bun`WebCore::constructJSDOMURL1 (1 samples, 0.07%)</title><rect x="20.5962%" y="469" width="0.0678%" height="15" fill="rgb(233,223,10)" fg:x="304" fg:w="1"/><text x="20.8462%" y="479.50"></text></g><g><title>0x10e0ac18c (1 samples, 0.07%)</title><rect x="20.6640%" y="485" width="0.0678%" height="15" fill="rgb(215,21,27)" fg:x="305" fg:w="1"/><text x="20.9140%" y="495.50"></text></g><g><title>0x10e0ac1dc (2 samples, 0.14%)</title><rect x="20.7317%" y="485" width="0.1355%" height="15" fill="rgb(232,23,21)" fg:x="306" fg:w="2"/><text x="20.9817%" y="495.50"></text></g><g><title>0x10e0340e8 (2 samples, 0.14%)</title><rect x="20.8672%" y="469" width="0.1355%" height="15" fill="rgb(244,5,23)" fg:x="308" fg:w="2"/><text x="21.1172%" y="479.50"></text></g><g><title>bun`WebCore::DOMURL::create (3 samples, 0.20%)</title><rect x="21.0027%" y="453" width="0.2033%" height="15" fill="rgb(226,81,46)" fg:x="310" fg:w="3"/><text x="21.2527%" y="463.50"></text></g><g><title>bun`WebCore::JSDOMConstructor&lt;WebCore::JSDOMURL&gt;::construct (5 samples, 0.34%)</title><rect x="21.2060%" y="453" width="0.3388%" height="15" fill="rgb(247,70,30)" fg:x="313" fg:w="5"/><text x="21.4560%" y="463.50"></text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (2 samples, 0.14%)</title><rect x="21.9512%" y="421" width="0.1355%" height="15" fill="rgb(212,68,19)" fg:x="324" fg:w="2"/><text x="22.2012%" y="431.50"></text></g><g><title>bun`JSC::BlockDirectory::addBlock (1 samples, 0.07%)</title><rect x="23.7127%" y="389" width="0.0678%" height="15" fill="rgb(240,187,13)" fg:x="350" fg:w="1"/><text x="23.9627%" y="399.50"></text></g><g><title>bun`JSC::BlockDirectory::tryAllocateBlock (1 samples, 0.07%)</title><rect x="23.7805%" y="389" width="0.0678%" height="15" fill="rgb(223,113,26)" fg:x="351" fg:w="1"/><text x="24.0305%" y="399.50"></text></g><g><title>bun`JSC::Heap::collectIfNecessaryOrDefer (1 samples, 0.07%)</title><rect x="23.8482%" y="389" width="0.0678%" height="15" fill="rgb(206,192,2)" fg:x="352" fg:w="1"/><text x="24.0982%" y="399.50"></text></g><g><title>bun`JSC::Heap::handleNeedFinalize (1 samples, 0.07%)</title><rect x="23.8482%" y="373" width="0.0678%" height="15" fill="rgb(241,108,4)" fg:x="352" fg:w="1"/><text x="24.0982%" y="383.50"></text></g><g><title>bun`JSC::MarkingConstraint::prepareToExecuteImpl (1 samples, 0.07%)</title><rect x="23.9160%" y="245" width="0.0678%" height="15" fill="rgb(247,173,49)" fg:x="353" fg:w="1"/><text x="24.1660%" y="255.50"></text></g><g><title>bun`JSC::WeakBlock::visit (1 samples, 0.07%)</title><rect x="23.9837%" y="229" width="0.0678%" height="15" fill="rgb(224,114,35)" fg:x="354" fg:w="1"/><text x="24.2337%" y="239.50"></text></g><g><title>bun`JSC::WeakBlock::visit (13 samples, 0.88%)</title><rect x="24.0515%" y="213" width="0.8808%" height="15" fill="rgb(245,159,27)" fg:x="355" fg:w="13"/><text x="24.3015%" y="223.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::runExecutionThread(JSC::SlotVisitor&amp;, JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (17 samples, 1.15%)</title><rect x="23.9837%" y="245" width="1.1518%" height="15" fill="rgb(245,172,44)" fg:x="354" fg:w="17"/><text x="24.2337%" y="255.50"></text></g><g><title>bun`WTF::Detail::CallableWrapper&lt;JSC::Heap::addCoreConstraints()::$_38, void, JSC::SlotVisitor&amp;&gt;::call (16 samples, 1.08%)</title><rect x="24.0515%" y="229" width="1.0840%" height="15" fill="rgb(236,23,11)" fg:x="355" fg:w="16"/><text x="24.3015%" y="239.50"></text></g><g><title>bun`WebCore::JSDOMURLOwner::isReachableFromOpaqueRoots(JSC::Handle (3 samples, 0.20%)</title><rect x="24.9322%" y="213" width="0.2033%" height="15" fill="rgb(205,117,38)" fg:x="368" fg:w="3"/><text x="25.1822%" y="223.50"></text></g><g><title>bun`JSC::Heap::runFixpointPhase (19 samples, 1.29%)</title><rect x="23.9160%" y="309" width="1.2873%" height="15" fill="rgb(237,72,25)" fg:x="353" fg:w="19"/><text x="24.1660%" y="319.50"></text></g><g><title>bun`JSC::MarkingConstraintSet::executeConvergence (19 samples, 1.29%)</title><rect x="23.9160%" y="293" width="1.2873%" height="15" fill="rgb(244,70,9)" fg:x="353" fg:w="19"/><text x="24.1660%" y="303.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::execute(JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (19 samples, 1.29%)</title><rect x="23.9160%" y="277" width="1.2873%" height="15" fill="rgb(217,125,39)" fg:x="353" fg:w="19"/><text x="24.1660%" y="287.50"></text></g><g><title>bun`JSC::Heap::runTaskInParallel(WTF::RefPtr&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt;, WTF::RawPtrTraits&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt; &gt;, WTF::DefaultRefDerefTraits&lt;WTF::SharedTask&lt;void  (19 samples, 1.29%)</title><rect x="23.9160%" y="261" width="1.2873%" height="15" fill="rgb(235,36,10)" fg:x="353" fg:w="19"/><text x="24.1660%" y="271.50"></text></g><g><title>bun`bool WTF::Condition::waitUntilUnchecked&lt;WTF::Lock&gt; (1 samples, 0.07%)</title><rect x="25.1355%" y="245" width="0.0678%" height="15" fill="rgb(251,123,47)" fg:x="371" fg:w="1"/><text x="25.3855%" y="255.50"></text></g><g><title>bun`WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda&lt;bool ()&gt; const&amp;, WTF::ScopedLambda&lt;void  (1 samples, 0.07%)</title><rect x="25.1355%" y="229" width="0.0678%" height="15" fill="rgb(221,13,13)" fg:x="371" fg:w="1"/><text x="25.3855%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.07%)</title><rect x="25.1355%" y="213" width="0.0678%" height="15" fill="rgb(238,131,9)" fg:x="371" fg:w="1"/><text x="25.3855%" y="223.50"></text></g><g><title>bun`JSC::Heap::stopIfNecessary (27 samples, 1.83%)</title><rect x="23.9160%" y="389" width="1.8293%" height="15" fill="rgb(211,50,8)" fg:x="353" fg:w="27"/><text x="24.1660%" y="399.50">b..</text></g><g><title>bun`JSC::Heap::collectInMutatorThread (27 samples, 1.83%)</title><rect x="23.9160%" y="373" width="1.8293%" height="15" fill="rgb(245,182,24)" fg:x="353" fg:w="27"/><text x="24.1660%" y="383.50">b..</text></g><g><title>bun`JSC::callWithCurrentThreadState(WTF::ScopedLambda&lt;void  (27 samples, 1.83%)</title><rect x="23.9160%" y="357" width="1.8293%" height="15" fill="rgb(242,14,37)" fg:x="353" fg:w="27"/><text x="24.1660%" y="367.50">b..</text></g><g><title>bun`WTF::ScopedLambdaFunctor&lt;void (JSC::CurrentThreadState&amp;), JSC::Heap::collectInMutatorThread()::$_0&gt;::implFunction (27 samples, 1.83%)</title><rect x="23.9160%" y="341" width="1.8293%" height="15" fill="rgb(246,228,12)" fg:x="353" fg:w="27"/><text x="24.1660%" y="351.50">b..</text></g><g><title>bun`JSC::Heap::runCurrentPhase (27 samples, 1.83%)</title><rect x="23.9160%" y="325" width="1.8293%" height="15" fill="rgb(213,55,15)" fg:x="353" fg:w="27"/><text x="24.1660%" y="335.50">b..</text></g><g><title>bun`JSC::WeakBlock::reap (8 samples, 0.54%)</title><rect x="25.2033%" y="309" width="0.5420%" height="15" fill="rgb(209,9,3)" fg:x="372" fg:w="8"/><text x="25.4533%" y="319.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (1 samples, 0.07%)</title><rect x="25.8130%" y="341" width="0.0678%" height="15" fill="rgb(230,59,30)" fg:x="381" fg:w="1"/><text x="26.0630%" y="351.50"></text></g><g><title>bun`WTF::fastFree (5 samples, 0.34%)</title><rect x="25.8808%" y="341" width="0.3388%" height="15" fill="rgb(209,121,21)" fg:x="382" fg:w="5"/><text x="26.1308%" y="351.50"></text></g><g><title>bun`WebCore::DOMURL::~DOMURL (2 samples, 0.14%)</title><rect x="26.2195%" y="341" width="0.1355%" height="15" fill="rgb(220,109,13)" fg:x="387" fg:w="2"/><text x="26.4695%" y="351.50"></text></g><g><title>bun`WebCore::JSDOMURL::destroy (7 samples, 0.47%)</title><rect x="26.3550%" y="341" width="0.4743%" height="15" fill="rgb(232,18,1)" fg:x="389" fg:w="7"/><text x="26.6050%" y="351.50"></text></g><g><title>bun`WebCore::DOMURL::~DOMURL (7 samples, 0.47%)</title><rect x="26.3550%" y="325" width="0.4743%" height="15" fill="rgb(215,41,42)" fg:x="389" fg:w="7"/><text x="26.6050%" y="335.50"></text></g><g><title>bun`pas_thread_local_cache_flush_deallocation_log (4 samples, 0.27%)</title><rect x="26.8293%" y="341" width="0.2710%" height="15" fill="rgb(224,123,36)" fg:x="396" fg:w="4"/><text x="27.0793%" y="351.50"></text></g><g><title>bun`JSC::JSDestructibleObjectHeapCellType::finishSweep (27 samples, 1.83%)</title><rect x="25.7453%" y="357" width="1.8293%" height="15" fill="rgb(240,125,3)" fg:x="380" fg:w="27"/><text x="25.9953%" y="367.50">b..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (7 samples, 0.47%)</title><rect x="27.1003%" y="341" width="0.4743%" height="15" fill="rgb(205,98,50)" fg:x="400" fg:w="7"/><text x="27.3503%" y="351.50"></text></g><g><title>bun`JSC::WeakBlock::sweep (116 samples, 7.86%)</title><rect x="27.5745%" y="341" width="7.8591%" height="15" fill="rgb(205,185,37)" fg:x="407" fg:w="116"/><text x="27.8245%" y="351.50">bun`JSC::We..</text></g><g><title>bun`JSC::WeakSet::sweep (141 samples, 9.55%)</title><rect x="27.5745%" y="357" width="9.5528%" height="15" fill="rgb(238,207,15)" fg:x="407" fg:w="141"/><text x="27.8245%" y="367.50">bun`JSC::WeakS..</text></g><g><title>bun`WebCore::JSDOMURLOwner::finalize(JSC::Handle (25 samples, 1.69%)</title><rect x="35.4336%" y="341" width="1.6938%" height="15" fill="rgb(213,199,42)" fg:x="523" fg:w="25"/><text x="35.6836%" y="351.50"></text></g><g><title>bun`JSC::LocalAllocator::allocateSlowCase (199 samples, 13.48%)</title><rect x="23.7127%" y="405" width="13.4824%" height="15" fill="rgb(235,201,11)" fg:x="350" fg:w="199"/><text x="23.9627%" y="415.50">bun`JSC::LocalAlloca..</text></g><g><title>bun`JSC::LocalAllocator::tryAllocateIn (169 samples, 11.45%)</title><rect x="25.7453%" y="389" width="11.4499%" height="15" fill="rgb(207,46,11)" fg:x="380" fg:w="169"/><text x="25.9953%" y="399.50">bun`JSC::LocalAll..</text></g><g><title>bun`JSC::MarkedBlock::Handle::sweep (169 samples, 11.45%)</title><rect x="25.7453%" y="373" width="11.4499%" height="15" fill="rgb(241,35,35)" fg:x="380" fg:w="169"/><text x="25.9953%" y="383.50">bun`JSC::MarkedBl..</text></g><g><title>bun`WebCore::JSDOMURL::destroy (1 samples, 0.07%)</title><rect x="37.1274%" y="357" width="0.0678%" height="15" fill="rgb(243,32,47)" fg:x="548" fg:w="1"/><text x="37.3774%" y="367.50"></text></g><g><title>bun`JSC::JSValue WebCore::toJSNewlyCreated&lt;WebCore::IDLInterface&lt;WebCore::DOMURL&gt;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits&lt;WebCore::DOMURL&gt; &gt; &gt; &gt;(JSC::JSGlobalObject&amp;, Zig::GlobalObject&amp;, JSC::ThrowScope&amp;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (323 samples, 21.88%)</title><rect x="21.7480%" y="437" width="21.8835%" height="15" fill="rgb(247,202,23)" fg:x="321" fg:w="323"/><text x="21.9980%" y="447.50">bun`JSC::JSValue WebCore::toJSNewly..</text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (318 samples, 21.54%)</title><rect x="22.0867%" y="421" width="21.5447%" height="15" fill="rgb(219,102,11)" fg:x="326" fg:w="318"/><text x="22.3367%" y="431.50">bun`std::__1::enable_if&lt;std::is_sa..</text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (95 samples, 6.44%)</title><rect x="37.1951%" y="405" width="6.4363%" height="15" fill="rgb(243,110,44)" fg:x="549" fg:w="95"/><text x="37.4451%" y="415.50">bun`WTF:..</text></g><g><title>bun`WTF::URL::URL (1 samples, 0.07%)</title><rect x="43.6314%" y="437" width="0.0678%" height="15" fill="rgb(222,74,54)" fg:x="644" fg:w="1"/><text x="43.8814%" y="447.50"></text></g><g><title>bun`WTF::replaceUnpairedSurrogatesWithReplacementCharacter (3 samples, 0.20%)</title><rect x="43.6992%" y="437" width="0.2033%" height="15" fill="rgb(216,99,12)" fg:x="645" fg:w="3"/><text x="43.9492%" y="447.50"></text></g><g><title>bun`WTF::URL::URL (18 samples, 1.22%)</title><rect x="44.4444%" y="421" width="1.2195%" height="15" fill="rgb(226,22,26)" fg:x="656" fg:w="18"/><text x="44.6944%" y="431.50"></text></g><g><title>bun`WTF::URLParser::URLParser (1 samples, 0.07%)</title><rect x="45.5962%" y="405" width="0.0678%" height="15" fill="rgb(217,163,10)" fg:x="673" fg:w="1"/><text x="45.8462%" y="415.50"></text></g><g><title>bun`WTF::URLParser::URLParser (1 samples, 0.07%)</title><rect x="45.6640%" y="421" width="0.0678%" height="15" fill="rgb(213,25,53)" fg:x="674" fg:w="1"/><text x="45.9140%" y="431.50"></text></g><g><title>bun`WTF::URL::protocolIs (3 samples, 0.20%)</title><rect x="46.8157%" y="373" width="0.2033%" height="15" fill="rgb(252,105,26)" fg:x="691" fg:w="3"/><text x="47.0657%" y="383.50"></text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (3 samples, 0.20%)</title><rect x="47.0190%" y="373" width="0.2033%" height="15" fill="rgb(220,39,43)" fg:x="694" fg:w="3"/><text x="47.2690%" y="383.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (34 samples, 2.30%)</title><rect x="66.9377%" y="341" width="2.3035%" height="15" fill="rgb(229,68,48)" fg:x="988" fg:w="34"/><text x="67.1877%" y="351.50">b..</text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (228 samples, 15.45%)</title><rect x="56.9106%" y="357" width="15.4472%" height="15" fill="rgb(252,8,32)" fg:x="840" fg:w="228"/><text x="57.1606%" y="367.50">bun`WTF::URLParser::Host..</text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4PieceParsingError&gt; WTF::URLParser::parseIPv4Piece&lt;unsigned char&gt;(WTF::CodePointIterator (46 samples, 3.12%)</title><rect x="69.2412%" y="341" width="3.1165%" height="15" fill="rgb(223,20,43)" fg:x="1022" fg:w="46"/><text x="69.4912%" y="351.50">bun..</text></g><g><title>bun`WTF::dnsNameEndsInNumber (10 samples, 0.68%)</title><rect x="72.3577%" y="357" width="0.6775%" height="15" fill="rgb(229,81,49)" fg:x="1068" fg:w="10"/><text x="72.6077%" y="367.50"></text></g><g><title>bun`WTF::URLParser::URLParser (393 samples, 26.63%)</title><rect x="46.5447%" y="389" width="26.6260%" height="15" fill="rgb(236,28,36)" fg:x="687" fg:w="393"/><text x="46.7947%" y="399.50">bun`WTF::URLParser::URLParser</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (383 samples, 25.95%)</title><rect x="47.2222%" y="373" width="25.9485%" height="15" fill="rgb(249,185,26)" fg:x="697" fg:w="383"/><text x="47.4722%" y="383.50">bun`void WTF::URLParser::parse&lt;unsigned c..</text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (2 samples, 0.14%)</title><rect x="73.0352%" y="357" width="0.1355%" height="15" fill="rgb(249,174,33)" fg:x="1078" fg:w="2"/><text x="73.2852%" y="367.50"></text></g><g><title>bun`WTF::URL::URL (405 samples, 27.44%)</title><rect x="46.1382%" y="405" width="27.4390%" height="15" fill="rgb(233,201,37)" fg:x="681" fg:w="405"/><text x="46.3882%" y="415.50">bun`WTF::URL::URL</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (6 samples, 0.41%)</title><rect x="73.1707%" y="389" width="0.4065%" height="15" fill="rgb(221,78,26)" fg:x="1080" fg:w="6"/><text x="73.4207%" y="399.50"></text></g><g><title>bun`WTF::URLParser::URLParser (2 samples, 0.14%)</title><rect x="73.5772%" y="405" width="0.1355%" height="15" fill="rgb(250,127,30)" fg:x="1086" fg:w="2"/><text x="73.8272%" y="415.50"></text></g><g><title>bun`WTF::fastMalloc (5 samples, 0.34%)</title><rect x="73.7127%" y="405" width="0.3388%" height="15" fill="rgb(230,49,44)" fg:x="1088" fg:w="5"/><text x="73.9627%" y="415.50"></text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (2 samples, 0.14%)</title><rect x="74.0515%" y="405" width="0.1355%" height="15" fill="rgb(229,67,23)" fg:x="1093" fg:w="2"/><text x="74.3015%" y="415.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (2 samples, 0.14%)</title><rect x="74.0515%" y="389" width="0.1355%" height="15" fill="rgb(249,83,47)" fg:x="1093" fg:w="2"/><text x="74.3015%" y="399.50"></text></g><g><title>bun`WebCore::DOMURL::create (451 samples, 30.56%)</title><rect x="43.9024%" y="437" width="30.5556%" height="15" fill="rgb(215,43,3)" fg:x="648" fg:w="451"/><text x="44.1524%" y="447.50">bun`WebCore::DOMURL::create</text></g><g><title>bun`WebCore::DOMURL::create (424 samples, 28.73%)</title><rect x="45.7317%" y="421" width="28.7263%" height="15" fill="rgb(238,154,13)" fg:x="675" fg:w="424"/><text x="45.9817%" y="431.50">bun`WebCore::DOMURL::create</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.27%)</title><rect x="74.1870%" y="405" width="0.2710%" height="15" fill="rgb(219,56,2)" fg:x="1095" fg:w="4"/><text x="74.4370%" y="415.50"></text></g><g><title>bun`WebCore::valueToUSVString (2 samples, 0.14%)</title><rect x="74.4580%" y="437" width="0.1355%" height="15" fill="rgb(233,0,4)" fg:x="1099" fg:w="2"/><text x="74.7080%" y="447.50"></text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (1 samples, 0.07%)</title><rect x="74.5935%" y="437" width="0.0678%" height="15" fill="rgb(235,30,7)" fg:x="1101" fg:w="1"/><text x="74.8435%" y="447.50"></text></g><g><title>bun`WebCore::constructJSDOMURL1 (789 samples, 53.46%)</title><rect x="21.5447%" y="453" width="53.4553%" height="15" fill="rgb(250,79,13)" fg:x="318" fg:w="789"/><text x="21.7947%" y="463.50">bun`WebCore::constructJSDOMURL1</text></g><g><title>bun`void WebCore::setSubclassStructureIfNeeded&lt;WebCore::DOMURL&gt; (5 samples, 0.34%)</title><rect x="74.6612%" y="437" width="0.3388%" height="15" fill="rgb(211,146,34)" fg:x="1102" fg:w="5"/><text x="74.9112%" y="447.50"></text></g><g><title>0x10e0340f0 (799 samples, 54.13%)</title><rect x="21.0027%" y="469" width="54.1328%" height="15" fill="rgb(228,22,38)" fg:x="310" fg:w="799"/><text x="21.2527%" y="479.50">0x10e0340f0</text></g><g><title>bun`void WebCore::setSubclassStructureIfNeeded&lt;WebCore::DOMURL&gt; (2 samples, 0.14%)</title><rect x="75.0000%" y="453" width="0.1355%" height="15" fill="rgb(235,168,5)" fg:x="1107" fg:w="2"/><text x="75.2500%" y="463.50"></text></g><g><title>0x10e034108 (1 samples, 0.07%)</title><rect x="75.1355%" y="469" width="0.0678%" height="15" fill="rgb(221,155,16)" fg:x="1109" fg:w="1"/><text x="75.3855%" y="479.50"></text></g><g><title>0x10e0ac208 (804 samples, 54.47%)</title><rect x="20.8672%" y="485" width="54.4715%" height="15" fill="rgb(215,215,53)" fg:x="308" fg:w="804"/><text x="21.1172%" y="495.50">0x10e0ac208</text></g><g><title>bun`WebCore::constructJSDOMURL1 (2 samples, 0.14%)</title><rect x="75.2033%" y="469" width="0.1355%" height="15" fill="rgb(223,4,10)" fg:x="1110" fg:w="2"/><text x="75.4533%" y="479.50"></text></g><g><title>0x10e0ac260 (2 samples, 0.14%)</title><rect x="75.3388%" y="485" width="0.1355%" height="15" fill="rgb(234,103,6)" fg:x="1112" fg:w="2"/><text x="75.5888%" y="495.50"></text></g><g><title>0x10e0ac454 (3 samples, 0.20%)</title><rect x="75.4743%" y="485" width="0.2033%" height="15" fill="rgb(227,97,0)" fg:x="1114" fg:w="3"/><text x="75.7243%" y="495.50"></text></g><g><title>0x10e0ac458 (1 samples, 0.07%)</title><rect x="75.6775%" y="485" width="0.0678%" height="15" fill="rgb(234,150,53)" fg:x="1117" fg:w="1"/><text x="75.9275%" y="495.50"></text></g><g><title>0x10e0bc004 (2 samples, 0.14%)</title><rect x="75.7453%" y="485" width="0.1355%" height="15" fill="rgb(228,201,54)" fg:x="1118" fg:w="2"/><text x="75.9953%" y="495.50"></text></g><g><title>bun`JSC::JSGlobalObject::getOwnPropertySlot (2 samples, 0.14%)</title><rect x="76.0840%" y="469" width="0.1355%" height="15" fill="rgb(222,22,37)" fg:x="1123" fg:w="2"/><text x="76.3340%" y="479.50"></text></g><g><title>bun`Zig::JSDOMURL_getter (1 samples, 0.07%)</title><rect x="76.2195%" y="469" width="0.0678%" height="15" fill="rgb(237,53,32)" fg:x="1125" fg:w="1"/><text x="76.4695%" y="479.50"></text></g><g><title>bun`JSC::JSGlobalObject::getOwnPropertySlot (11 samples, 0.75%)</title><rect x="79.2683%" y="453" width="0.7453%" height="15" fill="rgb(233,25,53)" fg:x="1170" fg:w="11"/><text x="79.5183%" y="463.50"></text></g><g><title>0x10e0bc018 (64 samples, 4.34%)</title><rect x="75.8808%" y="485" width="4.3360%" height="15" fill="rgb(210,40,34)" fg:x="1120" fg:w="64"/><text x="76.1308%" y="495.50">0x10e..</text></g><g><title>bun`operationGetById (58 samples, 3.93%)</title><rect x="76.2873%" y="469" width="3.9295%" height="15" fill="rgb(241,220,44)" fg:x="1126" fg:w="58"/><text x="76.5373%" y="479.50">bun`..</text></g><g><title>bun`JSC::PropertyTable::find (3 samples, 0.20%)</title><rect x="80.0136%" y="453" width="0.2033%" height="15" fill="rgb(235,28,35)" fg:x="1181" fg:w="3"/><text x="80.2636%" y="463.50"></text></g><g><title>0x10e034330 (1 samples, 0.07%)</title><rect x="80.2168%" y="437" width="0.0678%" height="15" fill="rgb(210,56,17)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="447.50"></text></g><g><title>bun`operationLinkCall (1 samples, 0.07%)</title><rect x="80.2168%" y="421" width="0.0678%" height="15" fill="rgb(224,130,29)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="431.50"></text></g><g><title>bun`JSC::ScriptExecutable::prepareForExecutionImpl (1 samples, 0.07%)</title><rect x="80.2168%" y="405" width="0.0678%" height="15" fill="rgb(235,212,8)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="415.50"></text></g><g><title>bun`JSC::UnlinkedFunctionExecutable::unlinkedCodeBlockFor(JSC::VM&amp;, JSC::SourceCode const&amp;, JSC::CodeSpecializationKind, WTF::OptionSet (1 samples, 0.07%)</title><rect x="80.2168%" y="389" width="0.0678%" height="15" fill="rgb(223,33,50)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="399.50"></text></g><g><title>bun`JSC::BytecodeGenerator::generate (1 samples, 0.07%)</title><rect x="80.2168%" y="373" width="0.0678%" height="15" fill="rgb(219,149,13)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="383.50"></text></g><g><title>bun`JSC::FunctionNode::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="357" width="0.0678%" height="15" fill="rgb(250,156,29)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="367.50"></text></g><g><title>bun`JSC::SourceElements::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="341" width="0.0678%" height="15" fill="rgb(216,193,19)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="351.50"></text></g><g><title>bun`JSC::BlockNode::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="325" width="0.0678%" height="15" fill="rgb(216,135,14)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="335.50"></text></g><g><title>bun`JSC::SourceElements::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="309" width="0.0678%" height="15" fill="rgb(241,47,5)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="319.50"></text></g><g><title>bun`JSC::IfElseNode::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="293" width="0.0678%" height="15" fill="rgb(233,42,35)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="303.50"></text></g><g><title>bun`JSC::ReturnNode::emitBytecode (1 samples, 0.07%)</title><rect x="80.2168%" y="277" width="0.0678%" height="15" fill="rgb(231,13,6)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="287.50"></text></g><g><title>bun`bool JSC::OpRet::emitImpl&lt;(JSC::OpcodeSize)1, true, JSC::BytecodeGenerator&gt; (1 samples, 0.07%)</title><rect x="80.2168%" y="261" width="0.0678%" height="15" fill="rgb(207,181,40)" fg:x="1184" fg:w="1"/><text x="80.4668%" y="271.50"></text></g><g><title>0x10e034e90 (1 samples, 0.07%)</title><rect x="80.2846%" y="309" width="0.0678%" height="15" fill="rgb(254,173,49)" fg:x="1185" fg:w="1"/><text x="80.5346%" y="319.50"></text></g><g><title>bun`WTF::StringImpl::~StringImpl (1 samples, 0.07%)</title><rect x="80.3523%" y="293" width="0.0678%" height="15" fill="rgb(221,1,38)" fg:x="1186" fg:w="1"/><text x="80.6023%" y="303.50"></text></g><g><title>bun`WTF::URL::path (1 samples, 0.07%)</title><rect x="80.4201%" y="293" width="0.0678%" height="15" fill="rgb(206,124,46)" fg:x="1187" fg:w="1"/><text x="80.6701%" y="303.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (2 samples, 0.14%)</title><rect x="80.4878%" y="277" width="0.1355%" height="15" fill="rgb(249,21,11)" fg:x="1188" fg:w="2"/><text x="80.7378%" y="287.50"></text></g><g><title>bun`WTF::fastMalloc (1 samples, 0.07%)</title><rect x="80.6233%" y="261" width="0.0678%" height="15" fill="rgb(222,201,40)" fg:x="1190" fg:w="1"/><text x="80.8733%" y="271.50"></text></g><g><title>bun`WTF::String::String (3 samples, 0.20%)</title><rect x="80.6233%" y="277" width="0.2033%" height="15" fill="rgb(235,61,29)" fg:x="1190" fg:w="3"/><text x="80.8733%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.14%)</title><rect x="80.6911%" y="261" width="0.1355%" height="15" fill="rgb(219,207,3)" fg:x="1191" fg:w="2"/><text x="80.9411%" y="271.50"></text></g><g><title>bun`pas_thread_local_cache_flush_deallocation_log (1 samples, 0.07%)</title><rect x="80.8266%" y="277" width="0.0678%" height="15" fill="rgb(222,56,46)" fg:x="1193" fg:w="1"/><text x="81.0766%" y="287.50"></text></g><g><title>0x10e034ea4 (9 samples, 0.61%)</title><rect x="80.3523%" y="309" width="0.6098%" height="15" fill="rgb(239,76,54)" fg:x="1186" fg:w="9"/><text x="80.6023%" y="319.50"></text></g><g><title>bun`WebCore::jsDOMURL_pathname (7 samples, 0.47%)</title><rect x="80.4878%" y="293" width="0.4743%" height="15" fill="rgb(231,124,27)" fg:x="1188" fg:w="7"/><text x="80.7378%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.07%)</title><rect x="80.8943%" y="277" width="0.0678%" height="15" fill="rgb(249,195,6)" fg:x="1194" fg:w="1"/><text x="81.1443%" y="287.50"></text></g><g><title>bun`WTF::String::String (1 samples, 0.07%)</title><rect x="80.9621%" y="277" width="0.0678%" height="15" fill="rgb(237,174,47)" fg:x="1195" fg:w="1"/><text x="81.2121%" y="287.50"></text></g><g><title>bun`WTF::fastMalloc (1 samples, 0.07%)</title><rect x="80.9621%" y="261" width="0.0678%" height="15" fill="rgb(206,201,31)" fg:x="1195" fg:w="1"/><text x="81.2121%" y="271.50"></text></g><g><title>0x10e038bcc (2 samples, 0.14%)</title><rect x="80.9621%" y="309" width="0.1355%" height="15" fill="rgb(231,57,52)" fg:x="1195" fg:w="2"/><text x="81.2121%" y="319.50"></text></g><g><title>bun`WebCore::jsDOMURL_pathname (2 samples, 0.14%)</title><rect x="80.9621%" y="293" width="0.1355%" height="15" fill="rgb(248,177,22)" fg:x="1195" fg:w="2"/><text x="81.2121%" y="303.50"></text></g><g><title>bun`WTF::fastFree (1 samples, 0.07%)</title><rect x="81.0298%" y="277" width="0.0678%" height="15" fill="rgb(215,211,37)" fg:x="1196" fg:w="1"/><text x="81.2798%" y="287.50"></text></g><g><title>bun`JSC::JSValue WebCore::toJSNewlyCreated&lt;WebCore::IDLInterface&lt;WebCore::DOMURL&gt;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits&lt;WebCore::DOMURL&gt; &gt; &gt; &gt;(JSC::JSGlobalObject&amp;, Zig::GlobalObject&amp;, JSC::ThrowScope&amp;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (1 samples, 0.07%)</title><rect x="81.0976%" y="245" width="0.0678%" height="15" fill="rgb(241,128,51)" fg:x="1197" fg:w="1"/><text x="81.3476%" y="255.50"></text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (1 samples, 0.07%)</title><rect x="81.0976%" y="229" width="0.0678%" height="15" fill="rgb(227,165,31)" fg:x="1197" fg:w="1"/><text x="81.3476%" y="239.50"></text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (1 samples, 0.07%)</title><rect x="81.0976%" y="213" width="0.0678%" height="15" fill="rgb(228,167,24)" fg:x="1197" fg:w="1"/><text x="81.3476%" y="223.50"></text></g><g><title>0x10e080308 (3 samples, 0.20%)</title><rect x="81.0976%" y="309" width="0.2033%" height="15" fill="rgb(228,143,12)" fg:x="1197" fg:w="3"/><text x="81.3476%" y="319.50"></text></g><g><title>0x10e0780bc (3 samples, 0.20%)</title><rect x="81.0976%" y="293" width="0.2033%" height="15" fill="rgb(249,149,8)" fg:x="1197" fg:w="3"/><text x="81.3476%" y="303.50"></text></g><g><title>0x10e0340f0 (3 samples, 0.20%)</title><rect x="81.0976%" y="277" width="0.2033%" height="15" fill="rgb(243,35,44)" fg:x="1197" fg:w="3"/><text x="81.3476%" y="287.50"></text></g><g><title>bun`WebCore::constructJSDOMURL1 (3 samples, 0.20%)</title><rect x="81.0976%" y="261" width="0.2033%" height="15" fill="rgb(246,89,9)" fg:x="1197" fg:w="3"/><text x="81.3476%" y="271.50"></text></g><g><title>bun`WebCore::DOMURL::create (2 samples, 0.14%)</title><rect x="81.1653%" y="245" width="0.1355%" height="15" fill="rgb(233,213,13)" fg:x="1198" fg:w="2"/><text x="81.4153%" y="255.50"></text></g><g><title>bun`WebCore::DOMURL::create (2 samples, 0.14%)</title><rect x="81.1653%" y="229" width="0.1355%" height="15" fill="rgb(233,141,41)" fg:x="1198" fg:w="2"/><text x="81.4153%" y="239.50"></text></g><g><title>bun`WTF::URL::URL (2 samples, 0.14%)</title><rect x="81.1653%" y="213" width="0.1355%" height="15" fill="rgb(239,167,4)" fg:x="1198" fg:w="2"/><text x="81.4153%" y="223.50"></text></g><g><title>bun`WTF::URLParser::URLParser (2 samples, 0.14%)</title><rect x="81.1653%" y="197" width="0.1355%" height="15" fill="rgb(209,217,16)" fg:x="1198" fg:w="2"/><text x="81.4153%" y="207.50"></text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (2 samples, 0.14%)</title><rect x="81.1653%" y="181" width="0.1355%" height="15" fill="rgb(219,88,35)" fg:x="1198" fg:w="2"/><text x="81.4153%" y="191.50"></text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (1 samples, 0.07%)</title><rect x="81.2331%" y="165" width="0.0678%" height="15" fill="rgb(220,193,23)" fg:x="1199" fg:w="1"/><text x="81.4831%" y="175.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4PieceParsingError&gt; WTF::URLParser::parseIPv4Piece&lt;unsigned char&gt;(WTF::CodePointIterator (1 samples, 0.07%)</title><rect x="81.2331%" y="149" width="0.0678%" height="15" fill="rgb(230,90,52)" fg:x="1199" fg:w="1"/><text x="81.4831%" y="159.50"></text></g><g><title>bun`JSC::LocalAllocator::allocateSlowCase (2 samples, 0.14%)</title><rect x="81.5041%" y="229" width="0.1355%" height="15" fill="rgb(252,106,19)" fg:x="1203" fg:w="2"/><text x="81.7541%" y="239.50"></text></g><g><title>bun`JSC::BlockDirectory::tryAllocateBlock (2 samples, 0.14%)</title><rect x="81.5041%" y="213" width="0.1355%" height="15" fill="rgb(206,74,20)" fg:x="1203" fg:w="2"/><text x="81.7541%" y="223.50"></text></g><g><title>bun`WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;::rehash(unsigned int, WTF::KeyValuePair&lt;void*, JSC::Weak (2 samples, 0.14%)</title><rect x="81.9106%" y="213" width="0.1355%" height="15" fill="rgb(230,138,44)" fg:x="1209" fg:w="2"/><text x="82.1606%" y="223.50"></text></g><g><title>bun`JSC::JSValue WebCore::toJSNewlyCreated&lt;WebCore::IDLInterface&lt;WebCore::DOMURL&gt;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits&lt;WebCore::DOMURL&gt; &gt; &gt; &gt;(JSC::JSGlobalObject&amp;, Zig::GlobalObject&amp;, JSC::ThrowScope&amp;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (10 samples, 0.68%)</title><rect x="81.5041%" y="261" width="0.6775%" height="15" fill="rgb(235,182,43)" fg:x="1203" fg:w="10"/><text x="81.7541%" y="271.50"></text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (10 samples, 0.68%)</title><rect x="81.5041%" y="245" width="0.6775%" height="15" fill="rgb(242,16,51)" fg:x="1203" fg:w="10"/><text x="81.7541%" y="255.50"></text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (8 samples, 0.54%)</title><rect x="81.6396%" y="229" width="0.5420%" height="15" fill="rgb(248,9,4)" fg:x="1205" fg:w="8"/><text x="81.8896%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.14%)</title><rect x="82.0461%" y="213" width="0.1355%" height="15" fill="rgb(210,31,22)" fg:x="1211" fg:w="2"/><text x="82.2961%" y="223.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (1 samples, 0.07%)</title><rect x="83.8076%" y="165" width="0.0678%" height="15" fill="rgb(239,54,39)" fg:x="1237" fg:w="1"/><text x="84.0576%" y="175.50"></text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (16 samples, 1.08%)</title><rect x="82.9268%" y="181" width="1.0840%" height="15" fill="rgb(230,99,41)" fg:x="1224" fg:w="16"/><text x="83.1768%" y="191.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4PieceParsingError&gt; WTF::URLParser::parseIPv4Piece&lt;unsigned char&gt;(WTF::CodePointIterator (2 samples, 0.14%)</title><rect x="83.8753%" y="165" width="0.1355%" height="15" fill="rgb(253,106,12)" fg:x="1238" fg:w="2"/><text x="84.1253%" y="175.50"></text></g><g><title>bun`WTF::URLParser::URLParser (27 samples, 1.83%)</title><rect x="82.2493%" y="213" width="1.8293%" height="15" fill="rgb(213,46,41)" fg:x="1214" fg:w="27"/><text x="82.4993%" y="223.50">b..</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (27 samples, 1.83%)</title><rect x="82.2493%" y="197" width="1.8293%" height="15" fill="rgb(215,133,35)" fg:x="1214" fg:w="27"/><text x="82.4993%" y="207.50">b..</text></g><g><title>bun`WTF::dnsNameEndsInNumber (1 samples, 0.07%)</title><rect x="84.0108%" y="181" width="0.0678%" height="15" fill="rgb(213,28,5)" fg:x="1240" fg:w="1"/><text x="84.2608%" y="191.50"></text></g><g><title>bun`WTF::URL::URL (28 samples, 1.90%)</title><rect x="82.2493%" y="229" width="1.8970%" height="15" fill="rgb(215,77,49)" fg:x="1214" fg:w="28"/><text x="82.4993%" y="239.50">b..</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (1 samples, 0.07%)</title><rect x="84.0786%" y="213" width="0.0678%" height="15" fill="rgb(248,100,22)" fg:x="1241" fg:w="1"/><text x="84.3286%" y="223.50"></text></g><g><title>bun`pas_segregated_page_construct (2 samples, 0.14%)</title><rect x="84.1463%" y="197" width="0.1355%" height="15" fill="rgb(208,67,9)" fg:x="1242" fg:w="2"/><text x="84.3963%" y="207.50"></text></g><g><title>0x10e0340f0 (45 samples, 3.05%)</title><rect x="81.3008%" y="293" width="3.0488%" height="15" fill="rgb(219,133,21)" fg:x="1200" fg:w="45"/><text x="81.5508%" y="303.50">0x1..</text></g><g><title>bun`WebCore::constructJSDOMURL1 (45 samples, 3.05%)</title><rect x="81.3008%" y="277" width="3.0488%" height="15" fill="rgb(246,46,29)" fg:x="1200" fg:w="45"/><text x="81.5508%" y="287.50">bun..</text></g><g><title>bun`WebCore::DOMURL::create (32 samples, 2.17%)</title><rect x="82.1816%" y="261" width="2.1680%" height="15" fill="rgb(246,185,52)" fg:x="1213" fg:w="32"/><text x="82.4316%" y="271.50">b..</text></g><g><title>bun`WebCore::DOMURL::create (31 samples, 2.10%)</title><rect x="82.2493%" y="245" width="2.1003%" height="15" fill="rgb(252,136,11)" fg:x="1214" fg:w="31"/><text x="82.4993%" y="255.50">b..</text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (3 samples, 0.20%)</title><rect x="84.1463%" y="229" width="0.2033%" height="15" fill="rgb(219,138,53)" fg:x="1242" fg:w="3"/><text x="84.3963%" y="239.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (3 samples, 0.20%)</title><rect x="84.1463%" y="213" width="0.2033%" height="15" fill="rgb(211,51,23)" fg:x="1242" fg:w="3"/><text x="84.3963%" y="223.50"></text></g><g><title>bun`pas_segregated_size_directory_take_first_eligible (1 samples, 0.07%)</title><rect x="84.2818%" y="197" width="0.0678%" height="15" fill="rgb(247,221,28)" fg:x="1244" fg:w="1"/><text x="84.5318%" y="207.50"></text></g><g><title>bun`pas_segregated_directory_append (1 samples, 0.07%)</title><rect x="84.2818%" y="181" width="0.0678%" height="15" fill="rgb(251,222,45)" fg:x="1244" fg:w="1"/><text x="84.5318%" y="191.50"></text></g><g><title>0x10e0a4254 (46 samples, 3.12%)</title><rect x="81.3008%" y="309" width="3.1165%" height="15" fill="rgb(217,162,53)" fg:x="1200" fg:w="46"/><text x="81.5508%" y="319.50">0x1..</text></g><g><title>bun`WebCore::constructJSDOMURL1 (1 samples, 0.07%)</title><rect x="84.3496%" y="293" width="0.0678%" height="15" fill="rgb(229,93,14)" fg:x="1245" fg:w="1"/><text x="84.5996%" y="303.50"></text></g><g><title>bun`WebCore::JSDOMConstructor&lt;WebCore::JSDOMURL&gt;::construct (1 samples, 0.07%)</title><rect x="84.4173%" y="277" width="0.0678%" height="15" fill="rgb(209,67,49)" fg:x="1246" fg:w="1"/><text x="84.6673%" y="287.50"></text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (1 samples, 0.07%)</title><rect x="84.6883%" y="245" width="0.0678%" height="15" fill="rgb(213,87,29)" fg:x="1250" fg:w="1"/><text x="84.9383%" y="255.50"></text></g><g><title>bun`JSC::BlockDirectory::tryAllocateBlock (2 samples, 0.14%)</title><rect x="84.9593%" y="213" width="0.1355%" height="15" fill="rgb(205,151,52)" fg:x="1254" fg:w="2"/><text x="85.2093%" y="223.50"></text></g><g><title>bun`JSC::Heap::runEndPhase (1 samples, 0.07%)</title><rect x="85.0949%" y="133" width="0.0678%" height="15" fill="rgb(253,215,39)" fg:x="1256" fg:w="1"/><text x="85.3449%" y="143.50"></text></g><g><title>bun`JSC::MarkingConstraintSet::executeConvergence (2 samples, 0.14%)</title><rect x="85.1626%" y="117" width="0.1355%" height="15" fill="rgb(221,220,41)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="127.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::execute(JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (2 samples, 0.14%)</title><rect x="85.1626%" y="101" width="0.1355%" height="15" fill="rgb(218,133,21)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="111.50"></text></g><g><title>bun`JSC::Heap::runTaskInParallel(WTF::RefPtr&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt;, WTF::RawPtrTraits&lt;WTF::SharedTask&lt;void (JSC::SlotVisitor&amp;)&gt; &gt;, WTF::DefaultRefDerefTraits&lt;WTF::SharedTask&lt;void  (2 samples, 0.14%)</title><rect x="85.1626%" y="85" width="0.1355%" height="15" fill="rgb(221,193,43)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="95.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::runExecutionThread(JSC::SlotVisitor&amp;, JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (2 samples, 0.14%)</title><rect x="85.1626%" y="69" width="0.1355%" height="15" fill="rgb(240,128,52)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="79.50"></text></g><g><title>bun`WTF::Detail::CallableWrapper&lt;JSC::Heap::addCoreConstraints()::$_38, void, JSC::SlotVisitor&amp;&gt;::call (2 samples, 0.14%)</title><rect x="85.1626%" y="53" width="0.1355%" height="15" fill="rgb(253,114,12)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="63.50"></text></g><g><title>bun`JSC::WeakBlock::visit (2 samples, 0.14%)</title><rect x="85.1626%" y="37" width="0.1355%" height="15" fill="rgb(215,223,47)" fg:x="1257" fg:w="2"/><text x="85.4126%" y="47.50"></text></g><g><title>bun`JSC::Heap::stopIfNecessary (4 samples, 0.27%)</title><rect x="85.0949%" y="213" width="0.2710%" height="15" fill="rgb(248,225,23)" fg:x="1256" fg:w="4"/><text x="85.3449%" y="223.50"></text></g><g><title>bun`JSC::Heap::collectInMutatorThread (4 samples, 0.27%)</title><rect x="85.0949%" y="197" width="0.2710%" height="15" fill="rgb(250,108,0)" fg:x="1256" fg:w="4"/><text x="85.3449%" y="207.50"></text></g><g><title>bun`JSC::callWithCurrentThreadState(WTF::ScopedLambda&lt;void  (4 samples, 0.27%)</title><rect x="85.0949%" y="181" width="0.2710%" height="15" fill="rgb(228,208,7)" fg:x="1256" fg:w="4"/><text x="85.3449%" y="191.50"></text></g><g><title>bun`WTF::ScopedLambdaFunctor&lt;void (JSC::CurrentThreadState&amp;), JSC::Heap::collectInMutatorThread()::$_0&gt;::implFunction (4 samples, 0.27%)</title><rect x="85.0949%" y="165" width="0.2710%" height="15" fill="rgb(244,45,10)" fg:x="1256" fg:w="4"/><text x="85.3449%" y="175.50"></text></g><g><title>bun`JSC::Heap::runCurrentPhase (4 samples, 0.27%)</title><rect x="85.0949%" y="149" width="0.2710%" height="15" fill="rgb(207,125,25)" fg:x="1256" fg:w="4"/><text x="85.3449%" y="159.50"></text></g><g><title>bun`JSC::Heap::runFixpointPhase (3 samples, 0.20%)</title><rect x="85.1626%" y="133" width="0.2033%" height="15" fill="rgb(210,195,18)" fg:x="1257" fg:w="3"/><text x="85.4126%" y="143.50"></text></g><g><title>bun`JSC::SlotVisitor::didReachTermination (1 samples, 0.07%)</title><rect x="85.2981%" y="117" width="0.0678%" height="15" fill="rgb(249,80,12)" fg:x="1259" fg:w="1"/><text x="85.5481%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`syscall_thread_switch (1 samples, 0.07%)</title><rect x="85.2981%" y="101" width="0.0678%" height="15" fill="rgb(221,65,9)" fg:x="1259" fg:w="1"/><text x="85.5481%" y="111.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (1 samples, 0.07%)</title><rect x="85.3659%" y="165" width="0.0678%" height="15" fill="rgb(235,49,36)" fg:x="1260" fg:w="1"/><text x="85.6159%" y="175.50"></text></g><g><title>bun`WebCore::DOMURL::~DOMURL (1 samples, 0.07%)</title><rect x="85.4336%" y="165" width="0.0678%" height="15" fill="rgb(225,32,20)" fg:x="1261" fg:w="1"/><text x="85.6836%" y="175.50"></text></g><g><title>bun`pas_thread_local_cache_flush_deallocation_log (1 samples, 0.07%)</title><rect x="85.5014%" y="165" width="0.0678%" height="15" fill="rgb(215,141,46)" fg:x="1262" fg:w="1"/><text x="85.7514%" y="175.50"></text></g><g><title>bun`JSC::JSDestructibleObjectHeapCellType::finishSweep (5 samples, 0.34%)</title><rect x="85.3659%" y="181" width="0.3388%" height="15" fill="rgb(250,160,47)" fg:x="1260" fg:w="5"/><text x="85.6159%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.14%)</title><rect x="85.5691%" y="165" width="0.1355%" height="15" fill="rgb(216,222,40)" fg:x="1263" fg:w="2"/><text x="85.8191%" y="175.50"></text></g><g><title>bun`JSC::WeakBlock::sweep (1 samples, 0.07%)</title><rect x="85.7046%" y="181" width="0.0678%" height="15" fill="rgb(234,217,39)" fg:x="1265" fg:w="1"/><text x="85.9546%" y="191.50"></text></g><g><title>bun`JSC::WeakBlock::sweep (18 samples, 1.22%)</title><rect x="85.7724%" y="165" width="1.2195%" height="15" fill="rgb(207,178,40)" fg:x="1266" fg:w="18"/><text x="86.0224%" y="175.50"></text></g><g><title>bun`JSC::LocalAllocator::allocateSlowCase (37 samples, 2.51%)</title><rect x="84.9593%" y="229" width="2.5068%" height="15" fill="rgb(221,136,13)" fg:x="1254" fg:w="37"/><text x="85.2093%" y="239.50">bu..</text></g><g><title>bun`JSC::LocalAllocator::tryAllocateIn (31 samples, 2.10%)</title><rect x="85.3659%" y="213" width="2.1003%" height="15" fill="rgb(249,199,10)" fg:x="1260" fg:w="31"/><text x="85.6159%" y="223.50">b..</text></g><g><title>bun`JSC::MarkedBlock::Handle::sweep (31 samples, 2.10%)</title><rect x="85.3659%" y="197" width="2.1003%" height="15" fill="rgb(249,222,13)" fg:x="1260" fg:w="31"/><text x="85.6159%" y="207.50">b..</text></g><g><title>bun`JSC::WeakSet::sweep (25 samples, 1.69%)</title><rect x="85.7724%" y="181" width="1.6938%" height="15" fill="rgb(244,185,38)" fg:x="1266" fg:w="25"/><text x="86.0224%" y="191.50"></text></g><g><title>bun`WebCore::JSDOMURLOwner::finalize(JSC::Handle (7 samples, 0.47%)</title><rect x="86.9919%" y="165" width="0.4743%" height="15" fill="rgb(236,202,9)" fg:x="1284" fg:w="7"/><text x="87.2419%" y="175.50"></text></g><g><title>bun`JSC::Heap::didAllocate (1 samples, 0.07%)</title><rect x="87.4661%" y="213" width="0.0678%" height="15" fill="rgb(250,229,37)" fg:x="1291" fg:w="1"/><text x="87.7161%" y="223.50"></text></g><g><title>bun`JSC::WeakSet::findAllocator (3 samples, 0.20%)</title><rect x="87.4661%" y="229" width="0.2033%" height="15" fill="rgb(206,174,23)" fg:x="1291" fg:w="3"/><text x="87.7161%" y="239.50"></text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (2 samples, 0.14%)</title><rect x="87.5339%" y="213" width="0.1355%" height="15" fill="rgb(211,33,43)" fg:x="1292" fg:w="2"/><text x="87.7839%" y="223.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (2 samples, 0.14%)</title><rect x="87.5339%" y="197" width="0.1355%" height="15" fill="rgb(245,58,50)" fg:x="1292" fg:w="2"/><text x="87.7839%" y="207.50"></text></g><g><title>bun`pas_segregated_page_construct (2 samples, 0.14%)</title><rect x="87.5339%" y="181" width="0.1355%" height="15" fill="rgb(244,68,36)" fg:x="1292" fg:w="2"/><text x="87.7839%" y="191.50"></text></g><g><title>bun`WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;::rehash(unsigned int, WTF::KeyValuePair&lt;void*, JSC::Weak (8 samples, 0.54%)</title><rect x="89.8374%" y="213" width="0.5420%" height="15" fill="rgb(232,229,15)" fg:x="1326" fg:w="8"/><text x="90.0874%" y="223.50"></text></g><g><title>bun`JSC::JSValue WebCore::toJSNewlyCreated&lt;WebCore::IDLInterface&lt;WebCore::DOMURL&gt;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits&lt;WebCore::DOMURL&gt; &gt; &gt; &gt;(JSC::JSGlobalObject&amp;, Zig::GlobalObject&amp;, JSC::ThrowScope&amp;, WebCore::ExceptionOr&lt;WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (89 samples, 6.03%)</title><rect x="84.6206%" y="261" width="6.0298%" height="15" fill="rgb(254,30,23)" fg:x="1249" fg:w="89"/><text x="84.8706%" y="271.50">bun`JSC:..</text></g><g><title>bun`std::__1::enable_if&lt;std::is_same&lt;WebCore::DOMURL, WebCore::DOMURL&gt;::value, WebCore::JSDOMWrapperConverterTraits&lt;WebCore::DOMURL&gt;::WrapperClass*&gt;::type WebCore::createWrapper&lt;WebCore::DOMURL, WebCore::DOMURL&gt;(Zig::GlobalObject*, WTF::Ref&lt;WebCore::DOMURL, WTF::RawPtrTraits (87 samples, 5.89%)</title><rect x="84.7561%" y="245" width="5.8943%" height="15" fill="rgb(235,160,14)" fg:x="1251" fg:w="87"/><text x="85.0061%" y="255.50">bun`std..</text></g><g><title>bun`WTF::HashTableAddResult&lt;WTF::HashTableIterator&lt;WTF::HashTable&lt;void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt;, void*, WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::KeyValuePairKeyExtractor&lt;WTF::KeyValuePair&lt;void*, JSC::Weak&lt;JSC::JSObject&gt; &gt; &gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::KeyValuePairTraits, WTF::HashTraits&lt;void*&gt; &gt; &gt; WTF::HashMap&lt;void*, JSC::Weak&lt;JSC::JSObject&gt;, WTF::DefaultHash&lt;void*&gt;, WTF::HashTraits&lt;void*&gt;, WTF::HashTraits&lt;JSC::Weak&lt;JSC::JSObject&gt; &gt;, WTF::HashTableTraits&gt;::inlineSet&lt;void* const&amp;, JSC::Weak (44 samples, 2.98%)</title><rect x="87.6694%" y="229" width="2.9810%" height="15" fill="rgb(212,155,44)" fg:x="1294" fg:w="44"/><text x="87.9194%" y="239.50">bun..</text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.27%)</title><rect x="90.3794%" y="213" width="0.2710%" height="15" fill="rgb(226,2,50)" fg:x="1334" fg:w="4"/><text x="90.6294%" y="223.50"></text></g><g><title>bun`WTF::URL::URL (1 samples, 0.07%)</title><rect x="90.6504%" y="261" width="0.0678%" height="15" fill="rgb(234,177,6)" fg:x="1338" fg:w="1"/><text x="90.9004%" y="271.50"></text></g><g><title>bun`WTF::URL::URL (20 samples, 1.36%)</title><rect x="90.7859%" y="245" width="1.3550%" height="15" fill="rgb(217,24,9)" fg:x="1340" fg:w="20"/><text x="91.0359%" y="255.50"></text></g><g><title>bun`WTF::URLParser::URLParser (11 samples, 0.75%)</title><rect x="91.3957%" y="229" width="0.7453%" height="15" fill="rgb(220,13,46)" fg:x="1349" fg:w="11"/><text x="91.6457%" y="239.50"></text></g><g><title>bun`DYLD-STUB$$pthread_getspecific (1 samples, 0.07%)</title><rect x="92.2764%" y="229" width="0.0678%" height="15" fill="rgb(239,221,27)" fg:x="1362" fg:w="1"/><text x="92.5264%" y="239.50"></text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4ParsingError&gt; WTF::URLParser::parseIPv4Host&lt;unsigned char, unsigned char&gt;(WTF::CodePointIterator&lt;unsigned char&gt; const&amp;, WTF::CodePointIterator (8 samples, 0.54%)</title><rect x="96.4092%" y="165" width="0.5420%" height="15" fill="rgb(222,198,25)" fg:x="1423" fg:w="8"/><text x="96.6592%" y="175.50"></text></g><g><title>bun`WTF::URLParser::HostParsingResult WTF::URLParser::parseHostAndPort&lt;unsigned char&gt;(WTF::CodePointIterator (50 samples, 3.39%)</title><rect x="94.3089%" y="181" width="3.3875%" height="15" fill="rgb(211,99,13)" fg:x="1392" fg:w="50"/><text x="94.5589%" y="191.50">bun..</text></g><g><title>bun`std::experimental::fundamentals_v3::expected&lt;unsigned int, WTF::URLParser::IPv4PieceParsingError&gt; WTF::URLParser::parseIPv4Piece&lt;unsigned char&gt;(WTF::CodePointIterator (11 samples, 0.75%)</title><rect x="96.9512%" y="165" width="0.7453%" height="15" fill="rgb(232,111,31)" fg:x="1431" fg:w="11"/><text x="97.2012%" y="175.50"></text></g><g><title>bun`WTF::URL::URL (84 samples, 5.69%)</title><rect x="92.3442%" y="229" width="5.6911%" height="15" fill="rgb(245,82,37)" fg:x="1363" fg:w="84"/><text x="92.5942%" y="239.50">bun`WTF..</text></g><g><title>bun`WTF::URLParser::URLParser (83 samples, 5.62%)</title><rect x="92.4119%" y="213" width="5.6233%" height="15" fill="rgb(227,149,46)" fg:x="1364" fg:w="83"/><text x="92.6619%" y="223.50">bun`WTF..</text></g><g><title>bun`void WTF::URLParser::parse&lt;unsigned char&gt; (83 samples, 5.62%)</title><rect x="92.4119%" y="197" width="5.6233%" height="15" fill="rgb(218,36,50)" fg:x="1364" fg:w="83"/><text x="92.6619%" y="207.50">bun`voi..</text></g><g><title>bun`WTF::dnsNameEndsInNumber (5 samples, 0.34%)</title><rect x="97.6965%" y="181" width="0.3388%" height="15" fill="rgb(226,80,48)" fg:x="1442" fg:w="5"/><text x="97.9465%" y="191.50"></text></g><g><title>bun`WebCore::DOMURL::create (111 samples, 7.52%)</title><rect x="90.7182%" y="261" width="7.5203%" height="15" fill="rgb(238,224,15)" fg:x="1339" fg:w="111"/><text x="90.9682%" y="271.50">bun`WebCor..</text></g><g><title>bun`WebCore::DOMURL::create (90 samples, 6.10%)</title><rect x="92.1409%" y="245" width="6.0976%" height="15" fill="rgb(241,136,10)" fg:x="1360" fg:w="90"/><text x="92.3909%" y="255.50">bun`WebC..</text></g><g><title>bun`bmalloc_allocate_impl_casual_case(unsigned long, unsigned long) (.27488) (3 samples, 0.20%)</title><rect x="98.0352%" y="229" width="0.2033%" height="15" fill="rgb(208,32,45)" fg:x="1447" fg:w="3"/><text x="98.2852%" y="239.50"></text></g><g><title>bun`bmalloc_heap_config_specialized_local_allocator_try_allocate_small_segregated_slow (3 samples, 0.20%)</title><rect x="98.0352%" y="213" width="0.2033%" height="15" fill="rgb(207,135,9)" fg:x="1447" fg:w="3"/><text x="98.2852%" y="223.50"></text></g><g><title>bun`pas_segregated_page_construct (3 samples, 0.20%)</title><rect x="98.0352%" y="197" width="0.2033%" height="15" fill="rgb(206,86,44)" fg:x="1447" fg:w="3"/><text x="98.2852%" y="207.50"></text></g><g><title>bun`WebCore::valueToUSVString (1 samples, 0.07%)</title><rect x="98.2385%" y="261" width="0.0678%" height="15" fill="rgb(245,177,15)" fg:x="1450" fg:w="1"/><text x="98.4885%" y="271.50"></text></g><g><title>bun`WebCore::constructJSDOMURL1 (205 samples, 13.89%)</title><rect x="84.4851%" y="277" width="13.8889%" height="15" fill="rgb(206,64,50)" fg:x="1247" fg:w="205"/><text x="84.7351%" y="287.50">bun`WebCore::construc..</text></g><g><title>bun`void WebCore::setSubclassStructureIfNeeded&lt;WebCore::DOMURL&gt; (1 samples, 0.07%)</title><rect x="98.3062%" y="261" width="0.0678%" height="15" fill="rgb(234,36,40)" fg:x="1451" fg:w="1"/><text x="98.5562%" y="271.50"></text></g><g><title>0x10e0340f0 (207 samples, 14.02%)</title><rect x="84.4173%" y="293" width="14.0244%" height="15" fill="rgb(213,64,8)" fg:x="1246" fg:w="207"/><text x="84.6673%" y="303.50">0x10e0340f0</text></g><g><title>bun`WebCore::valueToUSVString (1 samples, 0.07%)</title><rect x="98.3740%" y="277" width="0.0678%" height="15" fill="rgb(210,75,36)" fg:x="1452" fg:w="1"/><text x="98.6240%" y="287.50"></text></g><g><title>0x10e0a8130 (208 samples, 14.09%)</title><rect x="84.4173%" y="309" width="14.0921%" height="15" fill="rgb(229,88,21)" fg:x="1246" fg:w="208"/><text x="84.6673%" y="319.50">0x10e0a8130</text></g><g><title>bun`WebCore::constructJSDOMURL1 (1 samples, 0.07%)</title><rect x="98.4417%" y="293" width="0.0678%" height="15" fill="rgb(252,204,47)" fg:x="1453" fg:w="1"/><text x="98.6917%" y="303.50"></text></g><g><title>bun`llint_entry (271 samples, 18.36%)</title><rect x="80.2168%" y="485" width="18.3604%" height="15" fill="rgb(208,77,27)" fg:x="1184" fg:w="271"/><text x="80.4668%" y="495.50">bun`llint_entry</text></g><g><title>bun`llint_entry (271 samples, 18.36%)</title><rect x="80.2168%" y="469" width="18.3604%" height="15" fill="rgb(221,76,26)" fg:x="1184" fg:w="271"/><text x="80.4668%" y="479.50">bun`llint_entry</text></g><g><title>bun`llint_entry (271 samples, 18.36%)</title><rect x="80.2168%" y="453" width="18.3604%" height="15" fill="rgb(225,139,18)" fg:x="1184" fg:w="271"/><text x="80.4668%" y="463.50">bun`llint_entry</text></g><g><title>bun`llint_entry (270 samples, 18.29%)</title><rect x="80.2846%" y="437" width="18.2927%" height="15" fill="rgb(230,137,11)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="447.50">bun`llint_entry</text></g><g><title>bun`llint_entry (270 samples, 18.29%)</title><rect x="80.2846%" y="421" width="18.2927%" height="15" fill="rgb(212,28,1)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="431.50">bun`llint_entry</text></g><g><title>bun`llint_entry (270 samples, 18.29%)</title><rect x="80.2846%" y="405" width="18.2927%" height="15" fill="rgb(248,164,17)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="415.50">bun`llint_entry</text></g><g><title>0x10e03803c (270 samples, 18.29%)</title><rect x="80.2846%" y="389" width="18.2927%" height="15" fill="rgb(222,171,42)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="399.50">0x10e03803c</text></g><g><title>bun`JSC::AbstractModuleRecord::evaluate (270 samples, 18.29%)</title><rect x="80.2846%" y="373" width="18.2927%" height="15" fill="rgb(243,84,45)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="383.50">bun`JSC::AbstractModuleRecord..</text></g><g><title>bun`JSC::Interpreter::executeModuleProgram (270 samples, 18.29%)</title><rect x="80.2846%" y="357" width="18.2927%" height="15" fill="rgb(252,49,23)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="367.50">bun`JSC::Interpreter::execute..</text></g><g><title>bun`vmEntryToJavaScript (270 samples, 18.29%)</title><rect x="80.2846%" y="341" width="18.2927%" height="15" fill="rgb(215,19,7)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="351.50">bun`vmEntryToJavaScript</text></g><g><title>bun`llint_entry (270 samples, 18.29%)</title><rect x="80.2846%" y="325" width="18.2927%" height="15" fill="rgb(238,81,41)" fg:x="1185" fg:w="270"/><text x="80.5346%" y="335.50">bun`llint_entry</text></g><g><title>bun`Zig::JSDOMURL_getter (1 samples, 0.07%)</title><rect x="98.5095%" y="309" width="0.0678%" height="15" fill="rgb(210,199,37)" fg:x="1454" fg:w="1"/><text x="98.7595%" y="319.50"></text></g><g><title>bun`JSC::VM::drainMicrotasks (1,455 samples, 98.58%)</title><rect x="0.1355%" y="565" width="98.5772%" height="15" fill="rgb(244,192,49)" fg:x="2" fg:w="1455"/><text x="0.3855%" y="575.50">bun`JSC::VM::drainMicrotasks</text></g><g><title>bun`JSC::runJSMicrotask(JSC::JSGlobalObject*, WTF::ObjectIdentifier (1,455 samples, 98.58%)</title><rect x="0.1355%" y="549" width="98.5772%" height="15" fill="rgb(226,211,11)" fg:x="2" fg:w="1455"/><text x="0.3855%" y="559.50">bun`JSC::runJSMicrotask(JSC::JSGlobalObject*, WTF::ObjectIdentifier</text></g><g><title>bun`JSC::profiledCall (1,455 samples, 98.58%)</title><rect x="0.1355%" y="533" width="98.5772%" height="15" fill="rgb(236,162,54)" fg:x="2" fg:w="1455"/><text x="0.3855%" y="543.50">bun`JSC::profiledCall</text></g><g><title>bun`JSC::JSValue JSC::Interpreter::executeCallImpl&lt;true&gt; (1,455 samples, 98.58%)</title><rect x="0.1355%" y="517" width="98.5772%" height="15" fill="rgb(220,229,9)" fg:x="2" fg:w="1455"/><text x="0.3855%" y="527.50">bun`JSC::JSValue JSC::Interpreter::executeCallImpl&lt;true&gt;</text></g><g><title>bun`vmEntryToJavaScript (1,455 samples, 98.58%)</title><rect x="0.1355%" y="501" width="98.5772%" height="15" fill="rgb(250,87,22)" fg:x="2" fg:w="1455"/><text x="0.3855%" y="511.50">bun`vmEntryToJavaScript</text></g><g><title>bun`operationGetById (2 samples, 0.14%)</title><rect x="98.5772%" y="485" width="0.1355%" height="15" fill="rgb(239,43,17)" fg:x="1455" fg:w="2"/><text x="98.8272%" y="495.50"></text></g><g><title>bun`src.bun_js.Run.boot (1,457 samples, 98.71%)</title><rect x="0.0678%" y="613" width="98.7127%" height="15" fill="rgb(231,177,25)" fg:x="1" fg:w="1457"/><text x="0.3178%" y="623.50">bun`src.bun_js.Run.boot</text></g><g><title>bun`src.bun.js.javascript.VirtualMachine.loadEntryPoint (1,456 samples, 98.64%)</title><rect x="0.1355%" y="597" width="98.6450%" height="15" fill="rgb(219,179,1)" fg:x="2" fg:w="1456"/><text x="0.3855%" y="607.50">bun`src.bun.js.javascript.VirtualMachine.loadEntryPoint</text></g><g><title>bun`JSC__JSModuleLoader__loadAndEvaluateModule (1,456 samples, 98.64%)</title><rect x="0.1355%" y="581" width="98.6450%" height="15" fill="rgb(238,219,53)" fg:x="2" fg:w="1456"/><text x="0.3855%" y="591.50">bun`JSC__JSModuleLoader__loadAndEvaluateModule</text></g><g><title>bun`JSC::loadAndEvaluateModule (1 samples, 0.07%)</title><rect x="98.7127%" y="565" width="0.0678%" height="15" fill="rgb(232,167,36)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="575.50"></text></g><g><title>bun`JSC::JSModuleLoader::loadAndEvaluateModule (1 samples, 0.07%)</title><rect x="98.7127%" y="549" width="0.0678%" height="15" fill="rgb(244,19,51)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="559.50"></text></g><g><title>bun`JSC::JSValue JSC::Interpreter::executeCallImpl&lt;true&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="533" width="0.0678%" height="15" fill="rgb(224,6,22)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="543.50"></text></g><g><title>bun`vmEntryToJavaScript (1 samples, 0.07%)</title><rect x="98.7127%" y="517" width="0.0678%" height="15" fill="rgb(224,145,5)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="527.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="501" width="0.0678%" height="15" fill="rgb(234,130,49)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="511.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="485" width="0.0678%" height="15" fill="rgb(254,6,2)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="495.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="469" width="0.0678%" height="15" fill="rgb(208,96,46)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="479.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="453" width="0.0678%" height="15" fill="rgb(239,3,39)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="463.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="437" width="0.0678%" height="15" fill="rgb(233,210,1)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="447.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="421" width="0.0678%" height="15" fill="rgb(244,137,37)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="431.50"></text></g><g><title>bun`llint_entry (1 samples, 0.07%)</title><rect x="98.7127%" y="405" width="0.0678%" height="15" fill="rgb(240,136,2)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="415.50"></text></g><g><title>0x10e034330 (1 samples, 0.07%)</title><rect x="98.7127%" y="389" width="0.0678%" height="15" fill="rgb(239,18,37)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="399.50"></text></g><g><title>bun`operationLinkCall (1 samples, 0.07%)</title><rect x="98.7127%" y="373" width="0.0678%" height="15" fill="rgb(218,185,22)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="383.50"></text></g><g><title>bun`JSC::ScriptExecutable::prepareForExecutionImpl (1 samples, 0.07%)</title><rect x="98.7127%" y="357" width="0.0678%" height="15" fill="rgb(225,218,4)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="367.50"></text></g><g><title>bun`JSC::UnlinkedFunctionExecutable::unlinkedCodeBlockFor(JSC::VM&amp;, JSC::SourceCode const&amp;, JSC::CodeSpecializationKind, WTF::OptionSet (1 samples, 0.07%)</title><rect x="98.7127%" y="341" width="0.0678%" height="15" fill="rgb(230,182,32)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="351.50"></text></g><g><title>bun`JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseInner(JSC::Identifier const&amp;, JSC::ParsingContext, std::__1::optional&lt;int&gt;, WTF::FixedVector&lt;JSC::JSTextPosition&gt; const*, WTF::HashMap&lt;WTF::RefPtr&lt;WTF::UniquedStringImpl, WTF::PackedPtrTraits&lt;WTF::UniquedStringImpl&gt;, WTF::DefaultRefDerefTraits&lt;WTF::UniquedStringImpl&gt; &gt;, JSC::PrivateNameEntry, JSC::IdentifierRepHash, WTF::HashTraits&lt;WTF::RefPtr&lt;WTF::UniquedStringImpl, WTF::RawPtrTraits&lt;WTF::UniquedStringImpl&gt;, WTF::DefaultRefDerefTraits (1 samples, 0.07%)</title><rect x="98.7127%" y="325" width="0.0678%" height="15" fill="rgb(242,56,43)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="335.50"></text></g><g><title>bun`JSC::ASTBuilder::SourceElements JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseSourceElements&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="309" width="0.0678%" height="15" fill="rgb(233,99,24)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="319.50"></text></g><g><title>bun`JSC::ASTBuilder::Statement JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseStatementListItem&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="293" width="0.0678%" height="15" fill="rgb(234,209,42)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="303.50"></text></g><g><title>bun`JSC::ASTBuilder::Statement JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseStatement&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="277" width="0.0678%" height="15" fill="rgb(227,7,12)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="287.50"></text></g><g><title>bun`JSC::ASTBuilder::Statement JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseBlockStatement&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="261" width="0.0678%" height="15" fill="rgb(245,203,43)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="271.50"></text></g><g><title>bun`JSC::ASTBuilder::SourceElements JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseSourceElements&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="245" width="0.0678%" height="15" fill="rgb(238,205,33)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="255.50"></text></g><g><title>bun`JSC::ASTBuilder::Statement JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseStatementListItem&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="229" width="0.0678%" height="15" fill="rgb(231,56,7)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="239.50"></text></g><g><title>bun`JSC::ASTBuilder::Statement JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseStatement&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="213" width="0.0678%" height="15" fill="rgb(244,186,29)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="223.50"></text></g><g><title>bun`JSC::ASTBuilder::Expression JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseExpression&lt;JSC::ASTBuilder&gt;(JSC::ASTBuilder&amp;, JSC::Parser&lt;JSC::Lexer (1 samples, 0.07%)</title><rect x="98.7127%" y="197" width="0.0678%" height="15" fill="rgb(234,111,31)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="207.50"></text></g><g><title>bun`JSC::ASTBuilder::Expression JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseAssignmentExpression&lt;JSC::ASTBuilder&gt;(JSC::ASTBuilder&amp;, JSC::Parser&lt;JSC::Lexer (1 samples, 0.07%)</title><rect x="98.7127%" y="181" width="0.0678%" height="15" fill="rgb(241,149,10)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="191.50"></text></g><g><title>bun`JSC::ASTBuilder::Expression JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseMemberExpression&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="165" width="0.0678%" height="15" fill="rgb(249,206,44)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="175.50"></text></g><g><title>bun`JSC::ASTBuilder::Property JSC::Parser&lt;JSC::Lexer&lt;unsigned char&gt; &gt;::parseProperty&lt;JSC::ASTBuilder&gt; (1 samples, 0.07%)</title><rect x="98.7127%" y="149" width="0.0678%" height="15" fill="rgb(251,153,30)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="159.50"></text></g><g><title>bun`JSC::Lexer&lt;unsigned char&gt;::lexWithoutClearingLineTerminator(JSC::JSToken*, WTF::OptionSet (1 samples, 0.07%)</title><rect x="98.7127%" y="133" width="0.0678%" height="15" fill="rgb(239,152,38)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="143.50"></text></g><g><title>bun`JSC::BuiltinNames::lookUpPrivateName (1 samples, 0.07%)</title><rect x="98.7127%" y="117" width="0.0678%" height="15" fill="rgb(249,139,47)" fg:x="1457" fg:w="1"/><text x="98.9627%" y="127.50"></text></g><g><title>bun`JSC::DFG::performLivenessAnalysis (1 samples, 0.07%)</title><rect x="98.7805%" y="501" width="0.0678%" height="15" fill="rgb(244,64,35)" fg:x="1458" fg:w="1"/><text x="99.0305%" y="511.50"></text></g><g><title>bun`JSC::JITWorklistThread::work (2 samples, 0.14%)</title><rect x="98.7805%" y="549" width="0.1355%" height="15" fill="rgb(216,46,15)" fg:x="1458" fg:w="2"/><text x="99.0305%" y="559.50"></text></g><g><title>bun`JSC::JITPlan::compileInThread (2 samples, 0.14%)</title><rect x="98.7805%" y="533" width="0.1355%" height="15" fill="rgb(250,74,19)" fg:x="1458" fg:w="2"/><text x="99.0305%" y="543.50"></text></g><g><title>bun`JSC::DFG::Plan::compileInThreadImpl (2 samples, 0.14%)</title><rect x="98.7805%" y="517" width="0.1355%" height="15" fill="rgb(249,42,33)" fg:x="1458" fg:w="2"/><text x="99.0305%" y="527.50"></text></g><g><title>bun`JSC::DFG::performSSAConversion (1 samples, 0.07%)</title><rect x="98.8482%" y="501" width="0.0678%" height="15" fill="rgb(242,149,17)" fg:x="1459" fg:w="1"/><text x="99.0982%" y="511.50"></text></g><g><title>bun`JSC::DFG::SSAConversionPhase::run (1 samples, 0.07%)</title><rect x="98.8482%" y="485" width="0.0678%" height="15" fill="rgb(244,29,21)" fg:x="1459" fg:w="1"/><text x="99.0982%" y="495.50"></text></g><g><title>bun`JSC::WeakBlock::visit (8 samples, 0.54%)</title><rect x="98.9837%" y="469" width="0.5420%" height="15" fill="rgb(220,130,37)" fg:x="1461" fg:w="8"/><text x="99.2337%" y="479.50"></text></g><g><title>bun`JSC::MarkingConstraintSolver::runExecutionThread(JSC::SlotVisitor&amp;, JSC::MarkingConstraintSolver::SchedulerPreference, WTF::ScopedLambda&lt;std::__1::optional&lt;unsigned int&gt;  (9 samples, 0.61%)</title><rect x="98.9837%" y="501" width="0.6098%" height="15" fill="rgb(211,67,2)" fg:x="1461" fg:w="9"/><text x="99.2337%" y="511.50"></text></g><g><title>bun`WTF::Detail::CallableWrapper&lt;JSC::Heap::addCoreConstraints()::$_38, void, JSC::SlotVisitor&amp;&gt;::call (9 samples, 0.61%)</title><rect x="98.9837%" y="485" width="0.6098%" height="15" fill="rgb(235,68,52)" fg:x="1461" fg:w="9"/><text x="99.2337%" y="495.50"></text></g><g><title>bun`WebCore::JSDOMURLOwner::isReachableFromOpaqueRoots(JSC::Handle (1 samples, 0.07%)</title><rect x="99.5257%" y="469" width="0.0678%" height="15" fill="rgb(246,142,3)" fg:x="1469" fg:w="1"/><text x="99.7757%" y="479.50"></text></g><g><title>bun`WTF::ParkingLot::unparkCount (1 samples, 0.07%)</title><rect x="99.5935%" y="501" width="0.0678%" height="15" fill="rgb(241,25,7)" fg:x="1470" fg:w="1"/><text x="99.8435%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.07%)</title><rect x="99.5935%" y="485" width="0.0678%" height="15" fill="rgb(242,119,39)" fg:x="1470" fg:w="1"/><text x="99.8435%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.07%)</title><rect x="99.6612%" y="469" width="0.0678%" height="15" fill="rgb(241,98,45)" fg:x="1471" fg:w="1"/><text x="99.9112%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (1 samples, 0.07%)</title><rect x="99.6612%" y="453" width="0.0678%" height="15" fill="rgb(254,28,30)" fg:x="1471" fg:w="1"/><text x="99.9112%" y="463.50"></text></g><g><title>bun`WTF::wtfThreadEntryPoint (15 samples, 1.02%)</title><rect x="98.7805%" y="581" width="1.0163%" height="15" fill="rgb(241,142,54)" fg:x="1458" fg:w="15"/><text x="99.0305%" y="591.50"></text></g><g><title>bun`WTF::Detail::CallableWrapper&lt;WTF::AutomaticThread::start(WTF::AbstractLocker const&amp;)::$_0, void&gt;::call (15 samples, 1.02%)</title><rect x="98.7805%" y="565" width="1.0163%" height="15" fill="rgb(222,85,15)" fg:x="1458" fg:w="15"/><text x="99.0305%" y="575.50"></text></g><g><title>bun`WTF::ParallelHelperPool::Thread::work (13 samples, 0.88%)</title><rect x="98.9160%" y="549" width="0.8808%" height="15" fill="rgb(210,85,47)" fg:x="1460" fg:w="13"/><text x="99.1660%" y="559.50"></text></g><g><title>bun`WTF::SharedTaskFunctor&lt;void (), JSC::Heap::runBeginPhase(JSC::GCConductor)::$_18&gt;::run (13 samples, 0.88%)</title><rect x="98.9160%" y="533" width="0.8808%" height="15" fill="rgb(224,206,25)" fg:x="1460" fg:w="13"/><text x="99.1660%" y="543.50"></text></g><g><title>bun`JSC::SlotVisitor::drainFromShared (13 samples, 0.88%)</title><rect x="98.9160%" y="517" width="0.8808%" height="15" fill="rgb(243,201,19)" fg:x="1460" fg:w="13"/><text x="99.1660%" y="527.50"></text></g><g><title>bun`bool WTF::Condition::waitUntilUnchecked&lt;WTF::Lock&gt; (2 samples, 0.14%)</title><rect x="99.6612%" y="501" width="0.1355%" height="15" fill="rgb(236,59,4)" fg:x="1471" fg:w="2"/><text x="99.9112%" y="511.50"></text></g><g><title>bun`WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda&lt;bool ()&gt; const&amp;, WTF::ScopedLambda&lt;void  (2 samples, 0.14%)</title><rect x="99.6612%" y="485" width="0.1355%" height="15" fill="rgb(254,179,45)" fg:x="1471" fg:w="2"/><text x="99.9112%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.07%)</title><rect x="99.7290%" y="469" width="0.0678%" height="15" fill="rgb(226,14,10)" fg:x="1472" fg:w="1"/><text x="99.9790%" y="479.50"></text></g><g><title>bun`pas_thread_local_cache_for_all (1 samples, 0.07%)</title><rect x="99.7967%" y="565" width="0.0678%" height="15" fill="rgb(244,27,41)" fg:x="1473" fg:w="1"/><text x="100.0467%" y="575.50"></text></g><g><title>bun`stop_allocator (1 samples, 0.07%)</title><rect x="99.7967%" y="549" width="0.0678%" height="15" fill="rgb(235,35,32)" fg:x="1473" fg:w="1"/><text x="100.0467%" y="559.50"></text></g><g><title>all (1,476 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="1476"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (18 samples, 1.22%)</title><rect x="98.7805%" y="613" width="1.2195%" height="15" fill="rgb(207,120,37)" fg:x="1458" fg:w="18"/><text x="99.0305%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (18 samples, 1.22%)</title><rect x="98.7805%" y="597" width="1.2195%" height="15" fill="rgb(227,98,0)" fg:x="1458" fg:w="18"/><text x="99.0305%" y="607.50"></text></g><g><title>bun`scavenger_thread_main (3 samples, 0.20%)</title><rect x="99.7967%" y="581" width="0.2033%" height="15" fill="rgb(207,7,3)" fg:x="1473" fg:w="3"/><text x="100.0467%" y="591.50"></text></g><g><title>bun`stop_allocator (2 samples, 0.14%)</title><rect x="99.8645%" y="565" width="0.1355%" height="15" fill="rgb(206,98,19)" fg:x="1474" fg:w="2"/><text x="100.1145%" y="575.50"></text></g></svg></svg>