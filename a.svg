<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="4882"><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0205%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.0819%" y="645" width="0.0205%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.3319%" y="655.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="0.1024%" y="645" width="0.0205%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="1"/><text x="0.3524%" y="655.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (1 samples, 0.02%)</title><rect x="0.1229%" y="645" width="0.0205%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="1"/><text x="0.3729%" y="655.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (2 samples, 0.04%)</title><rect x="0.1434%" y="645" width="0.0410%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="2"/><text x="0.3934%" y="655.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="0.1844%" y="645" width="0.0205%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="1"/><text x="0.4344%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="0.1844%" y="629" width="0.0205%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="1"/><text x="0.4344%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.1844%" y="613" width="0.0205%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="1"/><text x="0.4344%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="0.1844%" y="597" width="0.0205%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="1"/><text x="0.4344%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="0.1844%" y="581" width="0.0205%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="1"/><text x="0.4344%" y="591.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="0.1844%" y="565" width="0.0205%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="1"/><text x="0.4344%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.1844%" y="549" width="0.0205%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="0.4344%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.1844%" y="533" width="0.0205%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="1"/><text x="0.4344%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.1844%" y="517" width="0.0205%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="1"/><text x="0.4344%" y="527.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.1844%" y="501" width="0.0205%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="0.4344%" y="511.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="0.1844%" y="485" width="0.0205%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="0.4344%" y="495.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="0.1844%" y="469" width="0.0205%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="0.4344%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="0.1844%" y="453" width="0.0205%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="0.4344%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.1844%" y="437" width="0.0205%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="1"/><text x="0.4344%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.1844%" y="421" width="0.0205%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="0.4344%" y="431.50"></text></g><g><title>http_bench_json_ops`bool v8::internal::(anonymous namespace)::IterativelyExecuteAndFinalizeUnoptimizedCompilationJobs&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::AccountingAllocator*, v8::internal::IsCompiledScope*, std::__1::vector&lt;v8::internal::FinalizeUnoptimizedCompilationData, std::__1::allocator&lt;v8::internal::FinalizeUnoptimizedCompilationData&gt; &gt;*, std::__1::vector&lt;v8::internal::DeferredFinalizationJobData, std::__1::allocator (1 samples, 0.02%)</title><rect x="0.1844%" y="405" width="0.0205%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="1"/><text x="0.4344%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::ExecuteSingleUnoptimizedCompilationJob(v8::internal::ParseInfo*, v8::internal::FunctionLiteral*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::AccountingAllocator*, std::__1::vector&lt;v8::internal::FunctionLiteral*, std::__1::allocator (1 samples, 0.02%)</title><rect x="0.1844%" y="389" width="0.0205%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="0.4344%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::InterpreterCompilationJob::ExecuteJobImpl (1 samples, 0.02%)</title><rect x="0.1844%" y="373" width="0.0205%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.4344%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::GenerateBytecode (1 samples, 0.02%)</title><rect x="0.1844%" y="357" width="0.0205%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="0.4344%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::GenerateBytecodeBody (1 samples, 0.02%)</title><rect x="0.1844%" y="341" width="0.0205%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="0.4344%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="0.1844%" y="325" width="0.0205%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="1"/><text x="0.4344%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="0.1844%" y="309" width="0.0205%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="1"/><text x="0.4344%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitExpressionStatement (1 samples, 0.02%)</title><rect x="0.1844%" y="293" width="0.0205%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="0.4344%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitAssignment (1 samples, 0.02%)</title><rect x="0.1844%" y="277" width="0.0205%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="0.4344%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitCallNew (1 samples, 0.02%)</title><rect x="0.1844%" y="261" width="0.0205%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="0.4344%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::BuildVariableLoad (1 samples, 0.02%)</title><rect x="0.1844%" y="245" width="0.0205%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="0.4344%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::ConstantArrayBuilder::Insert (1 samples, 0.02%)</title><rect x="0.1844%" y="229" width="0.0205%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="0.4344%" y="239.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (1 samples, 0.02%)</title><rect x="0.2048%" y="645" width="0.0205%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="0.4548%" y="655.50"></text></g><g><title>http_bench_json_ops`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="2.9701%" y="565" width="0.0615%" height="15" fill="rgb(254,191,54)" fg:x="145" fg:w="3"/><text x="3.2201%" y="575.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cancel::internal::Node&gt; (9 samples, 0.18%)</title><rect x="3.0315%" y="565" width="0.1844%" height="15" fill="rgb(241,83,37)" fg:x="148" fg:w="9"/><text x="3.2815%" y="575.50"></text></g><g><title>http_bench_json_ops`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="3.0520%" y="549" width="0.1639%" height="15" fill="rgb(233,36,39)" fg:x="149" fg:w="8"/><text x="3.3020%" y="559.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (4 samples, 0.08%)</title><rect x="3.2159%" y="565" width="0.0819%" height="15" fill="rgb(226,3,54)" fg:x="157" fg:w="4"/><text x="3.4659%" y="575.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (3 samples, 0.06%)</title><rect x="3.2364%" y="549" width="0.0615%" height="15" fill="rgb(245,192,40)" fg:x="158" fg:w="3"/><text x="3.4864%" y="559.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (5 samples, 0.10%)</title><rect x="3.2978%" y="565" width="0.1024%" height="15" fill="rgb(238,167,29)" fg:x="161" fg:w="5"/><text x="3.5478%" y="575.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::_::_&lt;impl deno_core::async_cancel::internal::Registration&gt;::project_replace (2 samples, 0.04%)</title><rect x="3.4002%" y="565" width="0.0410%" height="15" fill="rgb(232,182,51)" fg:x="166" fg:w="2"/><text x="3.6502%" y="575.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (25 samples, 0.51%)</title><rect x="3.4412%" y="565" width="0.5121%" height="15" fill="rgb(231,60,39)" fg:x="168" fg:w="25"/><text x="3.6912%" y="575.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::clone_arc_raw (3 samples, 0.06%)</title><rect x="3.9533%" y="565" width="0.0615%" height="15" fill="rgb(208,69,12)" fg:x="193" fg:w="3"/><text x="4.2033%" y="575.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (14 samples, 0.29%)</title><rect x="4.0147%" y="565" width="0.2868%" height="15" fill="rgb(235,93,37)" fg:x="196" fg:w="14"/><text x="4.2647%" y="575.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 2.21%)</title><rect x="2.6424%" y="581" width="2.2122%" height="15" fill="rgb(213,116,39)" fg:x="129" fg:w="108"/><text x="2.8924%" y="591.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.55%)</title><rect x="4.3015%" y="565" width="0.5531%" height="15" fill="rgb(222,207,29)" fg:x="210" fg:w="27"/><text x="4.5515%" y="575.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (8 samples, 0.16%)</title><rect x="4.8546%" y="581" width="0.1639%" height="15" fill="rgb(206,96,30)" fg:x="237" fg:w="8"/><text x="5.1046%" y="591.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;http_bench_json_ops::TcpStream::read::{{closure}}&gt;&gt; (2 samples, 0.04%)</title><rect x="5.0184%" y="581" width="0.0410%" height="15" fill="rgb(218,138,4)" fg:x="245" fg:w="2"/><text x="5.2684%" y="591.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowFutureImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="5.0594%" y="581" width="0.0205%" height="15" fill="rgb(250,191,14)" fg:x="247" fg:w="1"/><text x="5.3094%" y="591.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.04%)</title><rect x="5.0799%" y="581" width="0.0410%" height="15" fill="rgb(239,60,40)" fg:x="248" fg:w="2"/><text x="5.3299%" y="591.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,764 samples, 36.13%)</title><rect x="2.3966%" y="597" width="36.1327%" height="15" fill="rgb(206,27,48)" fg:x="117" fg:w="1764"/><text x="2.6466%" y="607.50">http_bench_json_ops`&lt;core::future::from_generator::GenFutur..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,631 samples, 33.41%)</title><rect x="5.1209%" y="581" width="33.4084%" height="15" fill="rgb(225,35,8)" fg:x="250" fg:w="1631"/><text x="5.3709%" y="591.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="38.6317%" y="565" width="0.0205%" height="15" fill="rgb(250,213,24)" fg:x="1886" fg:w="1"/><text x="38.8817%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.14%)</title><rect x="38.6727%" y="549" width="0.1434%" height="15" fill="rgb(247,123,22)" fg:x="1888" fg:w="7"/><text x="38.9227%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.12%)</title><rect x="38.6932%" y="533" width="0.1229%" height="15" fill="rgb(231,138,38)" fg:x="1889" fg:w="6"/><text x="38.9432%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.27%)</title><rect x="38.5703%" y="581" width="0.2663%" height="15" fill="rgb(231,145,46)" fg:x="1883" fg:w="13"/><text x="38.8203%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.18%)</title><rect x="38.6522%" y="565" width="0.1844%" height="15" fill="rgb(251,118,11)" fg:x="1887" fg:w="9"/><text x="38.9022%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="38.8161%" y="549" width="0.0205%" height="15" fill="rgb(217,147,25)" fg:x="1895" fg:w="1"/><text x="39.0661%" y="559.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (17 samples, 0.35%)</title><rect x="38.5293%" y="597" width="0.3482%" height="15" fill="rgb(247,81,37)" fg:x="1881" fg:w="17"/><text x="38.7793%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.04%)</title><rect x="38.8365%" y="581" width="0.0410%" height="15" fill="rgb(209,12,38)" fg:x="1896" fg:w="2"/><text x="39.0865%" y="591.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.04%)</title><rect x="38.8775%" y="597" width="0.0410%" height="15" fill="rgb(227,1,9)" fg:x="1898" fg:w="2"/><text x="39.1275%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="38.9185%" y="597" width="0.0205%" height="15" fill="rgb(248,47,43)" fg:x="1900" fg:w="1"/><text x="39.1685%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.06%)</title><rect x="39.0823%" y="581" width="0.0615%" height="15" fill="rgb(221,10,30)" fg:x="1908" fg:w="3"/><text x="39.3323%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.23%)</title><rect x="38.9390%" y="597" width="0.2253%" height="15" fill="rgb(210,229,1)" fg:x="1901" fg:w="11"/><text x="39.1890%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="39.1438%" y="581" width="0.0205%" height="15" fill="rgb(222,148,37)" fg:x="1911" fg:w="1"/><text x="39.3938%" y="591.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,837 samples, 37.63%)</title><rect x="1.5977%" y="613" width="37.6280%" height="15" fill="rgb(234,67,33)" fg:x="78" fg:w="1837"/><text x="1.8477%" y="623.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.06%)</title><rect x="39.1643%" y="597" width="0.0615%" height="15" fill="rgb(247,98,35)" fg:x="1912" fg:w="3"/><text x="39.4143%" y="607.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (2 samples, 0.04%)</title><rect x="39.2257%" y="613" width="0.0410%" height="15" fill="rgb(247,138,52)" fg:x="1915" fg:w="2"/><text x="39.4757%" y="623.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="39.2667%" y="613" width="0.0205%" height="15" fill="rgb(213,79,30)" fg:x="1917" fg:w="1"/><text x="39.5167%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="39.2872%" y="613" width="0.0205%" height="15" fill="rgb(246,177,23)" fg:x="1918" fg:w="1"/><text x="39.5372%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="39.3077%" y="613" width="0.0205%" height="15" fill="rgb(230,62,27)" fg:x="1919" fg:w="1"/><text x="39.5577%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="39.3281%" y="613" width="0.0205%" height="15" fill="rgb(216,154,8)" fg:x="1920" fg:w="1"/><text x="39.5781%" y="623.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,855 samples, 38.00%)</title><rect x="1.3724%" y="629" width="37.9967%" height="15" fill="rgb(244,35,45)" fg:x="67" fg:w="1855"/><text x="1.6224%" y="639.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="39.3486%" y="613" width="0.0205%" height="15" fill="rgb(251,115,12)" fg:x="1921" fg:w="1"/><text x="39.5986%" y="623.50"></text></g><g><title>http_bench_json_ops`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.06%)</title><rect x="39.3691%" y="629" width="0.0615%" height="15" fill="rgb(240,54,50)" fg:x="1922" fg:w="3"/><text x="39.6191%" y="639.50"></text></g><g><title>http_bench_json_ops`core::hash::BuildHasher::hash_one (5 samples, 0.10%)</title><rect x="39.4306%" y="629" width="0.1024%" height="15" fill="rgb(233,84,52)" fg:x="1925" fg:w="5"/><text x="39.6806%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::ops::OpState&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="39.5330%" y="629" width="0.0205%" height="15" fill="rgb(207,117,47)" fg:x="1930" fg:w="1"/><text x="39.7830%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::func_op_read::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="39.5535%" y="629" width="0.0205%" height="15" fill="rgb(249,43,39)" fg:x="1931" fg:w="1"/><text x="39.8035%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::option::Option&lt;deno_core::runtime::ModEvaluate&gt;&gt; (1 samples, 0.02%)</title><rect x="39.5739%" y="629" width="0.0205%" height="15" fill="rgb(209,38,44)" fg:x="1932" fg:w="1"/><text x="39.8239%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (2 samples, 0.04%)</title><rect x="39.5944%" y="629" width="0.0410%" height="15" fill="rgb(236,212,23)" fg:x="1933" fg:w="2"/><text x="39.8444%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (2 samples, 0.04%)</title><rect x="39.7788%" y="613" width="0.0410%" height="15" fill="rgb(242,79,21)" fg:x="1942" fg:w="2"/><text x="40.0288%" y="623.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (11 samples, 0.23%)</title><rect x="39.6354%" y="629" width="0.2253%" height="15" fill="rgb(211,96,35)" fg:x="1935" fg:w="11"/><text x="39.8854%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (2 samples, 0.04%)</title><rect x="39.8197%" y="613" width="0.0410%" height="15" fill="rgb(253,215,40)" fg:x="1944" fg:w="2"/><text x="40.0697%" y="623.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::poll_sessions (4 samples, 0.08%)</title><rect x="39.8607%" y="629" width="0.0819%" height="15" fill="rgb(211,81,21)" fg:x="1946" fg:w="4"/><text x="40.1107%" y="639.50"></text></g><g><title>http_bench_json_ops`deno_core::ops::OpResult::to_v8 (6 samples, 0.12%)</title><rect x="39.9426%" y="629" width="0.1229%" height="15" fill="rgb(208,190,38)" fg:x="1950" fg:w="6"/><text x="40.1926%" y="639.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (3 samples, 0.06%)</title><rect x="40.0655%" y="629" width="0.0615%" height="15" fill="rgb(235,213,38)" fg:x="1956" fg:w="3"/><text x="40.3155%" y="639.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::check_promise_exceptions (1 samples, 0.02%)</title><rect x="40.1270%" y="629" width="0.0205%" height="15" fill="rgb(237,122,38)" fg:x="1959" fg:w="1"/><text x="40.3770%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::GetWasmEngine (2 samples, 0.04%)</title><rect x="40.1475%" y="613" width="0.0410%" height="15" fill="rgb(244,218,35)" fg:x="1960" fg:w="2"/><text x="40.3975%" y="623.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (3 samples, 0.06%)</title><rect x="40.1475%" y="629" width="0.0615%" height="15" fill="rgb(240,68,47)" fg:x="1960" fg:w="3"/><text x="40.3975%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="40.1884%" y="613" width="0.0205%" height="15" fill="rgb(210,16,53)" fg:x="1962" fg:w="1"/><text x="40.4384%" y="623.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (3 samples, 0.06%)</title><rect x="40.2089%" y="629" width="0.0615%" height="15" fill="rgb(235,124,12)" fg:x="1963" fg:w="3"/><text x="40.4589%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (3 samples, 0.06%)</title><rect x="40.4547%" y="597" width="0.0615%" height="15" fill="rgb(224,169,11)" fg:x="1975" fg:w="3"/><text x="40.7047%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (5 samples, 0.10%)</title><rect x="40.5162%" y="597" width="0.1024%" height="15" fill="rgb(250,166,2)" fg:x="1978" fg:w="5"/><text x="40.7662%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (4 samples, 0.08%)</title><rect x="40.5367%" y="581" width="0.0819%" height="15" fill="rgb(242,216,29)" fg:x="1979" fg:w="4"/><text x="40.7867%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (6 samples, 0.12%)</title><rect x="40.6186%" y="597" width="0.1229%" height="15" fill="rgb(230,116,27)" fg:x="1983" fg:w="6"/><text x="40.8686%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (6 samples, 0.12%)</title><rect x="40.6186%" y="581" width="0.1229%" height="15" fill="rgb(228,99,48)" fg:x="1983" fg:w="6"/><text x="40.8686%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (2 samples, 0.04%)</title><rect x="40.7415%" y="597" width="0.0410%" height="15" fill="rgb(253,11,6)" fg:x="1989" fg:w="2"/><text x="40.9915%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (3 samples, 0.06%)</title><rect x="40.7825%" y="597" width="0.0615%" height="15" fill="rgb(247,143,39)" fg:x="1991" fg:w="3"/><text x="41.0325%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (4 samples, 0.08%)</title><rect x="41.0078%" y="565" width="0.0819%" height="15" fill="rgb(236,97,10)" fg:x="2002" fg:w="4"/><text x="41.2578%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (7 samples, 0.14%)</title><rect x="41.0897%" y="565" width="0.1434%" height="15" fill="rgb(233,208,19)" fg:x="2006" fg:w="7"/><text x="41.3397%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (2 samples, 0.04%)</title><rect x="41.1921%" y="549" width="0.0410%" height="15" fill="rgb(216,164,2)" fg:x="2011" fg:w="2"/><text x="41.4421%" y="559.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (16 samples, 0.33%)</title><rect x="40.9259%" y="581" width="0.3277%" height="15" fill="rgb(220,129,5)" fg:x="1998" fg:w="16"/><text x="41.1759%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (1 samples, 0.02%)</title><rect x="41.2331%" y="565" width="0.0205%" height="15" fill="rgb(242,17,10)" fg:x="2013" fg:w="1"/><text x="41.4831%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (2 samples, 0.04%)</title><rect x="41.2536%" y="581" width="0.0410%" height="15" fill="rgb(242,107,0)" fg:x="2014" fg:w="2"/><text x="41.5036%" y="591.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (49 samples, 1.00%)</title><rect x="40.3318%" y="613" width="1.0037%" height="15" fill="rgb(251,28,31)" fg:x="1969" fg:w="49"/><text x="40.5818%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::scope::data::ScopeData::try_exit_scope (24 samples, 0.49%)</title><rect x="40.8439%" y="597" width="0.4916%" height="15" fill="rgb(233,223,10)" fg:x="1994" fg:w="24"/><text x="41.0939%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (2 samples, 0.04%)</title><rect x="41.2946%" y="581" width="0.0410%" height="15" fill="rgb(215,21,27)" fg:x="2016" fg:w="2"/><text x="41.5446%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (1 samples, 0.02%)</title><rect x="41.3560%" y="597" width="0.0205%" height="15" fill="rgb(232,23,21)" fg:x="2019" fg:w="1"/><text x="41.6060%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::MoveGlobal (4 samples, 0.08%)</title><rect x="41.3765%" y="597" width="0.0819%" height="15" fill="rgb(244,5,23)" fg:x="2020" fg:w="4"/><text x="41.6265%" y="607.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (14 samples, 0.29%)</title><rect x="41.3355%" y="613" width="0.2868%" height="15" fill="rgb(226,81,46)" fg:x="2018" fg:w="14"/><text x="41.5855%" y="623.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (8 samples, 0.16%)</title><rect x="41.4584%" y="597" width="0.1639%" height="15" fill="rgb(247,70,30)" fg:x="2024" fg:w="8"/><text x="41.7084%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (3 samples, 0.06%)</title><rect x="41.5608%" y="581" width="0.0615%" height="15" fill="rgb(212,68,19)" fg:x="2029" fg:w="3"/><text x="41.8108%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (1 samples, 0.02%)</title><rect x="41.6223%" y="613" width="0.0205%" height="15" fill="rgb(240,187,13)" fg:x="2032" fg:w="1"/><text x="41.8723%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (2 samples, 0.04%)</title><rect x="41.6428%" y="613" width="0.0410%" height="15" fill="rgb(223,113,26)" fg:x="2033" fg:w="2"/><text x="41.8928%" y="623.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (70 samples, 1.43%)</title><rect x="40.2704%" y="629" width="1.4338%" height="15" fill="rgb(206,192,2)" fg:x="1966" fg:w="70"/><text x="40.5204%" y="639.50"></text></g><g><title>http_bench_json_ops`v8__Local__New (1 samples, 0.02%)</title><rect x="41.6837%" y="613" width="0.0205%" height="15" fill="rgb(241,108,4)" fg:x="2035" fg:w="1"/><text x="41.9337%" y="623.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::clone_arc_raw (2 samples, 0.04%)</title><rect x="41.7042%" y="629" width="0.0410%" height="15" fill="rgb(247,173,49)" fg:x="2036" fg:w="2"/><text x="41.9542%" y="639.50"></text></g><g><title>http_bench_json_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="41.7862%" y="613" width="0.0205%" height="15" fill="rgb(224,114,35)" fg:x="2040" fg:w="1"/><text x="42.0362%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.12%)</title><rect x="41.8066%" y="613" width="0.1229%" height="15" fill="rgb(245,159,27)" fg:x="2041" fg:w="6"/><text x="42.0566%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.10%)</title><rect x="41.8271%" y="597" width="0.1024%" height="15" fill="rgb(245,172,44)" fg:x="2042" fg:w="5"/><text x="42.0771%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.06%)</title><rect x="41.9295%" y="613" width="0.0615%" height="15" fill="rgb(236,23,11)" fg:x="2047" fg:w="3"/><text x="42.1795%" y="623.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (14 samples, 0.29%)</title><rect x="41.7452%" y="629" width="0.2868%" height="15" fill="rgb(205,117,38)" fg:x="2038" fg:w="14"/><text x="41.9952%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.04%)</title><rect x="41.9910%" y="613" width="0.0410%" height="15" fill="rgb(237,72,25)" fg:x="2050" fg:w="2"/><text x="42.2410%" y="623.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::drop_arc_raw (2 samples, 0.04%)</title><rect x="42.0320%" y="629" width="0.0410%" height="15" fill="rgb(244,70,9)" fg:x="2052" fg:w="2"/><text x="42.2820%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (2 samples, 0.04%)</title><rect x="42.0729%" y="629" width="0.0410%" height="15" fill="rgb(217,125,39)" fg:x="2054" fg:w="2"/><text x="42.3229%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (2 samples, 0.04%)</title><rect x="42.1139%" y="629" width="0.0410%" height="15" fill="rgb(235,36,10)" fg:x="2056" fg:w="2"/><text x="42.3639%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (2 samples, 0.04%)</title><rect x="42.3802%" y="613" width="0.0410%" height="15" fill="rgb(251,123,47)" fg:x="2069" fg:w="2"/><text x="42.6302%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (5 samples, 0.10%)</title><rect x="42.4211%" y="613" width="0.1024%" height="15" fill="rgb(221,13,13)" fg:x="2071" fg:w="5"/><text x="42.6711%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.04%)</title><rect x="42.5236%" y="613" width="0.0410%" height="15" fill="rgb(238,131,9)" fg:x="2076" fg:w="2"/><text x="42.7736%" y="623.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="42.6260%" y="597" width="0.0205%" height="15" fill="rgb(211,50,8)" fg:x="2081" fg:w="1"/><text x="42.8760%" y="607.50"></text></g><g><title>0x11000e740 (1 samples, 0.02%)</title><rect x="42.9537%" y="565" width="0.0205%" height="15" fill="rgb(245,182,24)" fg:x="2097" fg:w="1"/><text x="43.2037%" y="575.50"></text></g><g><title>0x11000e800 (1 samples, 0.02%)</title><rect x="42.9742%" y="565" width="0.0205%" height="15" fill="rgb(242,14,37)" fg:x="2098" fg:w="1"/><text x="43.2242%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsAny (6 samples, 0.12%)</title><rect x="42.9947%" y="565" width="0.1229%" height="15" fill="rgb(246,228,12)" fg:x="2099" fg:w="6"/><text x="43.2447%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsAny (2 samples, 0.04%)</title><rect x="43.1176%" y="565" width="0.0410%" height="15" fill="rgb(213,55,15)" fg:x="2105" fg:w="2"/><text x="43.3676%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="43.1585%" y="565" width="0.0205%" height="15" fill="rgb(209,9,3)" fg:x="2107" fg:w="1"/><text x="43.4085%" y="575.50"></text></g><g><title>0x11000bdf4 (1 samples, 0.02%)</title><rect x="43.3019%" y="549" width="0.0205%" height="15" fill="rgb(230,59,30)" fg:x="2114" fg:w="1"/><text x="43.5519%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (1 samples, 0.02%)</title><rect x="43.3019%" y="533" width="0.0205%" height="15" fill="rgb(209,121,21)" fg:x="2114" fg:w="1"/><text x="43.5519%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (1 samples, 0.02%)</title><rect x="43.3019%" y="517" width="0.0205%" height="15" fill="rgb(220,109,13)" fg:x="2114" fg:w="1"/><text x="43.5519%" y="527.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (1 samples, 0.02%)</title><rect x="43.3019%" y="501" width="0.0205%" height="15" fill="rgb(232,18,1)" fg:x="2114" fg:w="1"/><text x="43.5519%" y="511.50"></text></g><g><title>0x11000e78c (1 samples, 0.02%)</title><rect x="43.3224%" y="549" width="0.0205%" height="15" fill="rgb(215,41,42)" fg:x="2115" fg:w="1"/><text x="43.5724%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (17 samples, 0.35%)</title><rect x="43.3634%" y="533" width="0.3482%" height="15" fill="rgb(224,123,36)" fg:x="2117" fg:w="17"/><text x="43.6134%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (13 samples, 0.27%)</title><rect x="43.4453%" y="517" width="0.2663%" height="15" fill="rgb(240,125,3)" fg:x="2121" fg:w="13"/><text x="43.6953%" y="527.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (8 samples, 0.16%)</title><rect x="43.5477%" y="501" width="0.1639%" height="15" fill="rgb(205,98,50)" fg:x="2126" fg:w="8"/><text x="43.7977%" y="511.50"></text></g><g><title>0x11000e7e8 (19 samples, 0.39%)</title><rect x="43.3429%" y="549" width="0.3892%" height="15" fill="rgb(205,185,37)" fg:x="2116" fg:w="19"/><text x="43.5929%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (1 samples, 0.02%)</title><rect x="43.7116%" y="533" width="0.0205%" height="15" fill="rgb(238,207,15)" fg:x="2134" fg:w="1"/><text x="43.9616%" y="543.50"></text></g><g><title>0x11000e7f0 (2 samples, 0.04%)</title><rect x="43.7321%" y="549" width="0.0410%" height="15" fill="rgb(213,199,42)" fg:x="2135" fg:w="2"/><text x="43.9821%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (2 samples, 0.04%)</title><rect x="43.7730%" y="549" width="0.0410%" height="15" fill="rgb(235,201,11)" fg:x="2137" fg:w="2"/><text x="44.0230%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNullOrUndefined (1 samples, 0.02%)</title><rect x="43.8140%" y="549" width="0.0205%" height="15" fill="rgb(207,46,11)" fg:x="2139" fg:w="1"/><text x="44.0640%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="43.8345%" y="549" width="0.0205%" height="15" fill="rgb(241,35,35)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="43.8345%" y="533" width="0.0205%" height="15" fill="rgb(243,32,47)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileOptimized (1 samples, 0.02%)</title><rect x="43.8345%" y="517" width="0.0205%" height="15" fill="rgb(247,202,23)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="43.8345%" y="501" width="0.0205%" height="15" fill="rgb(219,102,11)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::GetOrCompileOptimized(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::ConcurrencyMode, v8::internal::CodeKind, v8::internal::BytecodeOffset, v8::internal:: (1 samples, 0.02%)</title><rect x="43.8345%" y="485" width="0.0205%" height="15" fill="rgb(243,110,44)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="43.8345%" y="469" width="0.0205%" height="15" fill="rgb(222,74,54)" fg:x="2140" fg:w="1"/><text x="44.0845%" y="479.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (48 samples, 0.98%)</title><rect x="42.9332%" y="581" width="0.9832%" height="15" fill="rgb(216,99,12)" fg:x="2096" fg:w="48"/><text x="43.1832%" y="591.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (36 samples, 0.74%)</title><rect x="43.1790%" y="565" width="0.7374%" height="15" fill="rgb(226,22,26)" fg:x="2108" fg:w="36"/><text x="43.4290%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (3 samples, 0.06%)</title><rect x="43.8550%" y="549" width="0.0615%" height="15" fill="rgb(217,163,10)" fg:x="2141" fg:w="3"/><text x="44.1050%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (65 samples, 1.33%)</title><rect x="42.6465%" y="597" width="1.3314%" height="15" fill="rgb(213,25,53)" fg:x="2082" fg:w="65"/><text x="42.8965%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (3 samples, 0.06%)</title><rect x="43.9164%" y="581" width="0.0615%" height="15" fill="rgb(252,105,26)" fg:x="2144" fg:w="3"/><text x="44.1664%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::DumpOnJavascriptExecution::IsAllowed (1 samples, 0.02%)</title><rect x="43.9779%" y="597" width="0.0205%" height="15" fill="rgb(220,39,43)" fg:x="2147" fg:w="1"/><text x="44.2279%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="43.9984%" y="597" width="0.0205%" height="15" fill="rgb(229,68,48)" fg:x="2148" fg:w="1"/><text x="44.2484%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::~SaveContext (2 samples, 0.04%)</title><rect x="44.0188%" y="597" width="0.0410%" height="15" fill="rgb(252,8,32)" fg:x="2149" fg:w="2"/><text x="44.2688%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.02%)</title><rect x="44.0598%" y="597" width="0.0205%" height="15" fill="rgb(223,20,43)" fg:x="2151" fg:w="1"/><text x="44.3098%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (76 samples, 1.56%)</title><rect x="42.5645%" y="613" width="1.5567%" height="15" fill="rgb(229,81,49)" fg:x="2078" fg:w="76"/><text x="42.8145%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::ThrowOnJavascriptExecution::IsAllowed (2 samples, 0.04%)</title><rect x="44.0803%" y="597" width="0.0410%" height="15" fill="rgb(236,28,36)" fg:x="2152" fg:w="2"/><text x="44.3303%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (1 samples, 0.02%)</title><rect x="44.1213%" y="613" width="0.0205%" height="15" fill="rgb(249,185,26)" fg:x="2154" fg:w="1"/><text x="44.3713%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::ClearKeptObjects (2 samples, 0.04%)</title><rect x="44.2032%" y="597" width="0.0410%" height="15" fill="rgb(249,174,33)" fg:x="2158" fg:w="2"/><text x="44.4532%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (1 samples, 0.02%)</title><rect x="44.2442%" y="581" width="0.0205%" height="15" fill="rgb(233,201,37)" fg:x="2160" fg:w="1"/><text x="44.4942%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.04%)</title><rect x="44.5719%" y="549" width="0.0410%" height="15" fill="rgb(221,78,26)" fg:x="2176" fg:w="2"/><text x="44.8219%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (5 samples, 0.10%)</title><rect x="44.6948%" y="533" width="0.1024%" height="15" fill="rgb(250,127,30)" fg:x="2182" fg:w="5"/><text x="44.9448%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (2 samples, 0.04%)</title><rect x="44.7972%" y="533" width="0.0410%" height="15" fill="rgb(230,49,44)" fg:x="2187" fg:w="2"/><text x="45.0472%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::GetCurrentStackPosition (2 samples, 0.04%)</title><rect x="44.7972%" y="517" width="0.0410%" height="15" fill="rgb(229,67,23)" fg:x="2187" fg:w="2"/><text x="45.0472%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (4 samples, 0.08%)</title><rect x="44.8382%" y="533" width="0.0819%" height="15" fill="rgb(249,83,47)" fg:x="2189" fg:w="4"/><text x="45.0882%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (1 samples, 0.02%)</title><rect x="45.4527%" y="485" width="0.0205%" height="15" fill="rgb(215,43,3)" fg:x="2219" fg:w="1"/><text x="45.7027%" y="495.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (2 samples, 0.04%)</title><rect x="45.4732%" y="485" width="0.0410%" height="15" fill="rgb(238,154,13)" fg:x="2220" fg:w="2"/><text x="45.7232%" y="495.50"></text></g><g><title>0x11000bf1c (1 samples, 0.02%)</title><rect x="45.6370%" y="421" width="0.0205%" height="15" fill="rgb(219,56,2)" fg:x="2228" fg:w="1"/><text x="45.8870%" y="431.50"></text></g><g><title>0x11000bc70 (1 samples, 0.02%)</title><rect x="45.6370%" y="405" width="0.0205%" height="15" fill="rgb(233,0,4)" fg:x="2228" fg:w="1"/><text x="45.8870%" y="415.50"></text></g><g><title>http_bench_json_ops`Builtins_StoreIC (1 samples, 0.02%)</title><rect x="45.6370%" y="389" width="0.0205%" height="15" fill="rgb(235,30,7)" fg:x="2228" fg:w="1"/><text x="45.8870%" y="399.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="45.6780%" y="341" width="0.0205%" height="15" fill="rgb(250,79,13)" fg:x="2230" fg:w="1"/><text x="45.9280%" y="351.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="45.6780%" y="325" width="0.0205%" height="15" fill="rgb(211,146,34)" fg:x="2230" fg:w="1"/><text x="45.9280%" y="335.50"></text></g><g><title>0x11000bfb8 (3 samples, 0.06%)</title><rect x="45.6575%" y="421" width="0.0615%" height="15" fill="rgb(228,22,38)" fg:x="2229" fg:w="3"/><text x="45.9075%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.06%)</title><rect x="45.6575%" y="405" width="0.0615%" height="15" fill="rgb(235,168,5)" fg:x="2229" fg:w="3"/><text x="45.9075%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (3 samples, 0.06%)</title><rect x="45.6575%" y="389" width="0.0615%" height="15" fill="rgb(221,155,16)" fg:x="2229" fg:w="3"/><text x="45.9075%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (3 samples, 0.06%)</title><rect x="45.6575%" y="373" width="0.0615%" height="15" fill="rgb(215,215,53)" fg:x="2229" fg:w="3"/><text x="45.9075%" y="383.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.06%)</title><rect x="45.6575%" y="357" width="0.0615%" height="15" fill="rgb(223,4,10)" fg:x="2229" fg:w="3"/><text x="45.9075%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="45.6985%" y="341" width="0.0205%" height="15" fill="rgb(234,103,6)" fg:x="2231" fg:w="1"/><text x="45.9485%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="45.6985%" y="325" width="0.0205%" height="15" fill="rgb(227,97,0)" fg:x="2231" fg:w="1"/><text x="45.9485%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="45.6985%" y="309" width="0.0205%" height="15" fill="rgb(234,150,53)" fg:x="2231" fg:w="1"/><text x="45.9485%" y="319.50"></text></g><g><title>0x11000c2b0 (5 samples, 0.10%)</title><rect x="45.6370%" y="453" width="0.1024%" height="15" fill="rgb(228,201,54)" fg:x="2228" fg:w="5"/><text x="45.8870%" y="463.50"></text></g><g><title>0x11000c0dc (5 samples, 0.10%)</title><rect x="45.6370%" y="437" width="0.1024%" height="15" fill="rgb(222,22,37)" fg:x="2228" fg:w="5"/><text x="45.8870%" y="447.50"></text></g><g><title>0x11000d160 (1 samples, 0.02%)</title><rect x="45.7190%" y="421" width="0.0205%" height="15" fill="rgb(237,53,32)" fg:x="2232" fg:w="1"/><text x="45.9690%" y="431.50"></text></g><g><title>http_bench_json_ops`deno_core::ops_builtin::func_op_read (1 samples, 0.02%)</title><rect x="45.7190%" y="405" width="0.0205%" height="15" fill="rgb(233,25,53)" fg:x="2232" fg:w="1"/><text x="45.9690%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="45.7190%" y="389" width="0.0205%" height="15" fill="rgb(210,40,34)" fg:x="2232" fg:w="1"/><text x="45.9690%" y="399.50"></text></g><g><title>0x11000c2d0 (1 samples, 0.02%)</title><rect x="45.7395%" y="453" width="0.0205%" height="15" fill="rgb(241,220,44)" fg:x="2233" fg:w="1"/><text x="45.9895%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitUncaught (1 samples, 0.02%)</title><rect x="45.7395%" y="437" width="0.0205%" height="15" fill="rgb(235,28,35)" fg:x="2233" fg:w="1"/><text x="45.9895%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (1 samples, 0.02%)</title><rect x="45.7395%" y="421" width="0.0205%" height="15" fill="rgb(210,56,17)" fg:x="2233" fg:w="1"/><text x="45.9895%" y="431.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (10 samples, 0.20%)</title><rect x="45.7804%" y="389" width="0.2048%" height="15" fill="rgb(224,130,29)" fg:x="2235" fg:w="10"/><text x="46.0304%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (10 samples, 0.20%)</title><rect x="45.7804%" y="373" width="0.2048%" height="15" fill="rgb(235,212,8)" fg:x="2235" fg:w="10"/><text x="46.0304%" y="383.50"></text></g><g><title>0x11000c45c (12 samples, 0.25%)</title><rect x="45.7599%" y="453" width="0.2458%" height="15" fill="rgb(223,33,50)" fg:x="2234" fg:w="12"/><text x="46.0099%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (12 samples, 0.25%)</title><rect x="45.7599%" y="437" width="0.2458%" height="15" fill="rgb(219,149,13)" fg:x="2234" fg:w="12"/><text x="46.0099%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (12 samples, 0.25%)</title><rect x="45.7599%" y="421" width="0.2458%" height="15" fill="rgb(250,156,29)" fg:x="2234" fg:w="12"/><text x="46.0099%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (11 samples, 0.23%)</title><rect x="45.7804%" y="405" width="0.2253%" height="15" fill="rgb(216,193,19)" fg:x="2235" fg:w="11"/><text x="46.0304%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::ExternalCallbackScope::ExternalCallbackScope (1 samples, 0.02%)</title><rect x="45.9853%" y="389" width="0.0205%" height="15" fill="rgb(216,135,14)" fg:x="2245" fg:w="1"/><text x="46.2353%" y="399.50"></text></g><g><title>0x11000d498 (1 samples, 0.02%)</title><rect x="46.0057%" y="453" width="0.0205%" height="15" fill="rgb(241,47,5)" fg:x="2246" fg:w="1"/><text x="46.2557%" y="463.50"></text></g><g><title>0x11000d61c (1 samples, 0.02%)</title><rect x="46.0262%" y="453" width="0.0205%" height="15" fill="rgb(233,42,35)" fg:x="2247" fg:w="1"/><text x="46.2762%" y="463.50"></text></g><g><title>0x11000d6ac (1 samples, 0.02%)</title><rect x="46.0467%" y="453" width="0.0205%" height="15" fill="rgb(231,13,6)" fg:x="2248" fg:w="1"/><text x="46.2967%" y="463.50"></text></g><g><title>0x11000d6e0 (1 samples, 0.02%)</title><rect x="46.0672%" y="453" width="0.0205%" height="15" fill="rgb(207,181,40)" fg:x="2249" fg:w="1"/><text x="46.3172%" y="463.50"></text></g><g><title>0x11000d6e8 (6 samples, 0.12%)</title><rect x="46.0877%" y="453" width="0.1229%" height="15" fill="rgb(254,173,49)" fg:x="2250" fg:w="6"/><text x="46.3377%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (6 samples, 0.12%)</title><rect x="46.0877%" y="437" width="0.1229%" height="15" fill="rgb(221,1,38)" fg:x="2250" fg:w="6"/><text x="46.3377%" y="447.50"></text></g><g><title>0x11000d704 (2 samples, 0.04%)</title><rect x="46.2106%" y="453" width="0.0410%" height="15" fill="rgb(206,124,46)" fg:x="2256" fg:w="2"/><text x="46.4606%" y="463.50"></text></g><g><title>0x11000d720 (1 samples, 0.02%)</title><rect x="46.2515%" y="453" width="0.0205%" height="15" fill="rgb(249,21,11)" fg:x="2258" fg:w="1"/><text x="46.5015%" y="463.50"></text></g><g><title>0x11000d768 (2 samples, 0.04%)</title><rect x="46.2720%" y="453" width="0.0410%" height="15" fill="rgb(222,201,40)" fg:x="2259" fg:w="2"/><text x="46.5220%" y="463.50"></text></g><g><title>0x11000d79c (1 samples, 0.02%)</title><rect x="46.3130%" y="453" width="0.0205%" height="15" fill="rgb(235,61,29)" fg:x="2261" fg:w="1"/><text x="46.5630%" y="463.50"></text></g><g><title>0x11000d7e0 (1 samples, 0.02%)</title><rect x="46.3335%" y="453" width="0.0205%" height="15" fill="rgb(219,207,3)" fg:x="2262" fg:w="1"/><text x="46.5835%" y="463.50"></text></g><g><title>0x11000d7e4 (1 samples, 0.02%)</title><rect x="46.3540%" y="453" width="0.0205%" height="15" fill="rgb(222,56,46)" fg:x="2263" fg:w="1"/><text x="46.6040%" y="463.50"></text></g><g><title>0x11000d800 (1 samples, 0.02%)</title><rect x="46.3744%" y="453" width="0.0205%" height="15" fill="rgb(239,76,54)" fg:x="2264" fg:w="1"/><text x="46.6244%" y="463.50"></text></g><g><title>0x11000d824 (1 samples, 0.02%)</title><rect x="46.3949%" y="453" width="0.0205%" height="15" fill="rgb(231,124,27)" fg:x="2265" fg:w="1"/><text x="46.6449%" y="463.50"></text></g><g><title>0x11000d830 (2 samples, 0.04%)</title><rect x="46.4154%" y="453" width="0.0410%" height="15" fill="rgb(249,195,6)" fg:x="2266" fg:w="2"/><text x="46.6654%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.02%)</title><rect x="46.6202%" y="421" width="0.0205%" height="15" fill="rgb(237,174,47)" fg:x="2276" fg:w="1"/><text x="46.8702%" y="431.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$send (2 samples, 0.04%)</title><rect x="46.6407%" y="421" width="0.0410%" height="15" fill="rgb(206,201,31)" fg:x="2277" fg:w="2"/><text x="46.8907%" y="431.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (5 samples, 0.10%)</title><rect x="47.5010%" y="405" width="0.1024%" height="15" fill="rgb(231,57,52)" fg:x="2319" fg:w="5"/><text x="47.7510%" y="415.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (4 samples, 0.08%)</title><rect x="47.5215%" y="389" width="0.0819%" height="15" fill="rgb(248,177,22)" fg:x="2320" fg:w="4"/><text x="47.7715%" y="399.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::op_try_write::call (46 samples, 0.94%)</title><rect x="46.6817%" y="421" width="0.9422%" height="15" fill="rgb(215,211,37)" fg:x="2279" fg:w="46"/><text x="46.9317%" y="431.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.02%)</title><rect x="47.6034%" y="405" width="0.0205%" height="15" fill="rgb(241,128,51)" fg:x="2324" fg:w="1"/><text x="47.8534%" y="415.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.02%)</title><rect x="47.6239%" y="421" width="0.0205%" height="15" fill="rgb(227,165,31)" fg:x="2325" fg:w="1"/><text x="47.8739%" y="431.50"></text></g><g><title>libsystem_c.dylib`send (1 samples, 0.02%)</title><rect x="47.6444%" y="421" width="0.0205%" height="15" fill="rgb(228,167,24)" fg:x="2326" fg:w="1"/><text x="47.8944%" y="431.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (1,841 samples, 37.71%)</title><rect x="46.4769%" y="437" width="37.7100%" height="15" fill="rgb(228,143,12)" fg:x="2269" fg:w="1841"/><text x="46.7269%" y="447.50">http_bench_json_ops`http_bench_json_ops::func_op_try_write</text></g><g><title>libsystem_kernel.dylib`__sendto (1,783 samples, 36.52%)</title><rect x="47.6649%" y="421" width="36.5219%" height="15" fill="rgb(249,149,8)" fg:x="2327" fg:w="1783"/><text x="47.9149%" y="431.50">libsystem_kernel.dylib`__sendto</text></g><g><title>0x11000d838 (1,843 samples, 37.75%)</title><rect x="46.4564%" y="453" width="37.7509%" height="15" fill="rgb(243,35,44)" fg:x="2268" fg:w="1843"/><text x="46.7064%" y="463.50">0x11000d838</text></g><g><title>http_bench_json_ops`v8::External::Value (1 samples, 0.02%)</title><rect x="84.1868%" y="437" width="0.0205%" height="15" fill="rgb(246,89,9)" fg:x="4110" fg:w="1"/><text x="84.4368%" y="447.50"></text></g><g><title>0x11000d898 (1 samples, 0.02%)</title><rect x="84.2073%" y="453" width="0.0205%" height="15" fill="rgb(233,213,13)" fg:x="4111" fg:w="1"/><text x="84.4573%" y="463.50"></text></g><g><title>0x11000d8e4 (1 samples, 0.02%)</title><rect x="84.2278%" y="453" width="0.0205%" height="15" fill="rgb(233,141,41)" fg:x="4112" fg:w="1"/><text x="84.4778%" y="463.50"></text></g><g><title>0x11000d8e8 (1 samples, 0.02%)</title><rect x="84.2483%" y="453" width="0.0205%" height="15" fill="rgb(239,167,4)" fg:x="4113" fg:w="1"/><text x="84.4983%" y="463.50"></text></g><g><title>0x11000daa0 (1 samples, 0.02%)</title><rect x="84.2687%" y="453" width="0.0205%" height="15" fill="rgb(209,217,16)" fg:x="4114" fg:w="1"/><text x="84.5187%" y="463.50"></text></g><g><title>0x11000dabc (5 samples, 0.10%)</title><rect x="84.2892%" y="453" width="0.1024%" height="15" fill="rgb(219,88,35)" fg:x="4115" fg:w="5"/><text x="84.5392%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (5 samples, 0.10%)</title><rect x="84.2892%" y="437" width="0.1024%" height="15" fill="rgb(220,193,23)" fg:x="4115" fg:w="5"/><text x="84.5392%" y="447.50"></text></g><g><title>0x11000daf8 (1 samples, 0.02%)</title><rect x="84.3916%" y="453" width="0.0205%" height="15" fill="rgb(230,90,52)" fg:x="4120" fg:w="1"/><text x="84.6416%" y="463.50"></text></g><g><title>0x11000db00 (2 samples, 0.04%)</title><rect x="84.4121%" y="453" width="0.0410%" height="15" fill="rgb(252,106,19)" fg:x="4121" fg:w="2"/><text x="84.6621%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (1 samples, 0.02%)</title><rect x="84.4326%" y="437" width="0.0205%" height="15" fill="rgb(206,74,20)" fg:x="4122" fg:w="1"/><text x="84.6826%" y="447.50"></text></g><g><title>0x11000db8c (1 samples, 0.02%)</title><rect x="84.4531%" y="453" width="0.0205%" height="15" fill="rgb(230,138,44)" fg:x="4123" fg:w="1"/><text x="84.7031%" y="463.50"></text></g><g><title>0x11000dbb0 (2 samples, 0.04%)</title><rect x="84.4736%" y="453" width="0.0410%" height="15" fill="rgb(235,182,43)" fg:x="4124" fg:w="2"/><text x="84.7236%" y="463.50"></text></g><g><title>0x11000dc28 (1 samples, 0.02%)</title><rect x="84.5145%" y="453" width="0.0205%" height="15" fill="rgb(242,16,51)" fg:x="4126" fg:w="1"/><text x="84.7645%" y="463.50"></text></g><g><title>0x11000dc3c (1 samples, 0.02%)</title><rect x="84.5350%" y="453" width="0.0205%" height="15" fill="rgb(248,9,4)" fg:x="4127" fg:w="1"/><text x="84.7850%" y="463.50"></text></g><g><title>0x11000dc40 (1 samples, 0.02%)</title><rect x="84.5555%" y="453" width="0.0205%" height="15" fill="rgb(210,31,22)" fg:x="4128" fg:w="1"/><text x="84.8055%" y="463.50"></text></g><g><title>0x11000dc7c (1 samples, 0.02%)</title><rect x="84.5760%" y="453" width="0.0205%" height="15" fill="rgb(239,54,39)" fg:x="4129" fg:w="1"/><text x="84.8260%" y="463.50"></text></g><g><title>0x11000dc84 (1 samples, 0.02%)</title><rect x="84.5965%" y="453" width="0.0205%" height="15" fill="rgb(230,99,41)" fg:x="4130" fg:w="1"/><text x="84.8465%" y="463.50"></text></g><g><title>0x11000dd44 (1 samples, 0.02%)</title><rect x="84.6170%" y="453" width="0.0205%" height="15" fill="rgb(253,106,12)" fg:x="4131" fg:w="1"/><text x="84.8670%" y="463.50"></text></g><g><title>0x11000dde4 (1 samples, 0.02%)</title><rect x="84.6374%" y="453" width="0.0205%" height="15" fill="rgb(213,46,41)" fg:x="4132" fg:w="1"/><text x="84.8874%" y="463.50"></text></g><g><title>0x11000de08 (1 samples, 0.02%)</title><rect x="84.6579%" y="453" width="0.0205%" height="15" fill="rgb(215,133,35)" fg:x="4133" fg:w="1"/><text x="84.9079%" y="463.50"></text></g><g><title>0x11000de2c (12 samples, 0.25%)</title><rect x="84.6784%" y="453" width="0.2458%" height="15" fill="rgb(213,28,5)" fg:x="4134" fg:w="12"/><text x="84.9284%" y="463.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$malloc (2 samples, 0.04%)</title><rect x="84.9242%" y="437" width="0.0410%" height="15" fill="rgb(215,77,49)" fg:x="4146" fg:w="2"/><text x="85.1742%" y="447.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="85.2724%" y="421" width="0.0205%" height="15" fill="rgb(248,100,22)" fg:x="4163" fg:w="1"/><text x="85.5224%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="85.8664%" y="389" width="0.0205%" height="15" fill="rgb(208,67,9)" fg:x="4192" fg:w="1"/><text x="86.1164%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.33%)</title><rect x="85.8869%" y="373" width="0.3277%" height="15" fill="rgb(219,133,21)" fg:x="4193" fg:w="16"/><text x="86.1369%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.18%)</title><rect x="86.0303%" y="357" width="0.1844%" height="15" fill="rgb(246,46,29)" fg:x="4200" fg:w="9"/><text x="86.2803%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.43%)</title><rect x="85.8050%" y="405" width="0.4302%" height="15" fill="rgb(246,185,52)" fg:x="4189" fg:w="21"/><text x="86.0550%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.35%)</title><rect x="85.8869%" y="389" width="0.3482%" height="15" fill="rgb(252,136,11)" fg:x="4193" fg:w="17"/><text x="86.1369%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="86.2147%" y="373" width="0.0205%" height="15" fill="rgb(219,138,53)" fg:x="4209" fg:w="1"/><text x="86.4647%" y="383.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (48 samples, 0.98%)</title><rect x="85.2929%" y="421" width="0.9832%" height="15" fill="rgb(211,51,23)" fg:x="4164" fg:w="48"/><text x="85.5429%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.04%)</title><rect x="86.2351%" y="405" width="0.0410%" height="15" fill="rgb(247,221,28)" fg:x="4210" fg:w="2"/><text x="86.4851%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (2 samples, 0.04%)</title><rect x="86.2761%" y="421" width="0.0410%" height="15" fill="rgb(251,222,45)" fg:x="4212" fg:w="2"/><text x="86.5261%" y="431.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (5 samples, 0.10%)</title><rect x="86.3171%" y="421" width="0.1024%" height="15" fill="rgb(217,162,53)" fg:x="4214" fg:w="5"/><text x="86.5671%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (2 samples, 0.04%)</title><rect x="86.3785%" y="405" width="0.0410%" height="15" fill="rgb(229,93,14)" fg:x="4217" fg:w="2"/><text x="86.6285%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.06%)</title><rect x="86.5834%" y="405" width="0.0615%" height="15" fill="rgb(209,67,49)" fg:x="4227" fg:w="3"/><text x="86.8334%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.12%)</title><rect x="86.6858%" y="389" width="0.1229%" height="15" fill="rgb(213,87,29)" fg:x="4232" fg:w="6"/><text x="86.9358%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.08%)</title><rect x="86.7268%" y="373" width="0.0819%" height="15" fill="rgb(205,151,52)" fg:x="4234" fg:w="4"/><text x="86.9768%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.41%)</title><rect x="86.4195%" y="421" width="0.4097%" height="15" fill="rgb(253,215,39)" fg:x="4219" fg:w="20"/><text x="86.6695%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.18%)</title><rect x="86.6448%" y="405" width="0.1844%" height="15" fill="rgb(221,220,41)" fg:x="4230" fg:w="9"/><text x="86.8948%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="86.8087%" y="389" width="0.0205%" height="15" fill="rgb(218,133,21)" fg:x="4238" fg:w="1"/><text x="87.0587%" y="399.50"></text></g><g><title>http_bench_json_ops`deno_core::ops_builtin::func_op_read (94 samples, 1.93%)</title><rect x="84.9652%" y="437" width="1.9254%" height="15" fill="rgb(221,193,43)" fg:x="4148" fg:w="94"/><text x="85.2152%" y="447.50">h..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.06%)</title><rect x="86.8292%" y="421" width="0.0615%" height="15" fill="rgb(240,128,52)" fg:x="4239" fg:w="3"/><text x="87.0792%" y="431.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (2 samples, 0.04%)</title><rect x="86.8906%" y="437" width="0.0410%" height="15" fill="rgb(253,114,12)" fg:x="4242" fg:w="2"/><text x="87.1406%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::External::Value (1 samples, 0.02%)</title><rect x="86.9316%" y="437" width="0.0205%" height="15" fill="rgb(215,223,47)" fg:x="4244" fg:w="1"/><text x="87.1816%" y="447.50"></text></g><g><title>0x11000de34 (102 samples, 2.09%)</title><rect x="84.9242%" y="453" width="2.0893%" height="15" fill="rgb(248,225,23)" fg:x="4146" fg:w="102"/><text x="85.1742%" y="463.50">0..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.06%)</title><rect x="86.9521%" y="437" width="0.0615%" height="15" fill="rgb(250,108,0)" fg:x="4245" fg:w="3"/><text x="87.2021%" y="447.50"></text></g><g><title>0x11000de64 (1 samples, 0.02%)</title><rect x="87.0135%" y="453" width="0.0205%" height="15" fill="rgb(228,208,7)" fg:x="4248" fg:w="1"/><text x="87.2635%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (1 samples, 0.02%)</title><rect x="87.2388%" y="405" width="0.0205%" height="15" fill="rgb(244,45,10)" fg:x="4259" fg:w="1"/><text x="87.4888%" y="415.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.04%)</title><rect x="87.2388%" y="421" width="0.0410%" height="15" fill="rgb(207,125,25)" fg:x="4259" fg:w="2"/><text x="87.4888%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.02%)</title><rect x="87.2593%" y="405" width="0.0205%" height="15" fill="rgb(210,195,18)" fg:x="4260" fg:w="1"/><text x="87.5093%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (1 samples, 0.02%)</title><rect x="87.2593%" y="389" width="0.0205%" height="15" fill="rgb(249,80,12)" fg:x="4260" fg:w="1"/><text x="87.5093%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.02%)</title><rect x="87.2593%" y="373" width="0.0205%" height="15" fill="rgb(221,65,9)" fg:x="4260" fg:w="1"/><text x="87.5093%" y="383.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="87.2593%" y="357" width="0.0205%" height="15" fill="rgb(235,49,36)" fg:x="4260" fg:w="1"/><text x="87.5093%" y="367.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitUncaught (20 samples, 0.41%)</title><rect x="87.0340%" y="437" width="0.4097%" height="15" fill="rgb(225,32,20)" fg:x="4249" fg:w="20"/><text x="87.2840%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (8 samples, 0.16%)</title><rect x="87.2798%" y="421" width="0.1639%" height="15" fill="rgb(215,141,46)" fg:x="4261" fg:w="8"/><text x="87.5298%" y="431.50"></text></g><g><title>0x11000de6c (21 samples, 0.43%)</title><rect x="87.0340%" y="453" width="0.4302%" height="15" fill="rgb(250,160,47)" fg:x="4249" fg:w="21"/><text x="87.2840%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (1 samples, 0.02%)</title><rect x="87.4437%" y="437" width="0.0205%" height="15" fill="rgb(216,222,40)" fg:x="4269" fg:w="1"/><text x="87.6937%" y="447.50"></text></g><g><title>0x11000deb4 (1 samples, 0.02%)</title><rect x="87.4642%" y="453" width="0.0205%" height="15" fill="rgb(234,217,39)" fg:x="4270" fg:w="1"/><text x="87.7142%" y="463.50"></text></g><g><title>0x11000dec8 (1 samples, 0.02%)</title><rect x="87.4846%" y="453" width="0.0205%" height="15" fill="rgb(207,178,40)" fg:x="4271" fg:w="1"/><text x="87.7346%" y="463.50"></text></g><g><title>0x11000e1a4 (1 samples, 0.02%)</title><rect x="87.5051%" y="453" width="0.0205%" height="15" fill="rgb(221,136,13)" fg:x="4272" fg:w="1"/><text x="87.7551%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="87.5051%" y="437" width="0.0205%" height="15" fill="rgb(249,199,10)" fg:x="4272" fg:w="1"/><text x="87.7551%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (1 samples, 0.02%)</title><rect x="87.5051%" y="421" width="0.0205%" height="15" fill="rgb(249,222,13)" fg:x="4272" fg:w="1"/><text x="87.7551%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::SpaceWithLinearArea::InvokeAllocationObservers (1 samples, 0.02%)</title><rect x="87.5051%" y="405" width="0.0205%" height="15" fill="rgb(244,185,38)" fg:x="4272" fg:w="1"/><text x="87.7551%" y="415.50"></text></g><g><title>0x11000e2d4 (1 samples, 0.02%)</title><rect x="87.5256%" y="453" width="0.0205%" height="15" fill="rgb(236,202,9)" fg:x="4273" fg:w="1"/><text x="87.7756%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="87.5461%" y="405" width="0.0205%" height="15" fill="rgb(250,229,37)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="87.5461%" y="389" width="0.0205%" height="15" fill="rgb(206,174,23)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="87.5461%" y="373" width="0.0205%" height="15" fill="rgb(211,33,43)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="383.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="87.5461%" y="357" width="0.0205%" height="15" fill="rgb(245,58,50)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="367.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="87.5461%" y="341" width="0.0205%" height="15" fill="rgb(244,68,36)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.02%)</title><rect x="87.5461%" y="325" width="0.0205%" height="15" fill="rgb(232,229,15)" fg:x="4274" fg:w="1"/><text x="87.7961%" y="335.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="87.5461%" y="453" width="0.0410%" height="15" fill="rgb(254,30,23)" fg:x="4274" fg:w="2"/><text x="87.7961%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="87.5461%" y="437" width="0.0410%" height="15" fill="rgb(235,160,14)" fg:x="4274" fg:w="2"/><text x="87.7961%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.04%)</title><rect x="87.5461%" y="421" width="0.0410%" height="15" fill="rgb(212,155,44)" fg:x="4274" fg:w="2"/><text x="87.7961%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="87.5666%" y="405" width="0.0205%" height="15" fill="rgb(226,2,50)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="415.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="87.5666%" y="389" width="0.0205%" height="15" fill="rgb(234,177,6)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="399.50"></text></g><g><title>http_bench_json_ops`Builtins_CreateClosureHandler (1 samples, 0.02%)</title><rect x="87.5666%" y="373" width="0.0205%" height="15" fill="rgb(217,24,9)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="383.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="87.5666%" y="357" width="0.0205%" height="15" fill="rgb(220,13,46)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_NewClosure_Tenured (1 samples, 0.02%)</title><rect x="87.5666%" y="341" width="0.0205%" height="15" fill="rgb(239,221,27)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::JSFunctionBuilder::Build (1 samples, 0.02%)</title><rect x="87.5666%" y="325" width="0.0205%" height="15" fill="rgb(222,198,25)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::InitializeJSObjectBody (1 samples, 0.02%)</title><rect x="87.5666%" y="309" width="0.0205%" height="15" fill="rgb(211,99,13)" fg:x="4275" fg:w="1"/><text x="87.8166%" y="319.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (5 samples, 0.10%)</title><rect x="87.5871%" y="453" width="0.1024%" height="15" fill="rgb(232,111,31)" fg:x="4276" fg:w="5"/><text x="87.8371%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (2,057 samples, 42.13%)</title><rect x="45.5756%" y="469" width="42.1344%" height="15" fill="rgb(245,82,37)" fg:x="2225" fg:w="2057"/><text x="45.8256%" y="479.50">http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (1 samples, 0.02%)</title><rect x="87.6895%" y="453" width="0.0205%" height="15" fill="rgb(227,149,46)" fg:x="4281" fg:w="1"/><text x="87.9395%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (2,085 samples, 42.71%)</title><rect x="45.1454%" y="517" width="42.7079%" height="15" fill="rgb(218,36,50)" fg:x="2204" fg:w="2085"/><text x="45.3954%" y="527.50">http_bench_json_ops`Builtins_JSRunMicrotasksEntry</text></g><g><title>http_bench_json_ops`Builtins_RunMicrotasks (2,082 samples, 42.65%)</title><rect x="45.2069%" y="501" width="42.6465%" height="15" fill="rgb(226,80,48)" fg:x="2207" fg:w="2082"/><text x="45.4569%" y="511.50">http_bench_json_ops`Builtins_RunMicrotasks</text></g><g><title>http_bench_json_ops`Builtins_PromiseFulfillReactionJob (2,067 samples, 42.34%)</title><rect x="45.5141%" y="485" width="42.3392%" height="15" fill="rgb(238,224,15)" fg:x="2222" fg:w="2067"/><text x="45.7641%" y="495.50">http_bench_json_ops`Builtins_PromiseFulfillReactionJob</text></g><g><title>http_bench_json_ops`Builtins_ResumeGeneratorTrampoline (7 samples, 0.14%)</title><rect x="87.7100%" y="469" width="0.1434%" height="15" fill="rgb(241,136,10)" fg:x="4282" fg:w="7"/><text x="87.9600%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2,097 samples, 42.95%)</title><rect x="44.9201%" y="533" width="42.9537%" height="15" fill="rgb(208,32,45)" fg:x="2193" fg:w="2097"/><text x="45.1701%" y="543.50">http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::in..</text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="87.8533%" y="517" width="0.0205%" height="15" fill="rgb(207,135,9)" fg:x="4289" fg:w="1"/><text x="88.1033%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtins::code_handle (2 samples, 0.04%)</title><rect x="87.8738%" y="533" width="0.0410%" height="15" fill="rgb(206,86,44)" fg:x="4290" fg:w="2"/><text x="88.1238%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2,236 samples, 45.80%)</title><rect x="42.1549%" y="629" width="45.8009%" height="15" fill="rgb(245,177,15)" fg:x="2058" fg:w="2236"/><text x="42.4049%" y="639.50">http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8..</text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (2,139 samples, 43.81%)</title><rect x="44.1417%" y="613" width="43.8140%" height="15" fill="rgb(206,64,50)" fg:x="2155" fg:w="2139"/><text x="44.3917%" y="623.50">http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInte..</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2,134 samples, 43.71%)</title><rect x="44.2442%" y="597" width="43.7116%" height="15" fill="rgb(234,36,40)" fg:x="2160" fg:w="2134"/><text x="44.4942%" y="607.50">http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInter..</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2,133 samples, 43.69%)</title><rect x="44.2646%" y="581" width="43.6911%" height="15" fill="rgb(213,64,8)" fg:x="2161" fg:w="2133"/><text x="44.5146%" y="591.50">http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (2,119 samples, 43.40%)</title><rect x="44.5514%" y="565" width="43.4043%" height="15" fill="rgb(210,75,36)" fg:x="2175" fg:w="2119"/><text x="44.8014%" y="575.50">http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (2,116 samples, 43.34%)</title><rect x="44.6129%" y="549" width="43.3429%" height="15" fill="rgb(229,88,21)" fg:x="2178" fg:w="2116"/><text x="44.8629%" y="559.50">http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryC..</text></g><g><title>http_bench_json_ops`v8::internal::Isolate::RegisterTryCatchHandler (2 samples, 0.04%)</title><rect x="87.9148%" y="533" width="0.0410%" height="15" fill="rgb(252,204,47)" fg:x="4292" fg:w="2"/><text x="88.1648%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::Exception (2 samples, 0.04%)</title><rect x="87.9558%" y="629" width="0.0410%" height="15" fill="rgb(208,77,27)" fg:x="4294" fg:w="2"/><text x="88.2058%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (2 samples, 0.04%)</title><rect x="87.9967%" y="629" width="0.0410%" height="15" fill="rgb(221,76,26)" fg:x="4296" fg:w="2"/><text x="88.2467%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (5 samples, 0.10%)</title><rect x="88.0377%" y="629" width="0.1024%" height="15" fill="rgb(225,139,18)" fg:x="4298" fg:w="5"/><text x="88.2877%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (2 samples, 0.04%)</title><rect x="88.1401%" y="629" width="0.0410%" height="15" fill="rgb(230,137,11)" fg:x="4303" fg:w="2"/><text x="88.3901%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (1 samples, 0.02%)</title><rect x="88.1811%" y="629" width="0.0205%" height="15" fill="rgb(212,28,1)" fg:x="4305" fg:w="1"/><text x="88.4311%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (5 samples, 0.10%)</title><rect x="88.2016%" y="629" width="0.1024%" height="15" fill="rgb(248,164,17)" fg:x="4306" fg:w="5"/><text x="88.4516%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (3 samples, 0.06%)</title><rect x="88.3040%" y="629" width="0.0615%" height="15" fill="rgb(222,171,42)" fg:x="4311" fg:w="3"/><text x="88.5540%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2 samples, 0.04%)</title><rect x="88.3654%" y="629" width="0.0410%" height="15" fill="rgb(243,84,45)" fg:x="4314" fg:w="2"/><text x="88.6154%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2 samples, 0.04%)</title><rect x="88.3654%" y="613" width="0.0410%" height="15" fill="rgb(252,49,23)" fg:x="4314" fg:w="2"/><text x="88.6154%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (3 samples, 0.06%)</title><rect x="88.4064%" y="629" width="0.0615%" height="15" fill="rgb(215,19,7)" fg:x="4316" fg:w="3"/><text x="88.6564%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::WasmEngine::HasRunningCompileJob (1 samples, 0.02%)</title><rect x="88.4678%" y="629" width="0.0205%" height="15" fill="rgb(238,81,41)" fg:x="4319" fg:w="1"/><text x="88.7178%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (1 samples, 0.02%)</title><rect x="88.4883%" y="629" width="0.0205%" height="15" fill="rgb(210,199,37)" fg:x="4320" fg:w="1"/><text x="88.7383%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::UpdateStatistics (1 samples, 0.02%)</title><rect x="88.5293%" y="581" width="0.0205%" height="15" fill="rgb(244,192,49)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Print (1 samples, 0.02%)</title><rect x="88.5293%" y="565" width="0.0205%" height="15" fill="rgb(226,211,11)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Output (1 samples, 0.02%)</title><rect x="88.5293%" y="549" width="0.0205%" height="15" fill="rgb(236,162,54)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::base::OS::VSNPrintF (1 samples, 0.02%)</title><rect x="88.5293%" y="533" width="0.0205%" height="15" fill="rgb(220,229,9)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="543.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="88.5293%" y="517" width="0.0205%" height="15" fill="rgb(250,87,22)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="527.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="88.5293%" y="501" width="0.0205%" height="15" fill="rgb(239,43,17)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="511.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.02%)</title><rect x="88.5293%" y="485" width="0.0205%" height="15" fill="rgb(231,177,25)" fg:x="4322" fg:w="1"/><text x="88.7793%" y="495.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="88.5498%" y="549" width="0.0205%" height="15" fill="rgb(219,179,1)" fg:x="4323" fg:w="1"/><text x="88.7998%" y="559.50"></text></g><g><title>http_bench_json_ops`heap::base::Worklist&lt;v8::internal::MemoryChunk*, (unsigned short)64&gt;::Local::~Local (1 samples, 0.02%)</title><rect x="88.5703%" y="533" width="0.0205%" height="15" fill="rgb(238,219,53)" fg:x="4324" fg:w="1"/><text x="88.8203%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::IterateWeakRoots(v8::internal::RootVisitor*, v8::base::EnumSet (1 samples, 0.02%)</title><rect x="88.5907%" y="517" width="0.0205%" height="15" fill="rgb(232,167,36)" fg:x="4325" fg:w="1"/><text x="88.8407%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (2 samples, 0.04%)</title><rect x="88.5907%" y="533" width="0.0410%" height="15" fill="rgb(244,19,51)" fg:x="4325" fg:w="2"/><text x="88.8407%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="88.6112%" y="517" width="0.0205%" height="15" fill="rgb(224,6,22)" fg:x="4326" fg:w="1"/><text x="88.8612%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::Scavenger(v8::internal::ScavengerCollector*, v8::internal::Heap*, bool, heap::base::Worklist&lt;v8::internal::MemoryChunk*, (unsigned short)64&gt;*, heap::base::Worklist&lt;std::__1::pair&lt;v8::internal::HeapObject, int&gt;, (unsigned short)256&gt;*, v8::internal::Scavenger::PromotionList*, heap::base::Worklist&lt;v8::internal::EphemeronHashTable, (1 samples, 0.02%)</title><rect x="88.6317%" y="533" width="0.0205%" height="15" fill="rgb(224,145,5)" fg:x="4327" fg:w="1"/><text x="88.8817%" y="543.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::BodyDescriptorApply&lt;v8::internal::CallIterateBody, v8::internal::Map&amp;, v8::internal::HeapObject&amp;, int&amp;, v8::internal::IterateAndScavengePromotedObjectsVisitor*&amp;&gt; (1 samples, 0.02%)</title><rect x="88.6522%" y="469" width="0.0205%" height="15" fill="rgb(234,130,49)" fg:x="4328" fg:w="1"/><text x="88.9022%" y="479.50"></text></g><g><title>http_bench_json_ops`void v8::internal::BodyDescriptorBase::IteratePointers&lt;v8::internal::IterateAndScavengePromotedObjectsVisitor&gt; (1 samples, 0.02%)</title><rect x="88.6522%" y="453" width="0.0205%" height="15" fill="rgb(254,6,2)" fg:x="4328" fg:w="1"/><text x="88.9022%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::Process (2 samples, 0.04%)</title><rect x="88.6522%" y="485" width="0.0410%" height="15" fill="rgb(208,96,46)" fg:x="4328" fg:w="2"/><text x="88.9022%" y="495.50"></text></g><g><title>http_bench_json_ops`void v8::internal::BodyDescriptorBase::IterateJSObjectBodyImpl&lt;v8::internal::ScavengeVisitor&gt; (1 samples, 0.02%)</title><rect x="88.6727%" y="469" width="0.0205%" height="15" fill="rgb(239,3,39)" fg:x="4329" fg:w="1"/><text x="88.9227%" y="479.50"></text></g><g><title>http_bench_json_ops`heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="88.6727%" y="453" width="0.0205%" height="15" fill="rgb(233,210,1)" fg:x="4329" fg:w="1"/><text x="88.9227%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::HeapObject::SizeFromMap (1 samples, 0.02%)</title><rect x="88.6727%" y="437" width="0.0205%" height="15" fill="rgb(244,137,37)" fg:x="4329" fg:w="1"/><text x="88.9227%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::CollectGarbage (7 samples, 0.14%)</title><rect x="88.5703%" y="549" width="0.1434%" height="15" fill="rgb(240,136,2)" fg:x="4324" fg:w="7"/><text x="88.8203%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobHandle::Join (3 samples, 0.06%)</title><rect x="88.6522%" y="533" width="0.0615%" height="15" fill="rgb(239,18,37)" fg:x="4328" fg:w="3"/><text x="88.9022%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::Join (3 samples, 0.06%)</title><rect x="88.6522%" y="517" width="0.0615%" height="15" fill="rgb(218,185,22)" fg:x="4328" fg:w="3"/><text x="88.9022%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::JobTask::ProcessItems (3 samples, 0.06%)</title><rect x="88.6522%" y="501" width="0.0615%" height="15" fill="rgb(225,218,4)" fg:x="4328" fg:w="3"/><text x="88.9022%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::ScavengePage (1 samples, 0.02%)</title><rect x="88.6932%" y="485" width="0.0205%" height="15" fill="rgb(230,182,32)" fg:x="4330" fg:w="1"/><text x="88.9432%" y="495.50"></text></g><g><title>http_bench_json_ops`heap::base::SlotCallbackResult v8::internal::Scavenger::ScavengeObject&lt;v8::internal::CompressedHeapObjectSlot&gt; (1 samples, 0.02%)</title><rect x="88.6932%" y="469" width="0.0205%" height="15" fill="rgb(242,56,43)" fg:x="4330" fg:w="1"/><text x="88.9432%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::PerformGarbageCollection (9 samples, 0.18%)</title><rect x="88.5498%" y="581" width="0.1844%" height="15" fill="rgb(233,99,24)" fg:x="4323" fg:w="9"/><text x="88.7998%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::Scavenge (9 samples, 0.18%)</title><rect x="88.5498%" y="565" width="0.1844%" height="15" fill="rgb(234,209,42)" fg:x="4323" fg:w="9"/><text x="88.7998%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="88.7136%" y="549" width="0.0205%" height="15" fill="rgb(227,7,12)" fg:x="4331" fg:w="1"/><text x="88.9636%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengeJob::Task::RunInternal (11 samples, 0.23%)</title><rect x="88.5293%" y="613" width="0.2253%" height="15" fill="rgb(245,203,43)" fg:x="4322" fg:w="11"/><text x="88.7793%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::CollectGarbage (11 samples, 0.23%)</title><rect x="88.5293%" y="597" width="0.2253%" height="15" fill="rgb(238,205,33)" fg:x="4322" fg:w="11"/><text x="88.7793%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="88.7341%" y="581" width="0.0205%" height="15" fill="rgb(231,56,7)" fg:x="4332" fg:w="1"/><text x="88.9841%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex, (1 samples, 0.02%)</title><rect x="88.7546%" y="613" width="0.0205%" height="15" fill="rgb(244,186,29)" fg:x="4333" fg:w="1"/><text x="89.0046%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (2 samples, 0.04%)</title><rect x="88.7751%" y="613" width="0.0410%" height="15" fill="rgb(234,111,31)" fg:x="4334" fg:w="2"/><text x="89.0251%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="88.7956%" y="597" width="0.0205%" height="15" fill="rgb(241,149,10)" fg:x="4335" fg:w="1"/><text x="89.0456%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultPlatform::PumpMessageLoop (16 samples, 0.33%)</title><rect x="88.5088%" y="629" width="0.3277%" height="15" fill="rgb(249,206,44)" fg:x="4321" fg:w="16"/><text x="88.7588%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="88.8161%" y="613" width="0.0205%" height="15" fill="rgb(251,153,30)" fg:x="4336" fg:w="1"/><text x="89.0661%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (7 samples, 0.14%)</title><rect x="88.8365%" y="629" width="0.1434%" height="15" fill="rgb(239,152,38)" fg:x="4337" fg:w="7"/><text x="89.0865%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (1 samples, 0.02%)</title><rect x="88.9594%" y="613" width="0.0205%" height="15" fill="rgb(249,139,47)" fg:x="4343" fg:w="1"/><text x="89.2094%" y="623.50"></text></g><g><title>http_bench_json_ops`v8__Null (1 samples, 0.02%)</title><rect x="88.9799%" y="629" width="0.0205%" height="15" fill="rgb(244,64,35)" fg:x="4344" fg:w="1"/><text x="89.2299%" y="639.50"></text></g><g><title>http_bench_json_ops`v8__TryCatch__DESTRUCT (1 samples, 0.02%)</title><rect x="89.0004%" y="629" width="0.0205%" height="15" fill="rgb(216,46,15)" fg:x="4345" fg:w="1"/><text x="89.2504%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.25%)</title><rect x="89.0209%" y="629" width="0.2458%" height="15" fill="rgb(250,74,19)" fg:x="4346" fg:w="12"/><text x="89.2709%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.10%)</title><rect x="89.1643%" y="613" width="0.1024%" height="15" fill="rgb(249,42,33)" fg:x="4353" fg:w="5"/><text x="89.4143%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.08%)</title><rect x="89.2667%" y="629" width="0.0819%" height="15" fill="rgb(242,149,17)" fg:x="4358" fg:w="4"/><text x="89.5167%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.12%)</title><rect x="89.3486%" y="629" width="0.1229%" height="15" fill="rgb(244,29,21)" fg:x="4362" fg:w="6"/><text x="89.5986%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="89.4715%" y="629" width="0.0205%" height="15" fill="rgb(220,130,37)" fg:x="4368" fg:w="1"/><text x="89.7215%" y="639.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (4,359 samples, 89.29%)</title><rect x="0.2253%" y="645" width="89.2872%" height="15" fill="rgb(211,67,2)" fg:x="11" fg:w="4359"/><text x="0.4753%" y="655.50">http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="89.4920%" y="629" width="0.0205%" height="15" fill="rgb(235,68,52)" fg:x="4369" fg:w="1"/><text x="89.7420%" y="639.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (1 samples, 0.02%)</title><rect x="89.5125%" y="645" width="0.0205%" height="15" fill="rgb(246,142,3)" fg:x="4370" fg:w="1"/><text x="89.7625%" y="655.50"></text></g><g><title>http_bench_json_ops`std__shared_ptr__v8__Platform__get (1 samples, 0.02%)</title><rect x="89.5330%" y="645" width="0.0205%" height="15" fill="rgb(241,25,7)" fg:x="4371" fg:w="1"/><text x="89.7830%" y="655.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::drop_arc_raw (1 samples, 0.02%)</title><rect x="89.5535%" y="645" width="0.0205%" height="15" fill="rgb(242,119,39)" fg:x="4372" fg:w="1"/><text x="89.8035%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2 samples, 0.04%)</title><rect x="89.5739%" y="645" width="0.0410%" height="15" fill="rgb(241,98,45)" fg:x="4373" fg:w="2"/><text x="89.8239%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::PerformMicrotaskCheckpoint (1 samples, 0.02%)</title><rect x="89.6149%" y="645" width="0.0205%" height="15" fill="rgb(254,28,30)" fg:x="4375" fg:w="1"/><text x="89.8649%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::Exception (1 samples, 0.02%)</title><rect x="89.6354%" y="645" width="0.0205%" height="15" fill="rgb(241,142,54)" fg:x="4376" fg:w="1"/><text x="89.8854%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (3 samples, 0.06%)</title><rect x="89.6559%" y="645" width="0.0615%" height="15" fill="rgb(222,85,15)" fg:x="4377" fg:w="3"/><text x="89.9059%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (1 samples, 0.02%)</title><rect x="89.7173%" y="645" width="0.0205%" height="15" fill="rgb(210,85,47)" fg:x="4380" fg:w="1"/><text x="89.9673%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::platform::PumpMessageLoop (1 samples, 0.02%)</title><rect x="89.7378%" y="645" width="0.0205%" height="15" fill="rgb(224,206,25)" fg:x="4381" fg:w="1"/><text x="89.9878%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (1 samples, 0.02%)</title><rect x="89.7583%" y="645" width="0.0205%" height="15" fill="rgb(243,201,19)" fg:x="4382" fg:w="1"/><text x="90.0083%" y="655.50"></text></g><g><title>http_bench_json_ops`v8__Function__Call (1 samples, 0.02%)</title><rect x="89.7788%" y="645" width="0.0205%" height="15" fill="rgb(236,59,4)" fg:x="4383" fg:w="1"/><text x="90.0288%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.04%)</title><rect x="89.7993%" y="645" width="0.0410%" height="15" fill="rgb(254,179,45)" fg:x="4384" fg:w="2"/><text x="90.0493%" y="655.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,385 samples, 89.82%)</title><rect x="0.0615%" y="661" width="89.8197%" height="15" fill="rgb(226,14,10)" fg:x="3" fg:w="4385"/><text x="0.3115%" y="671.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.04%)</title><rect x="89.8402%" y="645" width="0.0410%" height="15" fill="rgb(244,27,41)" fg:x="4386" fg:w="2"/><text x="90.0902%" y="655.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$mach_absolute_time (1 samples, 0.02%)</title><rect x="89.8812%" y="661" width="0.0205%" height="15" fill="rgb(235,35,32)" fg:x="4388" fg:w="1"/><text x="90.1312%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::Script::Compile(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="89.9017%" y="629" width="0.0205%" height="15" fill="rgb(218,68,31)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::Compile(v8::Local (1 samples, 0.02%)</title><rect x="89.9017%" y="613" width="0.0205%" height="15" fill="rgb(207,120,37)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.02%)</title><rect x="89.9017%" y="597" width="0.0205%" height="15" fill="rgb(227,98,0)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="89.9017%" y="581" width="0.0205%" height="15" fill="rgb(207,7,3)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="89.9017%" y="565" width="0.0205%" height="15" fill="rgb(206,98,19)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileScriptOnMainThread(v8::internal::UnoptimizedCompileFlags, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::ScriptDetails const&amp;, v8::internal::NativesFlag, v8::Extension*, v8::internal::Isolate*, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="89.9017%" y="549" width="0.0205%" height="15" fill="rgb(217,5,26)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileToplevel(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="89.9017%" y="533" width="0.0205%" height="15" fill="rgb(235,190,38)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::parsing::ParseProgram(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="89.9017%" y="517" width="0.0205%" height="15" fill="rgb(247,86,24)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseProgram(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="89.9017%" y="501" width="0.0205%" height="15" fill="rgb(205,101,16)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::DoParseProgram (1 samples, 0.02%)</title><rect x="89.9017%" y="485" width="0.0205%" height="15" fill="rgb(246,168,33)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionOrLabelledStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="469" width="0.0205%" height="15" fill="rgb(231,114,1)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="453" width="0.0205%" height="15" fill="rgb(207,184,53)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="437" width="0.0205%" height="15" fill="rgb(224,95,51)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseLogicalExpression (1 samples, 0.02%)</title><rect x="89.9017%" y="421" width="0.0205%" height="15" fill="rgb(212,188,45)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParsePrimaryExpression (1 samples, 0.02%)</title><rect x="89.9017%" y="405" width="0.0205%" height="15" fill="rgb(223,154,38)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="389" width="0.0205%" height="15" fill="rgb(251,22,52)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="373" width="0.0205%" height="15" fill="rgb(229,209,22)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseArrowFunctionLiteral (1 samples, 0.02%)</title><rect x="89.9017%" y="357" width="0.0205%" height="15" fill="rgb(234,138,34)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseFunctionBody(v8::internal::ScopedList&lt;v8::internal::Statement*, void*&gt;*, v8::internal::AstRawString const*, int, v8::internal::ParserFormalParameters const&amp;, v8::internal::FunctionKind, v8::internal::FunctionSyntaxKind, v8::internal::ParserBase (1 samples, 0.02%)</title><rect x="89.9017%" y="341" width="0.0205%" height="15" fill="rgb(212,95,11)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseHoistableDeclaration(int, v8::base::Flags&lt;v8::internal::ParseFunctionFlag, int&gt;, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="325" width="0.0205%" height="15" fill="rgb(240,179,47)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseFunctionLiteral(v8::internal::AstRawString const*, v8::internal::Scanner::Location, v8::internal::FunctionNameValidity, v8::internal::FunctionKind, int, v8::internal::FunctionSyntaxKind, v8::internal::LanguageMode, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="309" width="0.0205%" height="15" fill="rgb(240,163,11)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::SkipFunction (1 samples, 0.02%)</title><rect x="89.9017%" y="293" width="0.0205%" height="15" fill="rgb(236,37,12)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::PreParser::PreParseFunction (1 samples, 0.02%)</title><rect x="89.9017%" y="277" width="0.0205%" height="15" fill="rgb(232,164,16)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::PreParser::ParseStatementListAndLogFunction (1 samples, 0.02%)</title><rect x="89.9017%" y="261" width="0.0205%" height="15" fill="rgb(244,205,15)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseForStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="245" width="0.0205%" height="15" fill="rgb(223,117,47)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseForEachStatementWithDeclarations(int, v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ForInfo*, v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="229" width="0.0205%" height="15" fill="rgb(244,107,35)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="213" width="0.0205%" height="15" fill="rgb(205,140,8)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseBlock(v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="197" width="0.0205%" height="15" fill="rgb(228,84,46)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseIfStatement(v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="181" width="0.0205%" height="15" fill="rgb(254,188,9)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="165" width="0.0205%" height="15" fill="rgb(206,112,54)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseBlock(v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="149" width="0.0205%" height="15" fill="rgb(216,84,49)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseIfStatement(v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="89.9017%" y="133" width="0.0205%" height="15" fill="rgb(214,194,35)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="117" width="0.0205%" height="15" fill="rgb(249,28,3)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="89.9017%" y="101" width="0.0205%" height="15" fill="rgb(222,56,52)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseLogicalExpression (1 samples, 0.02%)</title><rect x="89.9017%" y="85" width="0.0205%" height="15" fill="rgb(245,217,50)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::DoParseMemberExpressionContinuation (1 samples, 0.02%)</title><rect x="89.9017%" y="69" width="0.0205%" height="15" fill="rgb(213,201,24)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParsePropertyOrPrivatePropertyName (1 samples, 0.02%)</title><rect x="89.9017%" y="53" width="0.0205%" height="15" fill="rgb(248,116,28)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="63.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scanner::Next (1 samples, 0.02%)</title><rect x="89.9017%" y="37" width="0.0205%" height="15" fill="rgb(219,72,43)" fg:x="4389" fg:w="1"/><text x="90.1517%" y="47.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (2 samples, 0.04%)</title><rect x="89.9017%" y="645" width="0.0410%" height="15" fill="rgb(209,138,14)" fg:x="4389" fg:w="2"/><text x="90.1517%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="89.9222%" y="629" width="0.0205%" height="15" fill="rgb(222,18,33)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="89.9222%" y="613" width="0.0205%" height="15" fill="rgb(213,199,7)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="89.9222%" y="597" width="0.0205%" height="15" fill="rgb(250,110,10)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="89.9222%" y="581" width="0.0205%" height="15" fill="rgb(248,123,6)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="591.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="89.9222%" y="565" width="0.0205%" height="15" fill="rgb(206,91,31)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="89.9222%" y="549" width="0.0205%" height="15" fill="rgb(211,154,13)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="89.9222%" y="533" width="0.0205%" height="15" fill="rgb(225,148,7)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_ArrayForEach (1 samples, 0.02%)</title><rect x="89.9222%" y="517" width="0.0205%" height="15" fill="rgb(220,160,43)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="527.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="89.9222%" y="501" width="0.0205%" height="15" fill="rgb(213,52,39)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="511.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="89.9222%" y="485" width="0.0205%" height="15" fill="rgb(243,137,7)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="495.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="89.9222%" y="469" width="0.0205%" height="15" fill="rgb(230,79,13)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="89.9222%" y="453" width="0.0205%" height="15" fill="rgb(247,105,23)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="89.9222%" y="437" width="0.0205%" height="15" fill="rgb(223,179,41)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="89.9222%" y="421" width="0.0205%" height="15" fill="rgb(218,9,34)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="431.50"></text></g><g><title>http_bench_json_ops`bool v8::internal::(anonymous namespace)::IterativelyExecuteAndFinalizeUnoptimizedCompilationJobs&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::AccountingAllocator*, v8::internal::IsCompiledScope*, std::__1::vector&lt;v8::internal::FinalizeUnoptimizedCompilationData, std::__1::allocator&lt;v8::internal::FinalizeUnoptimizedCompilationData&gt; &gt;*, std::__1::vector&lt;v8::internal::DeferredFinalizationJobData, std::__1::allocator (1 samples, 0.02%)</title><rect x="89.9222%" y="405" width="0.0205%" height="15" fill="rgb(222,106,8)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::ExecuteSingleUnoptimizedCompilationJob(v8::internal::ParseInfo*, v8::internal::FunctionLiteral*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::AccountingAllocator*, std::__1::vector&lt;v8::internal::FunctionLiteral*, std::__1::allocator (1 samples, 0.02%)</title><rect x="89.9222%" y="389" width="0.0205%" height="15" fill="rgb(211,220,0)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::InterpreterCompilationJob::ExecuteJobImpl (1 samples, 0.02%)</title><rect x="89.9222%" y="373" width="0.0205%" height="15" fill="rgb(229,52,16)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::GenerateBytecode (1 samples, 0.02%)</title><rect x="89.9222%" y="357" width="0.0205%" height="15" fill="rgb(212,155,18)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::GenerateBytecodeBody (1 samples, 0.02%)</title><rect x="89.9222%" y="341" width="0.0205%" height="15" fill="rgb(242,21,14)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="89.9222%" y="325" width="0.0205%" height="15" fill="rgb(222,19,48)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="89.9222%" y="309" width="0.0205%" height="15" fill="rgb(232,45,27)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitForOfStatement (1 samples, 0.02%)</title><rect x="89.9222%" y="293" width="0.0205%" height="15" fill="rgb(249,103,42)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="89.9222%" y="277" width="0.0205%" height="15" fill="rgb(246,81,33)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="89.9222%" y="261" width="0.0205%" height="15" fill="rgb(252,33,42)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="89.9222%" y="245" width="0.0205%" height="15" fill="rgb(209,212,41)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="89.9222%" y="229" width="0.0205%" height="15" fill="rgb(207,154,6)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitIfStatement (1 samples, 0.02%)</title><rect x="89.9222%" y="213" width="0.0205%" height="15" fill="rgb(223,64,47)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="89.9222%" y="197" width="0.0205%" height="15" fill="rgb(211,161,38)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="89.9222%" y="181" width="0.0205%" height="15" fill="rgb(219,138,40)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitIfStatement (1 samples, 0.02%)</title><rect x="89.9222%" y="165" width="0.0205%" height="15" fill="rgb(241,228,46)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlock (1 samples, 0.02%)</title><rect x="89.9222%" y="149" width="0.0205%" height="15" fill="rgb(223,209,38)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitBlockDeclarationsAndStatements (1 samples, 0.02%)</title><rect x="89.9222%" y="133" width="0.0205%" height="15" fill="rgb(236,164,45)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitExpressionStatement (1 samples, 0.02%)</title><rect x="89.9222%" y="117" width="0.0205%" height="15" fill="rgb(231,15,5)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitAssignment (1 samples, 0.02%)</title><rect x="89.9222%" y="101" width="0.0205%" height="15" fill="rgb(252,35,15)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeGenerator::VisitCall (1 samples, 0.02%)</title><rect x="89.9222%" y="85" width="0.0205%" height="15" fill="rgb(248,181,18)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeArrayBuilder::CallProperty (1 samples, 0.02%)</title><rect x="89.9222%" y="69" width="0.0205%" height="15" fill="rgb(233,39,42)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::BytecodeRegisterOptimizer::GetInputRegister (1 samples, 0.02%)</title><rect x="89.9222%" y="53" width="0.0205%" height="15" fill="rgb(238,110,33)" fg:x="4390" fg:w="1"/><text x="90.1722%" y="63.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::new (3 samples, 0.06%)</title><rect x="89.9017%" y="661" width="0.0615%" height="15" fill="rgb(233,195,10)" fg:x="4389" fg:w="3"/><text x="90.1517%" y="671.50"></text></g><g><title>http_bench_json_ops`std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.02%)</title><rect x="89.9426%" y="645" width="0.0205%" height="15" fill="rgb(254,105,3)" fg:x="4391" fg:w="1"/><text x="90.1926%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (1 samples, 0.02%)</title><rect x="89.9426%" y="629" width="0.0205%" height="15" fill="rgb(221,225,9)" fg:x="4391" fg:w="1"/><text x="90.1926%" y="639.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (1 samples, 0.02%)</title><rect x="89.9631%" y="661" width="0.0205%" height="15" fill="rgb(224,227,45)" fg:x="4392" fg:w="1"/><text x="90.2131%" y="671.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="90.1270%" y="645" width="0.0205%" height="15" fill="rgb(229,198,43)" fg:x="4400" fg:w="1"/><text x="90.3770%" y="655.50"></text></g><g><title> 32]&gt; (1 samples, 0.02%)</title><rect x="90.1270%" y="629" width="0.0205%" height="15" fill="rgb(206,209,35)" fg:x="4400" fg:w="1"/><text x="90.3770%" y="639.50"></text></g><g><title>http_bench_json_ops`tokio::process::imp::GlobalOrphanQueue::reap_orphans (1 samples, 0.02%)</title><rect x="90.1475%" y="645" width="0.0205%" height="15" fill="rgb(245,195,53)" fg:x="4401" fg:w="1"/><text x="90.3975%" y="655.50"></text></g><g><title>http_bench_json_ops`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.02%)</title><rect x="91.2741%" y="581" width="0.0205%" height="15" fill="rgb(240,92,26)" fg:x="4456" fg:w="1"/><text x="91.5241%" y="591.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::Driver::turn (126 samples, 2.58%)</title><rect x="90.1680%" y="645" width="2.5809%" height="15" fill="rgb(207,40,23)" fg:x="4402" fg:w="126"/><text x="90.4180%" y="655.50">ht..</text></g><g><title>http_bench_json_ops`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (108 samples, 2.21%)</title><rect x="90.5367%" y="629" width="2.2122%" height="15" fill="rgb(223,111,35)" fg:x="4420" fg:w="108"/><text x="90.7867%" y="639.50">h..</text></g><g><title>http_bench_json_ops`futures_task::waker::wake_arc_raw (82 samples, 1.68%)</title><rect x="91.0692%" y="613" width="1.6796%" height="15" fill="rgb(229,147,28)" fg:x="4446" fg:w="82"/><text x="91.3192%" y="623.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (82 samples, 1.68%)</title><rect x="91.0692%" y="597" width="1.6796%" height="15" fill="rgb(211,29,28)" fg:x="4446" fg:w="82"/><text x="91.3192%" y="607.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::wake_arc_raw (71 samples, 1.45%)</title><rect x="91.2946%" y="581" width="1.4543%" height="15" fill="rgb(228,72,33)" fg:x="4457" fg:w="71"/><text x="91.5446%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent (69 samples, 1.41%)</title><rect x="91.3355%" y="565" width="1.4134%" height="15" fill="rgb(205,214,31)" fg:x="4459" fg:w="69"/><text x="91.5855%" y="575.50"></text></g><g><title>http_bench_json_ops`tokio::signal::unix::driver::Driver::process (2 samples, 0.04%)</title><rect x="92.7489%" y="645" width="0.0410%" height="15" fill="rgb(224,111,15)" fg:x="4528" fg:w="2"/><text x="92.9989%" y="655.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.04%)</title><rect x="92.7489%" y="629" width="0.0410%" height="15" fill="rgb(253,21,26)" fg:x="4528" fg:w="2"/><text x="92.9989%" y="639.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (3 samples, 0.06%)</title><rect x="92.7898%" y="629" width="0.0615%" height="15" fill="rgb(245,139,43)" fg:x="4530" fg:w="3"/><text x="93.0398%" y="639.50"></text></g><g><title> 32]&gt; (3 samples, 0.06%)</title><rect x="92.7898%" y="613" width="0.0615%" height="15" fill="rgb(252,170,7)" fg:x="4530" fg:w="3"/><text x="93.0398%" y="623.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (4 samples, 0.08%)</title><rect x="92.7898%" y="645" width="0.0819%" height="15" fill="rgb(231,118,14)" fg:x="4530" fg:w="4"/><text x="93.0398%" y="655.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.02%)</title><rect x="92.8513%" y="629" width="0.0205%" height="15" fill="rgb(238,83,0)" fg:x="4533" fg:w="1"/><text x="93.1013%" y="639.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (454 samples, 9.30%)</title><rect x="89.9836%" y="661" width="9.2995%" height="15" fill="rgb(221,39,39)" fg:x="4393" fg:w="454"/><text x="90.2336%" y="671.50">http_bench_js..</text></g><g><title>libsystem_kernel.dylib`kevent (313 samples, 6.41%)</title><rect x="92.8718%" y="645" width="6.4113%" height="15" fill="rgb(222,119,46)" fg:x="4534" fg:w="313"/><text x="93.1218%" y="655.50">libsyste..</text></g><g><title>http_bench_json_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (1 samples, 0.02%)</title><rect x="99.2831%" y="661" width="0.0205%" height="15" fill="rgb(222,165,49)" fg:x="4847" fg:w="1"/><text x="99.5331%" y="671.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::main (4,858 samples, 99.51%)</title><rect x="0.0205%" y="677" width="99.5084%" height="15" fill="rgb(219,113,52)" fg:x="1" fg:w="4858"/><text x="0.2705%" y="687.50">http_bench_json_ops`http_bench_json_ops::main</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (11 samples, 0.23%)</title><rect x="99.3036%" y="661" width="0.2253%" height="15" fill="rgb(214,7,15)" fg:x="4848" fg:w="11"/><text x="99.5536%" y="671.50"></text></g><g><title>dyld`start (4,873 samples, 99.82%)</title><rect x="0.0000%" y="725" width="99.8156%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="4873"/><text x="0.2500%" y="735.50">dyld`start</text></g><g><title>http_bench_json_ops`main (4,873 samples, 99.82%)</title><rect x="0.0000%" y="709" width="99.8156%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="4873"/><text x="0.2500%" y="719.50">http_bench_json_ops`main</text></g><g><title>http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (4,873 samples, 99.82%)</title><rect x="0.0000%" y="693" width="99.8156%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="4873"/><text x="0.2500%" y="703.50">http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.29%)</title><rect x="99.5289%" y="677" width="0.2868%" height="15" fill="rgb(233,156,4)" fg:x="4859" fg:w="14"/><text x="99.7789%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.02%)</title><rect x="99.8156%" y="597" width="0.0205%" height="15" fill="rgb(207,194,5)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="607.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::GraphBuilderPhase&gt; (1 samples, 0.02%)</title><rect x="99.8156%" y="581" width="0.0205%" height="15" fill="rgb(206,111,30)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphBuilderPhase::Run (1 samples, 0.02%)</title><rect x="99.8156%" y="565" width="0.0205%" height="15" fill="rgb(243,70,54)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::BuildGraphFromBytecode(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, v8::internal::compiler::NodeOriginTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.02%)</title><rect x="99.8156%" y="549" width="0.0205%" height="15" fill="rgb(242,28,8)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::BytecodeGraphBuilder::BytecodeGraphBuilder(v8::internal::compiler::JSHeapBroker*, v8::internal::Zone*, v8::internal::compiler::NativeContextRef const&amp;, v8::internal::compiler::SharedFunctionInfoRef const&amp;, v8::internal::compiler::FeedbackCellRef const&amp;, v8::internal::BytecodeOffset, v8::internal::compiler::JSGraph*, v8::internal::compiler::CallFrequency const&amp;, v8::internal::compiler::SourcePositionTable*, v8::internal::compiler::NodeOriginTable*, int, v8::internal::CodeKind, v8::base::Flags (1 samples, 0.02%)</title><rect x="99.8156%" y="533" width="0.0205%" height="15" fill="rgb(219,106,18)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::BytecodeAnalysis::BytecodeAnalysis(v8::internal::Handle (1 samples, 0.02%)</title><rect x="99.8156%" y="517" width="0.0205%" height="15" fill="rgb(244,222,10)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::BytecodeAnalysis::Analyze (1 samples, 0.02%)</title><rect x="99.8156%" y="501" width="0.0205%" height="15" fill="rgb(236,179,52)" fg:x="4873" fg:w="1"/><text x="100.0656%" y="511.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::ComputeSchedulePhase&gt; (2 samples, 0.04%)</title><rect x="99.8361%" y="581" width="0.0410%" height="15" fill="rgb(213,23,39)" fg:x="4874" fg:w="2"/><text x="100.0861%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (2 samples, 0.04%)</title><rect x="99.8361%" y="565" width="0.0410%" height="15" fill="rgb(238,48,10)" fg:x="4874" fg:w="2"/><text x="100.0861%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Scheduler::PrepareUses (2 samples, 0.04%)</title><rect x="99.8361%" y="549" width="0.0410%" height="15" fill="rgb(251,196,23)" fg:x="4874" fg:w="2"/><text x="100.0861%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PrepareUsesVisitor::Run (2 samples, 0.04%)</title><rect x="99.8361%" y="533" width="0.0410%" height="15" fill="rgb(250,152,24)" fg:x="4874" fg:w="2"/><text x="100.0861%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PrepareUsesVisitor::VisitInputs (2 samples, 0.04%)</title><rect x="99.8361%" y="517" width="0.0410%" height="15" fill="rgb(209,150,17)" fg:x="4874" fg:w="2"/><text x="100.0861%" y="527.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (1 samples, 0.02%)</title><rect x="99.8771%" y="581" width="0.0205%" height="15" fill="rgb(234,202,34)" fg:x="4876" fg:w="1"/><text x="100.1271%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectControlLinearizationPhase::Run (1 samples, 0.02%)</title><rect x="99.8771%" y="565" width="0.0205%" height="15" fill="rgb(253,148,53)" fg:x="4876" fg:w="1"/><text x="100.1271%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (1 samples, 0.02%)</title><rect x="99.8771%" y="549" width="0.0205%" height="15" fill="rgb(218,129,16)" fg:x="4876" fg:w="1"/><text x="100.1271%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Scheduler::PropagateImmediateDominators (1 samples, 0.02%)</title><rect x="99.8771%" y="533" width="0.0205%" height="15" fill="rgb(216,85,19)" fg:x="4876" fg:w="1"/><text x="100.1271%" y="543.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (2 samples, 0.04%)</title><rect x="99.8976%" y="581" width="0.0410%" height="15" fill="rgb(235,228,7)" fg:x="4877" fg:w="2"/><text x="100.1476%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysisPhase::Run (2 samples, 0.04%)</title><rect x="99.8976%" y="565" width="0.0410%" height="15" fill="rgb(245,175,0)" fg:x="4877" fg:w="2"/><text x="100.1476%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectGraphReducer::ReduceFrom (2 samples, 0.04%)</title><rect x="99.8976%" y="549" width="0.0410%" height="15" fill="rgb(208,168,36)" fg:x="4877" fg:w="2"/><text x="100.1476%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysis::Reduce (1 samples, 0.02%)</title><rect x="99.9181%" y="533" width="0.0205%" height="15" fill="rgb(246,171,24)" fg:x="4878" fg:w="1"/><text x="100.1681%" y="543.50"></text></g><g><title>http_bench_json_ops`void v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::Modify&lt;v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::Set(v8::internal::compiler::Variable, v8::internal::compiler::Node*)::&apos;lambda&apos;(v8::internal::compiler::Node**)&gt;(v8::internal::compiler::Variable, v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::Set(v8::internal::compiler::Variable, v8::internal::compiler::Node*)::&apos;lambda&apos; (1 samples, 0.02%)</title><rect x="99.9181%" y="517" width="0.0205%" height="15" fill="rgb(215,142,24)" fg:x="4878" fg:w="1"/><text x="100.1681%" y="527.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::LoadEliminationPhase&gt; (1 samples, 0.02%)</title><rect x="99.9385%" y="581" width="0.0205%" height="15" fill="rgb(250,187,7)" fg:x="4879" fg:w="1"/><text x="100.1885%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LoadEliminationPhase::Run (1 samples, 0.02%)</title><rect x="99.9385%" y="565" width="0.0205%" height="15" fill="rgb(228,66,33)" fg:x="4879" fg:w="1"/><text x="100.1885%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::BranchElimination::BranchElimination (1 samples, 0.02%)</title><rect x="99.9385%" y="549" width="0.0205%" height="15" fill="rgb(234,215,21)" fg:x="4879" fg:w="1"/><text x="100.1885%" y="559.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase, v8::internal::compiler::Linkage*&amp;&gt; (1 samples, 0.02%)</title><rect x="99.9590%" y="581" width="0.0205%" height="15" fill="rgb(222,191,20)" fg:x="4880" fg:w="1"/><text x="100.2090%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLoweringPhase::Run (1 samples, 0.02%)</title><rect x="99.9590%" y="565" width="0.0205%" height="15" fill="rgb(245,79,54)" fg:x="4880" fg:w="1"/><text x="100.2090%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLowering::LowerAllNodes (1 samples, 0.02%)</title><rect x="99.9590%" y="549" width="0.0205%" height="15" fill="rgb(240,10,37)" fg:x="4880" fg:w="1"/><text x="100.2090%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::RepresentationSelector::RunLowerPhase (1 samples, 0.02%)</title><rect x="99.9590%" y="533" width="0.0205%" height="15" fill="rgb(214,192,32)" fg:x="4880" fg:w="1"/><text x="100.2090%" y="543.50"></text></g><g><title>http_bench_json_ops`void v8::internal::compiler::RepresentationSelector::VisitNode&lt;(v8::internal::compiler::Phase)2&gt; (1 samples, 0.02%)</title><rect x="99.9590%" y="517" width="0.0205%" height="15" fill="rgb(209,36,54)" fg:x="4880" fg:w="1"/><text x="100.2090%" y="527.50"></text></g><g><title>all (4,882 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(220,10,11)" fg:x="0" fg:w="4882"/><text x="0.2500%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (9 samples, 0.18%)</title><rect x="99.8156%" y="725" width="0.1844%" height="15" fill="rgb(221,106,17)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (9 samples, 0.18%)</title><rect x="99.8156%" y="709" width="0.1844%" height="15" fill="rgb(251,142,44)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::base::ThreadEntry (9 samples, 0.18%)</title><rect x="99.8156%" y="693" width="0.1844%" height="15" fill="rgb(238,13,15)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (9 samples, 0.18%)</title><rect x="99.8156%" y="677" width="0.1844%" height="15" fill="rgb(208,107,27)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (9 samples, 0.18%)</title><rect x="99.8156%" y="661" width="0.1844%" height="15" fill="rgb(205,136,37)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (9 samples, 0.18%)</title><rect x="99.8156%" y="645" width="0.1844%" height="15" fill="rgb(250,205,27)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (9 samples, 0.18%)</title><rect x="99.8156%" y="629" width="0.1844%" height="15" fill="rgb(210,80,43)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (9 samples, 0.18%)</title><rect x="99.8156%" y="613" width="0.1844%" height="15" fill="rgb(247,160,36)" fg:x="4873" fg:w="9"/><text x="100.0656%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (8 samples, 0.16%)</title><rect x="99.8361%" y="597" width="0.1639%" height="15" fill="rgb(234,13,49)" fg:x="4874" fg:w="8"/><text x="100.0861%" y="607.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::StoreStoreEliminationPhase&gt; (1 samples, 0.02%)</title><rect x="99.9795%" y="581" width="0.0205%" height="15" fill="rgb(234,122,0)" fg:x="4881" fg:w="1"/><text x="100.2295%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::StoreStoreEliminationPhase::Run (1 samples, 0.02%)</title><rect x="99.9795%" y="565" width="0.0205%" height="15" fill="rgb(207,146,38)" fg:x="4881" fg:w="1"/><text x="100.2295%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::StoreStoreElimination::Run (1 samples, 0.02%)</title><rect x="99.9795%" y="549" width="0.0205%" height="15" fill="rgb(207,177,25)" fg:x="4881" fg:w="1"/><text x="100.2295%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::(anonymous namespace)::RedundantStoreFinder::VisitEffectfulNode (1 samples, 0.02%)</title><rect x="99.9795%" y="533" width="0.0205%" height="15" fill="rgb(211,178,42)" fg:x="4881" fg:w="1"/><text x="100.2295%" y="543.50"></text></g></svg></svg>