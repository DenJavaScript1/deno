<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="437.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="10195"><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="0.2158%" y="325" width="0.0392%" height="15" fill="rgb(227,0,7)" fg:x="22" fg:w="4"/><text x="0.4658%" y="335.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="0.2550%" y="325" width="0.0196%" height="15" fill="rgb(217,0,24)" fg:x="26" fg:w="2"/><text x="0.5050%" y="335.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::func_op_read::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2845%" y="325" width="0.0196%" height="15" fill="rgb(221,193,54)" fg:x="29" fg:w="2"/><text x="0.5345%" y="335.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (2 samples, 0.02%)</title><rect x="0.3041%" y="325" width="0.0196%" height="15" fill="rgb(248,212,6)" fg:x="31" fg:w="2"/><text x="0.5541%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (2 samples, 0.02%)</title><rect x="0.3335%" y="325" width="0.0196%" height="15" fill="rgb(208,68,35)" fg:x="34" fg:w="2"/><text x="0.5835%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (2 samples, 0.02%)</title><rect x="0.3335%" y="309" width="0.0196%" height="15" fill="rgb(232,128,0)" fg:x="34" fg:w="2"/><text x="0.5835%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (2 samples, 0.02%)</title><rect x="0.3335%" y="293" width="0.0196%" height="15" fill="rgb(207,160,47)" fg:x="34" fg:w="2"/><text x="0.5835%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.02%)</title><rect x="0.3335%" y="277" width="0.0196%" height="15" fill="rgb(228,23,34)" fg:x="34" fg:w="2"/><text x="0.5835%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (2 samples, 0.02%)</title><rect x="0.3335%" y="261" width="0.0196%" height="15" fill="rgb(218,30,26)" fg:x="34" fg:w="2"/><text x="0.5835%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (2 samples, 0.02%)</title><rect x="0.3335%" y="245" width="0.0196%" height="15" fill="rgb(220,122,19)" fg:x="34" fg:w="2"/><text x="0.5835%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="0.3335%" y="229" width="0.0196%" height="15" fill="rgb(250,228,42)" fg:x="34" fg:w="2"/><text x="0.5835%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="0.3335%" y="213" width="0.0196%" height="15" fill="rgb(240,193,28)" fg:x="34" fg:w="2"/><text x="0.5835%" y="223.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (2 samples, 0.02%)</title><rect x="0.3629%" y="325" width="0.0196%" height="15" fill="rgb(216,20,37)" fg:x="37" fg:w="2"/><text x="0.6129%" y="335.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (2 samples, 0.02%)</title><rect x="0.3825%" y="325" width="0.0196%" height="15" fill="rgb(206,188,39)" fg:x="39" fg:w="2"/><text x="0.6325%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::Script::Compile(v8::Local&lt;v8::Context&gt;, v8::Local (2 samples, 0.02%)</title><rect x="0.4022%" y="293" width="0.0196%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="2"/><text x="0.6522%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::Compile(v8::Local (2 samples, 0.02%)</title><rect x="0.4022%" y="277" width="0.0196%" height="15" fill="rgb(231,73,38)" fg:x="41" fg:w="2"/><text x="0.6522%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::CompileUnboundInternal (2 samples, 0.02%)</title><rect x="0.4022%" y="261" width="0.0196%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="2"/><text x="0.6522%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="0.4022%" y="245" width="0.0196%" height="15" fill="rgb(210,31,41)" fg:x="41" fg:w="2"/><text x="0.6522%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="0.4022%" y="229" width="0.0196%" height="15" fill="rgb(221,200,47)" fg:x="41" fg:w="2"/><text x="0.6522%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileScriptOnMainThread(v8::internal::UnoptimizedCompileFlags, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::ScriptDetails const&amp;, v8::internal::NativesFlag, v8::Extension*, v8::internal::Isolate*, v8::internal::MaybeHandle (2 samples, 0.02%)</title><rect x="0.4022%" y="213" width="0.0196%" height="15" fill="rgb(226,26,5)" fg:x="41" fg:w="2"/><text x="0.6522%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileToplevel(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (2 samples, 0.02%)</title><rect x="0.4022%" y="197" width="0.0196%" height="15" fill="rgb(249,33,26)" fg:x="41" fg:w="2"/><text x="0.6522%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::parsing::ParseProgram(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (2 samples, 0.02%)</title><rect x="0.4022%" y="181" width="0.0196%" height="15" fill="rgb(235,183,28)" fg:x="41" fg:w="2"/><text x="0.6522%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseProgram(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::MaybeHandle (2 samples, 0.02%)</title><rect x="0.4022%" y="165" width="0.0196%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="2"/><text x="0.6522%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_ArrayForEach (3 samples, 0.03%)</title><rect x="0.4218%" y="181" width="0.0294%" height="15" fill="rgb(247,18,42)" fg:x="43" fg:w="3"/><text x="0.6718%" y="191.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (3 samples, 0.03%)</title><rect x="0.4218%" y="165" width="0.0294%" height="15" fill="rgb(241,131,45)" fg:x="43" fg:w="3"/><text x="0.6718%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="0.4316%" y="149" width="0.0196%" height="15" fill="rgb(249,31,29)" fg:x="44" fg:w="2"/><text x="0.6816%" y="159.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (6 samples, 0.06%)</title><rect x="0.4022%" y="309" width="0.0589%" height="15" fill="rgb(225,111,53)" fg:x="41" fg:w="6"/><text x="0.6522%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (4 samples, 0.04%)</title><rect x="0.4218%" y="293" width="0.0392%" height="15" fill="rgb(238,160,17)" fg:x="43" fg:w="4"/><text x="0.6718%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="0.4218%" y="277" width="0.0392%" height="15" fill="rgb(214,148,48)" fg:x="43" fg:w="4"/><text x="0.6718%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (4 samples, 0.04%)</title><rect x="0.4218%" y="261" width="0.0392%" height="15" fill="rgb(232,36,49)" fg:x="43" fg:w="4"/><text x="0.6718%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (4 samples, 0.04%)</title><rect x="0.4218%" y="245" width="0.0392%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="4"/><text x="0.6718%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (4 samples, 0.04%)</title><rect x="0.4218%" y="229" width="0.0392%" height="15" fill="rgb(229,88,8)" fg:x="43" fg:w="4"/><text x="0.6718%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (4 samples, 0.04%)</title><rect x="0.4218%" y="213" width="0.0392%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="4"/><text x="0.6718%" y="223.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (4 samples, 0.04%)</title><rect x="0.4218%" y="197" width="0.0392%" height="15" fill="rgb(254,191,54)" fg:x="43" fg:w="4"/><text x="0.6718%" y="207.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::new (10 samples, 0.10%)</title><rect x="0.4022%" y="325" width="0.0981%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="10"/><text x="0.6522%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::New (2 samples, 0.02%)</title><rect x="0.4806%" y="309" width="0.0196%" height="15" fill="rgb(233,36,39)" fg:x="49" fg:w="2"/><text x="0.7306%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::Initialize (2 samples, 0.02%)</title><rect x="0.4806%" y="293" width="0.0196%" height="15" fill="rgb(226,3,54)" fg:x="49" fg:w="2"/><text x="0.7306%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Snapshot::Initialize (2 samples, 0.02%)</title><rect x="0.4806%" y="277" width="0.0196%" height="15" fill="rgb(245,192,40)" fg:x="49" fg:w="2"/><text x="0.7306%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::InitWithSnapshot (2 samples, 0.02%)</title><rect x="0.4806%" y="261" width="0.0196%" height="15" fill="rgb(238,167,29)" fg:x="49" fg:w="2"/><text x="0.7306%" y="271.50"></text></g><g><title>http_bench_json_ops`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.02%)</title><rect x="3.2075%" y="261" width="0.0196%" height="15" fill="rgb(232,182,51)" fg:x="327" fg:w="2"/><text x="3.4575%" y="271.50"></text></g><g><title>http_bench_json_ops`OUTLINED_FUNCTION_222 (3 samples, 0.03%)</title><rect x="3.7862%" y="229" width="0.0294%" height="15" fill="rgb(231,60,39)" fg:x="386" fg:w="3"/><text x="4.0362%" y="239.50"></text></g><g><title>http_bench_json_ops`polloi::Runtime::can (23 samples, 0.23%)</title><rect x="3.6292%" y="245" width="0.2256%" height="15" fill="rgb(208,69,12)" fg:x="370" fg:w="23"/><text x="3.8792%" y="255.50"></text></g><g><title>http_bench_json_ops`polloi::get_or_new (4 samples, 0.04%)</title><rect x="3.8156%" y="229" width="0.0392%" height="15" fill="rgb(235,93,37)" fg:x="389" fg:w="4"/><text x="4.0656%" y="239.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.65%)</title><rect x="3.2271%" y="261" width="0.6474%" height="15" fill="rgb(213,116,39)" fg:x="329" fg:w="66"/><text x="3.4771%" y="271.50"></text></g><g><title>http_bench_json_ops`polloi::get_or_new (2 samples, 0.02%)</title><rect x="3.8548%" y="245" width="0.0196%" height="15" fill="rgb(222,207,29)" fg:x="393" fg:w="2"/><text x="4.1048%" y="255.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.06%)</title><rect x="3.8744%" y="261" width="0.0589%" height="15" fill="rgb(206,96,30)" fg:x="395" fg:w="6"/><text x="4.1244%" y="271.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$recv (3 samples, 0.03%)</title><rect x="3.9333%" y="261" width="0.0294%" height="15" fill="rgb(218,138,4)" fg:x="401" fg:w="3"/><text x="4.1833%" y="271.50"></text></g><g><title>http_bench_json_ops`OUTLINED_FUNCTION_31 (6 samples, 0.06%)</title><rect x="3.9627%" y="261" width="0.0589%" height="15" fill="rgb(250,191,14)" fg:x="404" fg:w="6"/><text x="4.2127%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (2 samples, 0.02%)</title><rect x="4.0216%" y="261" width="0.0196%" height="15" fill="rgb(239,60,40)" fg:x="410" fg:w="2"/><text x="4.2716%" y="271.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,975 samples, 38.99%)</title><rect x="2.8936%" y="277" width="38.9897%" height="15" fill="rgb(206,27,48)" fg:x="295" fg:w="3975"/><text x="3.1436%" y="287.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (3,857 samples, 37.83%)</title><rect x="4.0510%" y="261" width="37.8323%" height="15" fill="rgb(225,35,8)" fg:x="413" fg:w="3857"/><text x="4.3010%" y="271.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.14%)</title><rect x="42.0500%" y="229" width="0.1373%" height="15" fill="rgb(250,213,24)" fg:x="4287" fg:w="14"/><text x="42.3000%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.07%)</title><rect x="42.1187%" y="213" width="0.0687%" height="15" fill="rgb(247,123,22)" fg:x="4294" fg:w="7"/><text x="42.3687%" y="223.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (32 samples, 0.31%)</title><rect x="41.8833%" y="277" width="0.3139%" height="15" fill="rgb(231,138,38)" fg:x="4270" fg:w="32"/><text x="42.1333%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.21%)</title><rect x="41.9912%" y="261" width="0.2060%" height="15" fill="rgb(231,145,46)" fg:x="4281" fg:w="21"/><text x="42.2412%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.16%)</title><rect x="42.0402%" y="245" width="0.1569%" height="15" fill="rgb(251,118,11)" fg:x="4286" fg:w="16"/><text x="42.2902%" y="255.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="42.1972%" y="277" width="0.0196%" height="15" fill="rgb(217,147,25)" fg:x="4302" fg:w="2"/><text x="42.4472%" y="287.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$malloc (2 samples, 0.02%)</title><rect x="42.2168%" y="277" width="0.0196%" height="15" fill="rgb(247,81,37)" fg:x="4304" fg:w="2"/><text x="42.4668%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.19%)</title><rect x="42.2364%" y="277" width="0.1864%" height="15" fill="rgb(209,12,38)" fg:x="4306" fg:w="19"/><text x="42.4864%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.08%)</title><rect x="42.3443%" y="261" width="0.0785%" height="15" fill="rgb(227,1,9)" fg:x="4317" fg:w="8"/><text x="42.5943%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.02%)</title><rect x="42.4228%" y="277" width="0.0196%" height="15" fill="rgb(248,47,43)" fg:x="4325" fg:w="2"/><text x="42.6728%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.04%)</title><rect x="42.4424%" y="277" width="0.0392%" height="15" fill="rgb(221,10,30)" fg:x="4327" fg:w="4"/><text x="42.6924%" y="287.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,118 samples, 40.39%)</title><rect x="2.1285%" y="293" width="40.3923%" height="15" fill="rgb(210,229,1)" fg:x="217" fg:w="4118"/><text x="2.3785%" y="303.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.04%)</title><rect x="42.4816%" y="277" width="0.0392%" height="15" fill="rgb(222,148,37)" fg:x="4331" fg:w="4"/><text x="42.7316%" y="287.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (4 samples, 0.04%)</title><rect x="42.5208%" y="293" width="0.0392%" height="15" fill="rgb(234,67,33)" fg:x="4335" fg:w="4"/><text x="42.7708%" y="303.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (3 samples, 0.03%)</title><rect x="42.5601%" y="293" width="0.0294%" height="15" fill="rgb(247,98,35)" fg:x="4339" fg:w="3"/><text x="42.8101%" y="303.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::op_read::call::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="42.5895%" y="293" width="0.0196%" height="15" fill="rgb(247,138,52)" fg:x="4342" fg:w="2"/><text x="42.8395%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="42.6091%" y="293" width="0.0196%" height="15" fill="rgb(213,79,30)" fg:x="4344" fg:w="2"/><text x="42.8591%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="42.6287%" y="293" width="0.0196%" height="15" fill="rgb(246,177,23)" fg:x="4346" fg:w="2"/><text x="42.8787%" y="303.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,151 samples, 40.72%)</title><rect x="1.9617%" y="309" width="40.7160%" height="15" fill="rgb(230,62,27)" fg:x="200" fg:w="4151"/><text x="2.2117%" y="319.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.03%)</title><rect x="42.6484%" y="293" width="0.0294%" height="15" fill="rgb(216,154,8)" fg:x="4348" fg:w="3"/><text x="42.8984%" y="303.50"></text></g><g><title>http_bench_json_ops`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="42.6778%" y="309" width="0.0883%" height="15" fill="rgb(244,35,45)" fg:x="4351" fg:w="9"/><text x="42.9278%" y="319.50"></text></g><g><title>http_bench_json_ops`core::hash::BuildHasher::hash_one (7 samples, 0.07%)</title><rect x="42.7661%" y="309" width="0.0687%" height="15" fill="rgb(251,115,12)" fg:x="4360" fg:w="7"/><text x="43.0161%" y="319.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (3 samples, 0.03%)</title><rect x="42.8543%" y="309" width="0.0294%" height="15" fill="rgb(240,54,50)" fg:x="4369" fg:w="3"/><text x="43.1043%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (3 samples, 0.03%)</title><rect x="42.9622%" y="293" width="0.0294%" height="15" fill="rgb(233,84,52)" fg:x="4380" fg:w="3"/><text x="43.2122%" y="303.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (12 samples, 0.12%)</title><rect x="42.8838%" y="309" width="0.1177%" height="15" fill="rgb(207,117,47)" fg:x="4372" fg:w="12"/><text x="43.1338%" y="319.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::poll_sessions (28 samples, 0.27%)</title><rect x="43.0113%" y="309" width="0.2746%" height="15" fill="rgb(249,43,39)" fg:x="4385" fg:w="28"/><text x="43.2613%" y="319.50"></text></g><g><title>http_bench_json_ops`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (2 samples, 0.02%)</title><rect x="43.2663%" y="293" width="0.0196%" height="15" fill="rgb(209,38,44)" fg:x="4411" fg:w="2"/><text x="43.5163%" y="303.50"></text></g><g><title>http_bench_json_ops`deno_core::ops::OpResult::to_v8 (8 samples, 0.08%)</title><rect x="43.2859%" y="309" width="0.0785%" height="15" fill="rgb(236,212,23)" fg:x="4413" fg:w="8"/><text x="43.5359%" y="319.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (4 samples, 0.04%)</title><rect x="43.3644%" y="309" width="0.0392%" height="15" fill="rgb(242,79,21)" fg:x="4421" fg:w="4"/><text x="43.6144%" y="319.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::evaluate_pending_module (2 samples, 0.02%)</title><rect x="43.4134%" y="309" width="0.0196%" height="15" fill="rgb(211,96,35)" fg:x="4426" fg:w="2"/><text x="43.6634%" y="319.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_mutex_lock (2 samples, 0.02%)</title><rect x="43.4919%" y="293" width="0.0196%" height="15" fill="rgb(253,215,40)" fg:x="4434" fg:w="2"/><text x="43.7419%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="43.5213%" y="277" width="0.0392%" height="15" fill="rgb(211,81,21)" fg:x="4437" fg:w="4"/><text x="43.7713%" y="287.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (15 samples, 0.15%)</title><rect x="43.4331%" y="309" width="0.1471%" height="15" fill="rgb(208,190,38)" fg:x="4428" fg:w="15"/><text x="43.6831%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::WasmEngine::HasRunningCompileJob (6 samples, 0.06%)</title><rect x="43.5213%" y="293" width="0.0589%" height="15" fill="rgb(235,213,38)" fg:x="4437" fg:w="6"/><text x="43.7713%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="43.5606%" y="277" width="0.0196%" height="15" fill="rgb(237,122,38)" fg:x="4441" fg:w="2"/><text x="43.8106%" y="287.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (2 samples, 0.02%)</title><rect x="43.7469%" y="277" width="0.0196%" height="15" fill="rgb(244,218,35)" fg:x="4460" fg:w="2"/><text x="43.9969%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (15 samples, 0.15%)</title><rect x="43.7666%" y="277" width="0.1471%" height="15" fill="rgb(240,68,47)" fg:x="4462" fg:w="15"/><text x="44.0166%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (4 samples, 0.04%)</title><rect x="43.8744%" y="261" width="0.0392%" height="15" fill="rgb(210,16,53)" fg:x="4473" fg:w="4"/><text x="44.1244%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (9 samples, 0.09%)</title><rect x="43.9137%" y="277" width="0.0883%" height="15" fill="rgb(235,124,12)" fg:x="4477" fg:w="9"/><text x="44.1637%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (7 samples, 0.07%)</title><rect x="43.9333%" y="261" width="0.0687%" height="15" fill="rgb(224,169,11)" fg:x="4479" fg:w="7"/><text x="44.1833%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (6 samples, 0.06%)</title><rect x="44.0020%" y="277" width="0.0589%" height="15" fill="rgb(250,166,2)" fg:x="4486" fg:w="6"/><text x="44.2520%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (5 samples, 0.05%)</title><rect x="44.0608%" y="277" width="0.0490%" height="15" fill="rgb(242,216,29)" fg:x="4492" fg:w="5"/><text x="44.3108%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (3 samples, 0.03%)</title><rect x="44.1099%" y="277" width="0.0294%" height="15" fill="rgb(230,116,27)" fg:x="4497" fg:w="3"/><text x="44.3599%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (5 samples, 0.05%)</title><rect x="44.2570%" y="245" width="0.0490%" height="15" fill="rgb(228,99,48)" fg:x="4512" fg:w="5"/><text x="44.5070%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (19 samples, 0.19%)</title><rect x="44.3060%" y="245" width="0.1864%" height="15" fill="rgb(253,11,6)" fg:x="4517" fg:w="19"/><text x="44.5560%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (8 samples, 0.08%)</title><rect x="44.4139%" y="229" width="0.0785%" height="15" fill="rgb(247,143,39)" fg:x="4528" fg:w="8"/><text x="44.6639%" y="239.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (33 samples, 0.32%)</title><rect x="44.1883%" y="261" width="0.3237%" height="15" fill="rgb(236,97,10)" fg:x="4505" fg:w="33"/><text x="44.4383%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (2 samples, 0.02%)</title><rect x="44.4924%" y="245" width="0.0196%" height="15" fill="rgb(233,208,19)" fg:x="4536" fg:w="2"/><text x="44.7424%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (7 samples, 0.07%)</title><rect x="44.5120%" y="261" width="0.0687%" height="15" fill="rgb(216,164,2)" fg:x="4538" fg:w="7"/><text x="44.7620%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (2 samples, 0.02%)</title><rect x="44.5807%" y="261" width="0.0196%" height="15" fill="rgb(220,129,5)" fg:x="4545" fg:w="2"/><text x="44.8307%" y="271.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (101 samples, 0.99%)</title><rect x="43.6194%" y="293" width="0.9907%" height="15" fill="rgb(242,17,10)" fg:x="4447" fg:w="101"/><text x="43.8694%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::scope::data::ScopeData::try_exit_scope (48 samples, 0.47%)</title><rect x="44.1393%" y="277" width="0.4708%" height="15" fill="rgb(242,107,0)" fg:x="4500" fg:w="48"/><text x="44.3893%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (11 samples, 0.11%)</title><rect x="44.6886%" y="277" width="0.1079%" height="15" fill="rgb(251,28,31)" fg:x="4556" fg:w="11"/><text x="44.9386%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::MoveGlobal (6 samples, 0.06%)</title><rect x="44.7965%" y="277" width="0.0589%" height="15" fill="rgb(233,223,10)" fg:x="4567" fg:w="6"/><text x="45.0465%" y="287.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (53 samples, 0.52%)</title><rect x="44.6101%" y="293" width="0.5199%" height="15" fill="rgb(215,21,27)" fg:x="4548" fg:w="53"/><text x="44.8601%" y="303.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (28 samples, 0.27%)</title><rect x="44.8553%" y="277" width="0.2746%" height="15" fill="rgb(232,23,21)" fg:x="4573" fg:w="28"/><text x="45.1053%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (22 samples, 0.22%)</title><rect x="44.9142%" y="261" width="0.2158%" height="15" fill="rgb(244,5,23)" fg:x="4579" fg:w="22"/><text x="45.1642%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (8 samples, 0.08%)</title><rect x="45.1300%" y="293" width="0.0785%" height="15" fill="rgb(226,81,46)" fg:x="4601" fg:w="8"/><text x="45.3800%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (2 samples, 0.02%)</title><rect x="45.2182%" y="293" width="0.0196%" height="15" fill="rgb(247,70,30)" fg:x="4610" fg:w="2"/><text x="45.4682%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (8 samples, 0.08%)</title><rect x="45.2379%" y="293" width="0.0785%" height="15" fill="rgb(212,68,19)" fg:x="4612" fg:w="8"/><text x="45.4879%" y="303.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (178 samples, 1.75%)</title><rect x="43.5900%" y="309" width="1.7460%" height="15" fill="rgb(240,187,13)" fg:x="4444" fg:w="178"/><text x="43.8400%" y="319.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::drop_arc_raw (2 samples, 0.02%)</title><rect x="45.3458%" y="309" width="0.0196%" height="15" fill="rgb(223,113,26)" fg:x="4623" fg:w="2"/><text x="45.5958%" y="319.50"></text></g><g><title>http_bench_json_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.07%)</title><rect x="45.3948%" y="293" width="0.0687%" height="15" fill="rgb(206,192,2)" fg:x="4628" fg:w="7"/><text x="45.6448%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.21%)</title><rect x="45.4635%" y="293" width="0.2060%" height="15" fill="rgb(241,108,4)" fg:x="4635" fg:w="21"/><text x="45.7135%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.11%)</title><rect x="45.5615%" y="277" width="0.1079%" height="15" fill="rgb(247,173,49)" fg:x="4645" fg:w="11"/><text x="45.8115%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.07%)</title><rect x="45.6793%" y="293" width="0.0687%" height="15" fill="rgb(224,114,35)" fg:x="4657" fg:w="7"/><text x="45.9293%" y="303.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (41 samples, 0.40%)</title><rect x="45.3654%" y="309" width="0.4022%" height="15" fill="rgb(245,159,27)" fg:x="4625" fg:w="41"/><text x="45.6154%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.02%)</title><rect x="45.7479%" y="293" width="0.0196%" height="15" fill="rgb(245,172,44)" fg:x="4664" fg:w="2"/><text x="45.9979%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (5 samples, 0.05%)</title><rect x="45.7773%" y="309" width="0.0490%" height="15" fill="rgb(236,23,11)" fg:x="4667" fg:w="5"/><text x="46.0273%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (4 samples, 0.04%)</title><rect x="45.8264%" y="309" width="0.0392%" height="15" fill="rgb(205,117,38)" fg:x="4672" fg:w="4"/><text x="46.0764%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (11 samples, 0.11%)</title><rect x="46.0814%" y="293" width="0.1079%" height="15" fill="rgb(237,72,25)" fg:x="4698" fg:w="11"/><text x="46.3314%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (5 samples, 0.05%)</title><rect x="46.1403%" y="277" width="0.0490%" height="15" fill="rgb(244,70,9)" fg:x="4704" fg:w="5"/><text x="46.3903%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (2 samples, 0.02%)</title><rect x="46.1893%" y="293" width="0.0196%" height="15" fill="rgb(217,125,39)" fg:x="4709" fg:w="2"/><text x="46.4393%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (3 samples, 0.03%)</title><rect x="46.2089%" y="293" width="0.0294%" height="15" fill="rgb(235,36,10)" fg:x="4711" fg:w="3"/><text x="46.4589%" y="303.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (7 samples, 0.07%)</title><rect x="46.2580%" y="277" width="0.0687%" height="15" fill="rgb(251,123,47)" fg:x="4716" fg:w="7"/><text x="46.5080%" y="287.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsAny (15 samples, 0.15%)</title><rect x="46.8563%" y="245" width="0.1471%" height="15" fill="rgb(221,13,13)" fg:x="4777" fg:w="15"/><text x="47.1063%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsAny (2 samples, 0.02%)</title><rect x="47.0034%" y="245" width="0.0196%" height="15" fill="rgb(238,131,9)" fg:x="4792" fg:w="2"/><text x="47.2534%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (12 samples, 0.12%)</title><rect x="47.0231%" y="245" width="0.1177%" height="15" fill="rgb(211,50,8)" fg:x="4794" fg:w="12"/><text x="47.2731%" y="255.50"></text></g><g><title>http_bench_json_ops`Builtins_EnqueueMicrotask (5 samples, 0.05%)</title><rect x="47.4546%" y="181" width="0.0490%" height="15" fill="rgb(245,182,24)" fg:x="4838" fg:w="5"/><text x="47.7046%" y="191.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (38 samples, 0.37%)</title><rect x="47.2879%" y="213" width="0.3727%" height="15" fill="rgb(242,14,37)" fg:x="4821" fg:w="38"/><text x="47.5379%" y="223.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (31 samples, 0.30%)</title><rect x="47.3565%" y="197" width="0.3041%" height="15" fill="rgb(246,228,12)" fg:x="4828" fg:w="31"/><text x="47.6065%" y="207.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (16 samples, 0.16%)</title><rect x="47.5037%" y="181" width="0.1569%" height="15" fill="rgb(213,55,15)" fg:x="4843" fg:w="16"/><text x="47.7537%" y="191.50"></text></g><g><title>0x11000e5a8 (41 samples, 0.40%)</title><rect x="47.2683%" y="229" width="0.4022%" height="15" fill="rgb(209,9,3)" fg:x="4819" fg:w="41"/><text x="47.5183%" y="239.50"></text></g><g><title>0x11000e5b0 (2 samples, 0.02%)</title><rect x="47.6704%" y="229" width="0.0196%" height="15" fill="rgb(230,59,30)" fg:x="4860" fg:w="2"/><text x="47.9204%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (3 samples, 0.03%)</title><rect x="47.6900%" y="229" width="0.0294%" height="15" fill="rgb(209,121,21)" fg:x="4862" fg:w="3"/><text x="47.9400%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNullOrUndefined (2 samples, 0.02%)</title><rect x="47.7195%" y="229" width="0.0196%" height="15" fill="rgb(220,109,13)" fg:x="4865" fg:w="2"/><text x="47.9695%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (100 samples, 0.98%)</title><rect x="46.7778%" y="261" width="0.9809%" height="15" fill="rgb(232,18,1)" fg:x="4769" fg:w="100"/><text x="47.0278%" y="271.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (63 samples, 0.62%)</title><rect x="47.1408%" y="245" width="0.6179%" height="15" fill="rgb(215,41,42)" fg:x="4806" fg:w="63"/><text x="47.3908%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (149 samples, 1.46%)</title><rect x="46.3266%" y="277" width="1.4615%" height="15" fill="rgb(224,123,36)" fg:x="4723" fg:w="149"/><text x="46.5766%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (3 samples, 0.03%)</title><rect x="47.7587%" y="261" width="0.0294%" height="15" fill="rgb(240,125,3)" fg:x="4869" fg:w="3"/><text x="48.0087%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtins::code_handle (4 samples, 0.04%)</title><rect x="47.7979%" y="277" width="0.0392%" height="15" fill="rgb(205,98,50)" fg:x="4873" fg:w="4"/><text x="48.0479%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (3 samples, 0.03%)</title><rect x="47.8470%" y="277" width="0.0294%" height="15" fill="rgb(205,185,37)" fg:x="4878" fg:w="3"/><text x="48.0970%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScopeInfo::is_script_scope (2 samples, 0.02%)</title><rect x="47.8764%" y="277" width="0.0196%" height="15" fill="rgb(238,207,15)" fg:x="4881" fg:w="2"/><text x="48.1264%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (171 samples, 1.68%)</title><rect x="46.2384%" y="293" width="1.6773%" height="15" fill="rgb(213,199,42)" fg:x="4714" fg:w="171"/><text x="46.4884%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::ThrowOnJavascriptExecution::IsAllowed (2 samples, 0.02%)</title><rect x="47.8960%" y="277" width="0.0196%" height="15" fill="rgb(235,201,11)" fg:x="4883" fg:w="2"/><text x="48.1460%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.02%)</title><rect x="47.9156%" y="293" width="0.0196%" height="15" fill="rgb(207,46,11)" fg:x="4885" fg:w="2"/><text x="48.1656%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::ClearKeptObjects (3 samples, 0.03%)</title><rect x="47.9745%" y="277" width="0.0294%" height="15" fill="rgb(241,35,35)" fg:x="4891" fg:w="3"/><text x="48.2245%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::SuppressMicrotaskExecutionScope::SuppressMicrotaskExecutionScope (2 samples, 0.02%)</title><rect x="48.0235%" y="261" width="0.0196%" height="15" fill="rgb(243,32,47)" fg:x="4896" fg:w="2"/><text x="48.2735%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (2 samples, 0.02%)</title><rect x="48.0432%" y="261" width="0.0196%" height="15" fill="rgb(247,202,23)" fg:x="4898" fg:w="2"/><text x="48.2932%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::SetVerbose (2 samples, 0.02%)</title><rect x="48.2884%" y="229" width="0.0196%" height="15" fill="rgb(219,102,11)" fg:x="4923" fg:w="2"/><text x="48.5384%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (3 samples, 0.03%)</title><rect x="48.3178%" y="229" width="0.0294%" height="15" fill="rgb(243,110,44)" fg:x="4926" fg:w="3"/><text x="48.5678%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (3 samples, 0.03%)</title><rect x="48.3472%" y="229" width="0.0294%" height="15" fill="rgb(222,74,54)" fg:x="4929" fg:w="3"/><text x="48.5972%" y="239.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (7 samples, 0.07%)</title><rect x="48.4159%" y="213" width="0.0687%" height="15" fill="rgb(216,99,12)" fg:x="4936" fg:w="7"/><text x="48.6659%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (5 samples, 0.05%)</title><rect x="48.4846%" y="213" width="0.0490%" height="15" fill="rgb(226,22,26)" fg:x="4943" fg:w="5"/><text x="48.7346%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (6 samples, 0.06%)</title><rect x="48.5336%" y="213" width="0.0589%" height="15" fill="rgb(217,163,10)" fg:x="4948" fg:w="6"/><text x="48.7836%" y="223.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (3 samples, 0.03%)</title><rect x="49.0829%" y="165" width="0.0294%" height="15" fill="rgb(213,25,53)" fg:x="5004" fg:w="3"/><text x="49.3329%" y="175.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (6 samples, 0.06%)</title><rect x="49.1123%" y="165" width="0.0589%" height="15" fill="rgb(252,105,26)" fg:x="5007" fg:w="6"/><text x="49.3623%" y="175.50"></text></g><g><title>0x11000c590 (3 samples, 0.03%)</title><rect x="49.3870%" y="133" width="0.0294%" height="15" fill="rgb(220,39,43)" fg:x="5035" fg:w="3"/><text x="49.6370%" y="143.50"></text></g><g><title>0x11000c0dc (3 samples, 0.03%)</title><rect x="49.3870%" y="117" width="0.0294%" height="15" fill="rgb(229,68,48)" fg:x="5035" fg:w="3"/><text x="49.6370%" y="127.50"></text></g><g><title>0x11000bf1c (3 samples, 0.03%)</title><rect x="49.3870%" y="101" width="0.0294%" height="15" fill="rgb(252,8,32)" fg:x="5035" fg:w="3"/><text x="49.6370%" y="111.50"></text></g><g><title>http_bench_json_ops`Builtins_BaselineOutOfLinePrologue (2 samples, 0.02%)</title><rect x="49.3968%" y="85" width="0.0196%" height="15" fill="rgb(223,20,43)" fg:x="5036" fg:w="2"/><text x="49.6468%" y="95.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.02%)</title><rect x="49.3968%" y="69" width="0.0196%" height="15" fill="rgb(229,81,49)" fg:x="5036" fg:w="2"/><text x="49.6468%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileOptimized (2 samples, 0.02%)</title><rect x="49.3968%" y="53" width="0.0196%" height="15" fill="rgb(236,28,36)" fg:x="5036" fg:w="2"/><text x="49.6468%" y="63.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (2 samples, 0.02%)</title><rect x="49.3968%" y="37" width="0.0196%" height="15" fill="rgb(249,185,26)" fg:x="5036" fg:w="2"/><text x="49.6468%" y="47.50"></text></g><g><title>0x11000c73c (4 samples, 0.04%)</title><rect x="49.4164%" y="133" width="0.0392%" height="15" fill="rgb(249,174,33)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (4 samples, 0.04%)</title><rect x="49.4164%" y="117" width="0.0392%" height="15" fill="rgb(233,201,37)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (4 samples, 0.04%)</title><rect x="49.4164%" y="101" width="0.0392%" height="15" fill="rgb(221,78,26)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (4 samples, 0.04%)</title><rect x="49.4164%" y="85" width="0.0392%" height="15" fill="rgb(250,127,30)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="95.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (4 samples, 0.04%)</title><rect x="49.4164%" y="69" width="0.0392%" height="15" fill="rgb(230,49,44)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (4 samples, 0.04%)</title><rect x="49.4164%" y="53" width="0.0392%" height="15" fill="rgb(229,67,23)" fg:x="5038" fg:w="4"/><text x="49.6664%" y="63.50"></text></g><g><title>0x11000d498 (2 samples, 0.02%)</title><rect x="49.4556%" y="133" width="0.0196%" height="15" fill="rgb(249,83,47)" fg:x="5042" fg:w="2"/><text x="49.7056%" y="143.50"></text></g><g><title>0x11000d61c (3 samples, 0.03%)</title><rect x="49.4949%" y="133" width="0.0294%" height="15" fill="rgb(215,43,3)" fg:x="5046" fg:w="3"/><text x="49.7449%" y="143.50"></text></g><g><title>0x11000d624 (2 samples, 0.02%)</title><rect x="49.5243%" y="133" width="0.0196%" height="15" fill="rgb(238,154,13)" fg:x="5049" fg:w="2"/><text x="49.7743%" y="143.50"></text></g><g><title>0x11000d6e8 (12 samples, 0.12%)</title><rect x="49.5635%" y="133" width="0.1177%" height="15" fill="rgb(219,56,2)" fg:x="5053" fg:w="12"/><text x="49.8135%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (12 samples, 0.12%)</title><rect x="49.5635%" y="117" width="0.1177%" height="15" fill="rgb(233,0,4)" fg:x="5053" fg:w="12"/><text x="49.8135%" y="127.50"></text></g><g><title>0x11000d6f8 (2 samples, 0.02%)</title><rect x="49.6812%" y="133" width="0.0196%" height="15" fill="rgb(235,30,7)" fg:x="5065" fg:w="2"/><text x="49.9312%" y="143.50"></text></g><g><title>0x11000d768 (2 samples, 0.02%)</title><rect x="49.7401%" y="133" width="0.0196%" height="15" fill="rgb(250,79,13)" fg:x="5071" fg:w="2"/><text x="49.9901%" y="143.50"></text></g><g><title>0x11000d830 (4 samples, 0.04%)</title><rect x="49.8283%" y="133" width="0.0392%" height="15" fill="rgb(211,146,34)" fg:x="5080" fg:w="4"/><text x="50.0783%" y="143.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::op_try_write::call (87 samples, 0.85%)</title><rect x="49.9657%" y="101" width="0.8534%" height="15" fill="rgb(228,22,38)" fg:x="5094" fg:w="87"/><text x="50.2157%" y="111.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (4,122 samples, 40.43%)</title><rect x="49.8872%" y="117" width="40.4316%" height="15" fill="rgb(235,168,5)" fg:x="5086" fg:w="4122"/><text x="50.1372%" y="127.50">http_bench_json_ops`http_bench_json_ops::func_op_try_write</text></g><g><title>libsystem_kernel.dylib`__sendto (4,027 samples, 39.50%)</title><rect x="50.8190%" y="101" width="39.4998%" height="15" fill="rgb(221,155,16)" fg:x="5181" fg:w="4027"/><text x="51.0690%" y="111.50">libsystem_kernel.dylib`__sendto</text></g><g><title>0x11000d838 (4,128 samples, 40.49%)</title><rect x="49.8676%" y="133" width="40.4904%" height="15" fill="rgb(215,215,53)" fg:x="5084" fg:w="4128"/><text x="50.1176%" y="143.50">0x11000d838</text></g><g><title>http_bench_json_ops`v8::External::Value (3 samples, 0.03%)</title><rect x="90.3286%" y="117" width="0.0294%" height="15" fill="rgb(223,4,10)" fg:x="9209" fg:w="3"/><text x="90.5786%" y="127.50"></text></g><g><title>0x11000d868 (3 samples, 0.03%)</title><rect x="90.3678%" y="133" width="0.0294%" height="15" fill="rgb(234,103,6)" fg:x="9213" fg:w="3"/><text x="90.6178%" y="143.50"></text></g><g><title>0x11000d874 (2 samples, 0.02%)</title><rect x="90.3973%" y="133" width="0.0196%" height="15" fill="rgb(227,97,0)" fg:x="9216" fg:w="2"/><text x="90.6473%" y="143.50"></text></g><g><title>0x11000d8a8 (2 samples, 0.02%)</title><rect x="90.4169%" y="133" width="0.0196%" height="15" fill="rgb(234,150,53)" fg:x="9218" fg:w="2"/><text x="90.6669%" y="143.50"></text></g><g><title>0x11000d994 (6 samples, 0.06%)</title><rect x="90.4561%" y="133" width="0.0589%" height="15" fill="rgb(228,201,54)" fg:x="9222" fg:w="6"/><text x="90.7061%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (6 samples, 0.06%)</title><rect x="90.4561%" y="117" width="0.0589%" height="15" fill="rgb(222,22,37)" fg:x="9222" fg:w="6"/><text x="90.7061%" y="127.50"></text></g><g><title>0x11000d9b0 (2 samples, 0.02%)</title><rect x="90.5150%" y="133" width="0.0196%" height="15" fill="rgb(237,53,32)" fg:x="9228" fg:w="2"/><text x="90.7650%" y="143.50"></text></g><g><title>0x11000d9d8 (7 samples, 0.07%)</title><rect x="90.5444%" y="133" width="0.0687%" height="15" fill="rgb(233,25,53)" fg:x="9231" fg:w="7"/><text x="90.7944%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (7 samples, 0.07%)</title><rect x="90.5444%" y="117" width="0.0687%" height="15" fill="rgb(210,40,34)" fg:x="9231" fg:w="7"/><text x="90.7944%" y="127.50"></text></g><g><title>0x11000d9e8 (2 samples, 0.02%)</title><rect x="90.6130%" y="133" width="0.0196%" height="15" fill="rgb(241,220,44)" fg:x="9238" fg:w="2"/><text x="90.8630%" y="143.50"></text></g><g><title>0x11000da28 (2 samples, 0.02%)</title><rect x="90.6327%" y="133" width="0.0196%" height="15" fill="rgb(235,28,35)" fg:x="9240" fg:w="2"/><text x="90.8827%" y="143.50"></text></g><g><title>0x11000db34 (4 samples, 0.04%)</title><rect x="90.7013%" y="133" width="0.0392%" height="15" fill="rgb(210,56,17)" fg:x="9247" fg:w="4"/><text x="90.9513%" y="143.50"></text></g><g><title>0x11000db94 (5 samples, 0.05%)</title><rect x="90.7602%" y="133" width="0.0490%" height="15" fill="rgb(224,130,29)" fg:x="9253" fg:w="5"/><text x="91.0102%" y="143.50"></text></g><g><title>0x11000dc54 (2 samples, 0.02%)</title><rect x="90.8583%" y="133" width="0.0196%" height="15" fill="rgb(235,212,8)" fg:x="9263" fg:w="2"/><text x="91.1083%" y="143.50"></text></g><g><title>0x11000dd04 (26 samples, 0.26%)</title><rect x="90.9073%" y="133" width="0.2550%" height="15" fill="rgb(223,33,50)" fg:x="9268" fg:w="26"/><text x="91.1573%" y="143.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$malloc (9 samples, 0.09%)</title><rect x="91.1623%" y="117" width="0.0883%" height="15" fill="rgb(219,149,13)" fg:x="9294" fg:w="9"/><text x="91.4123%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.21%)</title><rect x="92.1138%" y="53" width="0.2060%" height="15" fill="rgb(250,156,29)" fg:x="9391" fg:w="21"/><text x="92.3638%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.14%)</title><rect x="92.1824%" y="37" width="0.1373%" height="15" fill="rgb(216,193,19)" fg:x="9398" fg:w="14"/><text x="92.4324%" y="47.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (87 samples, 0.85%)</title><rect x="91.4762%" y="101" width="0.8534%" height="15" fill="rgb(216,135,14)" fg:x="9326" fg:w="87"/><text x="91.7262%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.35%)</title><rect x="91.9765%" y="85" width="0.3531%" height="15" fill="rgb(241,47,5)" fg:x="9377" fg:w="36"/><text x="92.2265%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.27%)</title><rect x="92.0549%" y="69" width="0.2746%" height="15" fill="rgb(233,42,35)" fg:x="9385" fg:w="28"/><text x="92.3049%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::api_internal::GlobalizeReference (2 samples, 0.02%)</title><rect x="92.3296%" y="101" width="0.0196%" height="15" fill="rgb(231,13,6)" fg:x="9413" fg:w="2"/><text x="92.5796%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (4 samples, 0.04%)</title><rect x="92.3492%" y="101" width="0.0392%" height="15" fill="rgb(207,181,40)" fg:x="9415" fg:w="4"/><text x="92.5992%" y="111.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (14 samples, 0.14%)</title><rect x="92.3982%" y="101" width="0.1373%" height="15" fill="rgb(254,173,49)" fg:x="9420" fg:w="14"/><text x="92.6482%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (11 samples, 0.11%)</title><rect x="92.4277%" y="85" width="0.1079%" height="15" fill="rgb(221,1,38)" fg:x="9423" fg:w="11"/><text x="92.6777%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.02%)</title><rect x="92.6631%" y="85" width="0.0196%" height="15" fill="rgb(206,124,46)" fg:x="9447" fg:w="2"/><text x="92.9131%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.16%)</title><rect x="92.7121%" y="69" width="0.1569%" height="15" fill="rgb(249,21,11)" fg:x="9452" fg:w="16"/><text x="92.9621%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.09%)</title><rect x="92.7808%" y="53" width="0.0883%" height="15" fill="rgb(222,201,40)" fg:x="9459" fg:w="9"/><text x="93.0308%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.38%)</title><rect x="92.5356%" y="101" width="0.3825%" height="15" fill="rgb(235,61,29)" fg:x="9434" fg:w="39"/><text x="92.7856%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.24%)</title><rect x="92.6827%" y="85" width="0.2354%" height="15" fill="rgb(219,207,3)" fg:x="9449" fg:w="24"/><text x="92.9327%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.05%)</title><rect x="92.8691%" y="69" width="0.0490%" height="15" fill="rgb(222,56,46)" fg:x="9468" fg:w="5"/><text x="93.1191%" y="79.50"></text></g><g><title>http_bench_json_ops`deno_core::ops_builtin::func_op_read (171 samples, 1.68%)</title><rect x="91.2506%" y="117" width="1.6773%" height="15" fill="rgb(239,76,54)" fg:x="9303" fg:w="171"/><text x="91.5006%" y="127.50"></text></g><g><title>0x11000dd0c (183 samples, 1.79%)</title><rect x="91.1623%" y="133" width="1.7950%" height="15" fill="rgb(231,124,27)" fg:x="9294" fg:w="183"/><text x="91.4123%" y="143.50">0..</text></g><g><title>http_bench_json_ops`v8::internal::AllocationCounter::InvokeAllocationObservers (2 samples, 0.02%)</title><rect x="93.0750%" y="53" width="0.0196%" height="15" fill="rgb(249,195,6)" fg:x="9489" fg:w="2"/><text x="93.3250%" y="63.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (4 samples, 0.04%)</title><rect x="93.0750%" y="101" width="0.0392%" height="15" fill="rgb(237,174,47)" fg:x="9489" fg:w="4"/><text x="93.3250%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (4 samples, 0.04%)</title><rect x="93.0750%" y="85" width="0.0392%" height="15" fill="rgb(206,201,31)" fg:x="9489" fg:w="4"/><text x="93.3250%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (4 samples, 0.04%)</title><rect x="93.0750%" y="69" width="0.0392%" height="15" fill="rgb(231,57,52)" fg:x="9489" fg:w="4"/><text x="93.3250%" y="79.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (2 samples, 0.02%)</title><rect x="93.0947%" y="53" width="0.0196%" height="15" fill="rgb(248,177,22)" fg:x="9491" fg:w="2"/><text x="93.3447%" y="63.50"></text></g><g><title>0x11000dd44 (24 samples, 0.24%)</title><rect x="92.9769%" y="133" width="0.2354%" height="15" fill="rgb(215,211,37)" fg:x="9479" fg:w="24"/><text x="93.2269%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitUncaught (24 samples, 0.24%)</title><rect x="92.9769%" y="117" width="0.2354%" height="15" fill="rgb(241,128,51)" fg:x="9479" fg:w="24"/><text x="93.2269%" y="127.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (10 samples, 0.10%)</title><rect x="93.1143%" y="101" width="0.0981%" height="15" fill="rgb(227,165,31)" fg:x="9493" fg:w="10"/><text x="93.3643%" y="111.50"></text></g><g><title>0x11000dda0 (2 samples, 0.02%)</title><rect x="93.2124%" y="133" width="0.0196%" height="15" fill="rgb(228,167,24)" fg:x="9503" fg:w="2"/><text x="93.4624%" y="143.50"></text></g><g><title>0x11000ddbc (3 samples, 0.03%)</title><rect x="93.2320%" y="133" width="0.0294%" height="15" fill="rgb(228,143,12)" fg:x="9505" fg:w="3"/><text x="93.4820%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (2 samples, 0.02%)</title><rect x="93.2810%" y="133" width="0.0196%" height="15" fill="rgb(249,149,8)" fg:x="9510" fg:w="2"/><text x="93.5310%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (13 samples, 0.13%)</title><rect x="93.3006%" y="133" width="0.1275%" height="15" fill="rgb(243,35,44)" fg:x="9512" fg:w="13"/><text x="93.5506%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (4,516 samples, 44.30%)</title><rect x="49.1810%" y="149" width="44.2962%" height="15" fill="rgb(246,89,9)" fg:x="5014" fg:w="4516"/><text x="49.4310%" y="159.50">http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>http_bench_json_ops`http_bench_json_ops::func_op_try_write (4 samples, 0.04%)</title><rect x="93.4380%" y="133" width="0.0392%" height="15" fill="rgb(233,213,13)" fg:x="9526" fg:w="4"/><text x="93.6880%" y="143.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (4,559 samples, 44.72%)</title><rect x="48.7984%" y="197" width="44.7180%" height="15" fill="rgb(233,141,41)" fg:x="4975" fg:w="4559"/><text x="49.0484%" y="207.50">http_bench_json_ops`Builtins_JSRunMicrotasksEntry</text></g><g><title>http_bench_json_ops`Builtins_RunMicrotasks (4,550 samples, 44.63%)</title><rect x="48.8867%" y="181" width="44.6297%" height="15" fill="rgb(239,167,4)" fg:x="4984" fg:w="4550"/><text x="49.1367%" y="191.50">http_bench_json_ops`Builtins_RunMicrotasks</text></g><g><title>http_bench_json_ops`Builtins_PromiseFulfillReactionJob (4,520 samples, 44.34%)</title><rect x="49.1810%" y="165" width="44.3355%" height="15" fill="rgb(209,217,16)" fg:x="5014" fg:w="4520"/><text x="49.4310%" y="175.50">http_bench_json_ops`Builtins_PromiseFulfillReactionJob</text></g><g><title>http_bench_json_ops`Builtins_ResumeGeneratorTrampoline (4 samples, 0.04%)</title><rect x="93.4772%" y="149" width="0.0392%" height="15" fill="rgb(219,88,35)" fg:x="9530" fg:w="4"/><text x="93.7272%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (4,583 samples, 44.95%)</title><rect x="48.5924%" y="213" width="44.9534%" height="15" fill="rgb(220,193,23)" fg:x="4954" fg:w="4583"/><text x="48.8424%" y="223.50">http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::intern..</text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (3 samples, 0.03%)</title><rect x="93.5164%" y="197" width="0.0294%" height="15" fill="rgb(230,90,52)" fg:x="9534" fg:w="3"/><text x="93.7664%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::AllowJavascriptExecution::IsAllowed (2 samples, 0.02%)</title><rect x="93.5459%" y="213" width="0.0196%" height="15" fill="rgb(252,106,19)" fg:x="9537" fg:w="2"/><text x="93.7959%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::UnregisterTryCatchHandler (2 samples, 0.02%)</title><rect x="93.5753%" y="213" width="0.0196%" height="15" fill="rgb(206,74,20)" fg:x="9540" fg:w="2"/><text x="93.8253%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (2 samples, 0.02%)</title><rect x="93.5949%" y="213" width="0.0196%" height="15" fill="rgb(230,138,44)" fg:x="9542" fg:w="2"/><text x="93.8449%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (4,651 samples, 45.62%)</title><rect x="48.0039%" y="277" width="45.6204%" height="15" fill="rgb(235,182,43)" fg:x="4894" fg:w="4651"/><text x="48.2539%" y="287.50">http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (4,645 samples, 45.56%)</title><rect x="48.0628%" y="261" width="45.5615%" height="15" fill="rgb(242,16,51)" fg:x="4900" fg:w="4645"/><text x="48.3128%" y="271.50">http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (4,628 samples, 45.39%)</title><rect x="48.2295%" y="245" width="45.3948%" height="15" fill="rgb(248,9,4)" fg:x="4917" fg:w="4628"/><text x="48.4795%" y="255.50">http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (4,613 samples, 45.25%)</title><rect x="48.3767%" y="229" width="45.2477%" height="15" fill="rgb(210,31,22)" fg:x="4932" fg:w="4613"/><text x="48.6267%" y="239.50">http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatc..</text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (4,870 samples, 47.77%)</title><rect x="45.8656%" y="309" width="47.7685%" height="15" fill="rgb(239,54,39)" fg:x="4676" fg:w="4870"/><text x="46.1156%" y="319.50">http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::V..</text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (4,659 samples, 45.70%)</title><rect x="47.9353%" y="293" width="45.6989%" height="15" fill="rgb(230,99,41)" fg:x="4887" fg:w="4659"/><text x="48.1853%" y="303.50">http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal</text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (2 samples, 0.02%)</title><rect x="93.6439%" y="309" width="0.0196%" height="15" fill="rgb(253,106,12)" fg:x="9547" fg:w="2"/><text x="93.8939%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (9 samples, 0.09%)</title><rect x="93.6636%" y="309" width="0.0883%" height="15" fill="rgb(213,46,41)" fg:x="9549" fg:w="9"/><text x="93.9136%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (2 samples, 0.02%)</title><rect x="93.7616%" y="309" width="0.0196%" height="15" fill="rgb(215,133,35)" fg:x="9559" fg:w="2"/><text x="94.0116%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (7 samples, 0.07%)</title><rect x="93.7813%" y="309" width="0.0687%" height="15" fill="rgb(213,28,5)" fg:x="9561" fg:w="7"/><text x="94.0313%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (4 samples, 0.04%)</title><rect x="93.8499%" y="309" width="0.0392%" height="15" fill="rgb(215,77,49)" fg:x="9568" fg:w="4"/><text x="94.0999%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (3 samples, 0.03%)</title><rect x="93.8892%" y="309" width="0.0294%" height="15" fill="rgb(248,100,22)" fg:x="9572" fg:w="3"/><text x="94.1392%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2 samples, 0.02%)</title><rect x="93.8990%" y="293" width="0.0196%" height="15" fill="rgb(208,67,9)" fg:x="9573" fg:w="2"/><text x="94.1490%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (4 samples, 0.04%)</title><rect x="93.9186%" y="309" width="0.0392%" height="15" fill="rgb(219,133,21)" fg:x="9575" fg:w="4"/><text x="94.1686%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::Join (4 samples, 0.04%)</title><rect x="94.0265%" y="197" width="0.0392%" height="15" fill="rgb(246,46,29)" fg:x="9586" fg:w="4"/><text x="94.2765%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::JobTask::ProcessItems (4 samples, 0.04%)</title><rect x="94.0265%" y="181" width="0.0392%" height="15" fill="rgb(246,185,52)" fg:x="9586" fg:w="4"/><text x="94.2765%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::Process (4 samples, 0.04%)</title><rect x="94.0265%" y="165" width="0.0392%" height="15" fill="rgb(252,136,11)" fg:x="9586" fg:w="4"/><text x="94.2765%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::CollectGarbage (8 samples, 0.08%)</title><rect x="94.0167%" y="229" width="0.0785%" height="15" fill="rgb(219,138,53)" fg:x="9585" fg:w="8"/><text x="94.2667%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobHandle::Join (7 samples, 0.07%)</title><rect x="94.0265%" y="213" width="0.0687%" height="15" fill="rgb(211,51,23)" fg:x="9586" fg:w="7"/><text x="94.2765%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::~DefaultJobState (3 samples, 0.03%)</title><rect x="94.0657%" y="197" width="0.0294%" height="15" fill="rgb(247,221,28)" fg:x="9590" fg:w="3"/><text x="94.3157%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::base::ConditionVariable::~ConditionVariable (3 samples, 0.03%)</title><rect x="94.0657%" y="181" width="0.0294%" height="15" fill="rgb(251,222,45)" fg:x="9590" fg:w="3"/><text x="94.3157%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.02%)</title><rect x="94.0755%" y="165" width="0.0196%" height="15" fill="rgb(217,162,53)" fg:x="9591" fg:w="2"/><text x="94.3255%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::PerformGarbageCollection (9 samples, 0.09%)</title><rect x="94.0167%" y="261" width="0.0883%" height="15" fill="rgb(229,93,14)" fg:x="9585" fg:w="9"/><text x="94.2667%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::Scavenge (9 samples, 0.09%)</title><rect x="94.0167%" y="245" width="0.0883%" height="15" fill="rgb(209,67,49)" fg:x="9585" fg:w="9"/><text x="94.2667%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengeJob::Task::RunInternal (11 samples, 0.11%)</title><rect x="94.0069%" y="293" width="0.1079%" height="15" fill="rgb(213,87,29)" fg:x="9584" fg:w="11"/><text x="94.2569%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::CollectGarbage (11 samples, 0.11%)</title><rect x="94.0069%" y="277" width="0.1079%" height="15" fill="rgb(205,151,52)" fg:x="9584" fg:w="11"/><text x="94.2569%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex,  (2 samples, 0.02%)</title><rect x="94.1638%" y="277" width="0.0196%" height="15" fill="rgb(253,215,39)" fg:x="9600" fg:w="2"/><text x="94.4138%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromDelayedQueueLocked(v8::base::LockGuard&lt;v8::base::Mutex, (2 samples, 0.02%)</title><rect x="94.1638%" y="261" width="0.0196%" height="15" fill="rgb(221,220,41)" fg:x="9600" fg:w="2"/><text x="94.4138%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="94.1932%" y="277" width="0.0196%" height="15" fill="rgb(218,133,21)" fg:x="9603" fg:w="2"/><text x="94.4432%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (10 samples, 0.10%)</title><rect x="94.1246%" y="293" width="0.0981%" height="15" fill="rgb(221,193,43)" fg:x="9596" fg:w="10"/><text x="94.3746%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultPlatform::PumpMessageLoop (29 samples, 0.28%)</title><rect x="93.9676%" y="309" width="0.2845%" height="15" fill="rgb(240,128,52)" fg:x="9580" fg:w="29"/><text x="94.2176%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="94.2227%" y="293" width="0.0294%" height="15" fill="rgb(253,114,12)" fg:x="9606" fg:w="3"/><text x="94.4727%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::exception (3 samples, 0.03%)</title><rect x="94.2521%" y="309" width="0.0294%" height="15" fill="rgb(215,223,47)" fg:x="9609" fg:w="3"/><text x="94.5021%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (2 samples, 0.02%)</title><rect x="94.3502%" y="293" width="0.0196%" height="15" fill="rgb(248,225,23)" fg:x="9619" fg:w="2"/><text x="94.6002%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (11 samples, 0.11%)</title><rect x="94.2815%" y="309" width="0.1079%" height="15" fill="rgb(250,108,0)" fg:x="9612" fg:w="11"/><text x="94.5315%" y="319.50"></text></g><g><title>http_bench_json_ops`v8__Null (2 samples, 0.02%)</title><rect x="94.3894%" y="309" width="0.0196%" height="15" fill="rgb(228,208,7)" fg:x="9623" fg:w="2"/><text x="94.6394%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.26%)</title><rect x="94.4188%" y="309" width="0.2648%" height="15" fill="rgb(244,45,10)" fg:x="9626" fg:w="27"/><text x="94.6688%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.10%)</title><rect x="94.5856%" y="293" width="0.0981%" height="15" fill="rgb(207,125,25)" fg:x="9643" fg:w="10"/><text x="94.8356%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.03%)</title><rect x="94.6837%" y="309" width="0.0294%" height="15" fill="rgb(210,195,18)" fg:x="9653" fg:w="3"/><text x="94.9337%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.10%)</title><rect x="94.7131%" y="309" width="0.0981%" height="15" fill="rgb(249,80,12)" fg:x="9656" fg:w="10"/><text x="94.9631%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.04%)</title><rect x="94.8112%" y="309" width="0.0392%" height="15" fill="rgb(221,65,9)" fg:x="9666" fg:w="4"/><text x="95.0612%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="94.8504%" y="309" width="0.0196%" height="15" fill="rgb(235,49,36)" fg:x="9670" fg:w="2"/><text x="95.1004%" y="319.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (9,623 samples, 94.39%)</title><rect x="0.5002%" y="325" width="94.3894%" height="15" fill="rgb(225,32,20)" fg:x="51" fg:w="9623"/><text x="0.7502%" y="335.50">http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="94.8700%" y="309" width="0.0196%" height="15" fill="rgb(215,141,46)" fg:x="9672" fg:w="2"/><text x="95.1200%" y="319.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::drop_arc_raw (3 samples, 0.03%)</title><rect x="94.8897%" y="325" width="0.0294%" height="15" fill="rgb(250,160,47)" fg:x="9674" fg:w="3"/><text x="95.1397%" y="335.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::wake_by_ref_arc_raw (34 samples, 0.33%)</title><rect x="94.9191%" y="325" width="0.3335%" height="15" fill="rgb(216,222,40)" fg:x="9677" fg:w="34"/><text x="95.1691%" y="335.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (33 samples, 0.32%)</title><rect x="94.9289%" y="309" width="0.3237%" height="15" fill="rgb(234,217,39)" fg:x="9678" fg:w="33"/><text x="95.1789%" y="319.50"></text></g><g><title>http_bench_json_ops`polloi::dummy_waker::clone_waker (2 samples, 0.02%)</title><rect x="95.2624%" y="325" width="0.0196%" height="15" fill="rgb(207,178,40)" fg:x="9712" fg:w="2"/><text x="95.5124%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2 samples, 0.02%)</title><rect x="95.2820%" y="325" width="0.0196%" height="15" fill="rgb(221,136,13)" fg:x="9714" fg:w="2"/><text x="95.5320%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (2 samples, 0.02%)</title><rect x="95.3212%" y="325" width="0.0196%" height="15" fill="rgb(249,199,10)" fg:x="9718" fg:w="2"/><text x="95.5712%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (3 samples, 0.03%)</title><rect x="95.3409%" y="325" width="0.0294%" height="15" fill="rgb(249,222,13)" fg:x="9720" fg:w="3"/><text x="95.5909%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2 samples, 0.02%)</title><rect x="95.3703%" y="325" width="0.0196%" height="15" fill="rgb(244,185,38)" fg:x="9723" fg:w="2"/><text x="95.6203%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (2 samples, 0.02%)</title><rect x="95.3997%" y="325" width="0.0196%" height="15" fill="rgb(236,202,9)" fg:x="9726" fg:w="2"/><text x="95.6497%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="95.4586%" y="325" width="0.0196%" height="15" fill="rgb(250,229,37)" fg:x="9732" fg:w="2"/><text x="95.7086%" y="335.50"></text></g><g><title>http_bench_json_ops`http_bench_json_ops::main (9,738 samples, 95.52%)</title><rect x="0.0196%" y="341" width="95.5174%" height="15" fill="rgb(206,174,23)" fg:x="2" fg:w="9738"/><text x="0.2696%" y="351.50">http_bench_json_ops`http_bench_json_ops::main</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.05%)</title><rect x="95.4880%" y="325" width="0.0490%" height="15" fill="rgb(211,33,43)" fg:x="9735" fg:w="5"/><text x="95.7380%" y="335.50"></text></g><g><title>dyld`start (10,181 samples, 99.86%)</title><rect x="0.0000%" y="389" width="99.8627%" height="15" fill="rgb(245,58,50)" fg:x="0" fg:w="10181"/><text x="0.2500%" y="399.50">dyld`start</text></g><g><title>http_bench_json_ops`main (10,181 samples, 99.86%)</title><rect x="0.0000%" y="373" width="99.8627%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="10181"/><text x="0.2500%" y="383.50">http_bench_json_ops`main</text></g><g><title>http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (10,180 samples, 99.85%)</title><rect x="0.0098%" y="357" width="99.8529%" height="15" fill="rgb(232,229,15)" fg:x="1" fg:w="10180"/><text x="0.2598%" y="367.50">http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_kernel.dylib`kevent (441 samples, 4.33%)</title><rect x="95.5370%" y="341" width="4.3256%" height="15" fill="rgb(254,30,23)" fg:x="9740" fg:w="441"/><text x="95.7870%" y="351.50">libsy..</text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceTop (2 samples, 0.02%)</title><rect x="99.8725%" y="197" width="0.0196%" height="15" fill="rgb(235,160,14)" fg:x="10182" fg:w="2"/><text x="100.1225%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::Reduce (2 samples, 0.02%)</title><rect x="99.8725%" y="181" width="0.0196%" height="15" fill="rgb(212,155,44)" fg:x="10182" fg:w="2"/><text x="100.1225%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::CreateGraph (3 samples, 0.03%)</title><rect x="99.8725%" y="261" width="0.0294%" height="15" fill="rgb(226,2,50)" fg:x="10182" fg:w="3"/><text x="100.1225%" y="271.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (3 samples, 0.03%)</title><rect x="99.8725%" y="245" width="0.0294%" height="15" fill="rgb(234,177,6)" fg:x="10182" fg:w="3"/><text x="100.1225%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::InliningPhase::Run (3 samples, 0.03%)</title><rect x="99.8725%" y="229" width="0.0294%" height="15" fill="rgb(217,24,9)" fg:x="10182" fg:w="3"/><text x="100.1225%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (3 samples, 0.03%)</title><rect x="99.8725%" y="213" width="0.0294%" height="15" fill="rgb(220,13,46)" fg:x="10182" fg:w="3"/><text x="100.1225%" y="223.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (2 samples, 0.02%)</title><rect x="99.9117%" y="245" width="0.0196%" height="15" fill="rgb(239,221,27)" fg:x="10186" fg:w="2"/><text x="100.1617%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectControlLinearizationPhase::Run (2 samples, 0.02%)</title><rect x="99.9117%" y="229" width="0.0196%" height="15" fill="rgb(222,198,25)" fg:x="10186" fg:w="2"/><text x="100.1617%" y="239.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase, v8::internal::compiler::Linkage*&amp;&gt; (2 samples, 0.02%)</title><rect x="99.9411%" y="245" width="0.0196%" height="15" fill="rgb(211,99,13)" fg:x="10189" fg:w="2"/><text x="100.1911%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLoweringPhase::Run (2 samples, 0.02%)</title><rect x="99.9411%" y="229" width="0.0196%" height="15" fill="rgb(232,111,31)" fg:x="10189" fg:w="2"/><text x="100.1911%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLowering::LowerAllNodes (2 samples, 0.02%)</title><rect x="99.9411%" y="213" width="0.0196%" height="15" fill="rgb(245,82,37)" fg:x="10189" fg:w="2"/><text x="100.1911%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (13 samples, 0.13%)</title><rect x="99.8627%" y="309" width="0.1275%" height="15" fill="rgb(227,149,46)" fg:x="10181" fg:w="13"/><text x="100.1127%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (13 samples, 0.13%)</title><rect x="99.8627%" y="293" width="0.1275%" height="15" fill="rgb(218,36,50)" fg:x="10181" fg:w="13"/><text x="100.1127%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (13 samples, 0.13%)</title><rect x="99.8627%" y="277" width="0.1275%" height="15" fill="rgb(226,80,48)" fg:x="10181" fg:w="13"/><text x="100.1127%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (9 samples, 0.09%)</title><rect x="99.9019%" y="261" width="0.0883%" height="15" fill="rgb(238,224,15)" fg:x="10185" fg:w="9"/><text x="100.1519%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::SelectInstructions (2 samples, 0.02%)</title><rect x="99.9706%" y="245" width="0.0196%" height="15" fill="rgb(241,136,10)" fg:x="10192" fg:w="2"/><text x="100.2206%" y="255.50"></text></g><g><title>all (10,195 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="10195"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (14 samples, 0.14%)</title><rect x="99.8627%" y="389" width="0.1373%" height="15" fill="rgb(207,135,9)" fg:x="10181" fg:w="14"/><text x="100.1127%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (14 samples, 0.14%)</title><rect x="99.8627%" y="373" width="0.1373%" height="15" fill="rgb(206,86,44)" fg:x="10181" fg:w="14"/><text x="100.1127%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::base::ThreadEntry (14 samples, 0.14%)</title><rect x="99.8627%" y="357" width="0.1373%" height="15" fill="rgb(245,177,15)" fg:x="10181" fg:w="14"/><text x="100.1127%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (14 samples, 0.14%)</title><rect x="99.8627%" y="341" width="0.1373%" height="15" fill="rgb(206,64,50)" fg:x="10181" fg:w="14"/><text x="100.1127%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (14 samples, 0.14%)</title><rect x="99.8627%" y="325" width="0.1373%" height="15" fill="rgb(234,36,40)" fg:x="10181" fg:w="14"/><text x="100.1127%" y="335.50"></text></g></svg></svg>