<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="4834"><g><title>http_bench_json_ops`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0207%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.10%)</title><rect x="0.0827%" y="757" width="0.1034%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="5"/><text x="0.3327%" y="767.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="0.1862%" y="757" width="0.0207%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="1"/><text x="0.4362%" y="767.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="0.2069%" y="757" width="0.0207%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="1"/><text x="0.4569%" y="767.50"></text></g><g><title>http_bench_json_ops`core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.02%)</title><rect x="0.2276%" y="757" width="0.0207%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="1"/><text x="0.4776%" y="767.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::inspector::JsRuntimeInspector&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2482%" y="757" width="0.0207%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="1"/><text x="0.4982%" y="767.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;deno_core::ops::OpState&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2689%" y="757" width="0.0207%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="1"/><text x="0.5189%" y="767.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (1 samples, 0.02%)</title><rect x="0.2896%" y="757" width="0.0207%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="1"/><text x="0.5396%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="0.2896%" y="741" width="0.0207%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="1"/><text x="0.5396%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.2896%" y="725" width="0.0207%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="0.5396%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="0.2896%" y="709" width="0.0207%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="0.5396%" y="719.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="0.2896%" y="693" width="0.0207%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="0.5396%" y="703.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="0.2896%" y="677" width="0.0207%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="1"/><text x="0.5396%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.2896%" y="661" width="0.0207%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="1"/><text x="0.5396%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.2896%" y="645" width="0.0207%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="1"/><text x="0.5396%" y="655.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.2896%" y="629" width="0.0207%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="1"/><text x="0.5396%" y="639.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="0.2896%" y="613" width="0.0207%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="1"/><text x="0.5396%" y="623.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="0.2896%" y="597" width="0.0207%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="1"/><text x="0.5396%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="0.2896%" y="581" width="0.0207%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="1"/><text x="0.5396%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="0.2896%" y="565" width="0.0207%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="1"/><text x="0.5396%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.2896%" y="549" width="0.0207%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="1"/><text x="0.5396%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.2896%" y="533" width="0.0207%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="1"/><text x="0.5396%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::parsing::ParseFunction(v8::internal::ParseInfo*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.2896%" y="517" width="0.0207%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="0.5396%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseFunction(v8::internal::Isolate*, v8::internal::ParseInfo*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="0.2896%" y="501" width="0.0207%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="0.5396%" y="511.50"></text></g><g><title>http_bench_json_ops`void v8::internal::AstValueFactory::Internalize&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="0.2896%" y="485" width="0.0207%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="0.5396%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::StringTable::LookupKey&lt;v8::internal::SequentialStringKey&lt;unsigned char&gt;, v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (1 samples, 0.02%)</title><rect x="0.2896%" y="469" width="0.0207%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.5396%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::InternalIndex v8::internal::StringTable::Data::FindEntry&lt;v8::internal::Isolate, v8::internal::SequentialStringKey&lt;unsigned char&gt; &gt;(v8::internal::Isolate*, v8::internal::SequentialStringKey (1 samples, 0.02%)</title><rect x="0.2896%" y="453" width="0.0207%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="0.5396%" y="463.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::event_loop_pending_state (2 samples, 0.04%)</title><rect x="0.3103%" y="757" width="0.0414%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="2"/><text x="0.5603%" y="767.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cancel::internal::Node&gt; (6 samples, 0.12%)</title><rect x="2.4204%" y="693" width="0.1241%" height="15" fill="rgb(214,148,48)" fg:x="117" fg:w="6"/><text x="2.6704%" y="703.50"></text></g><g><title>http_bench_json_ops`&lt;deno_core::async_cancel::internal::Node as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="2.4410%" y="677" width="0.1034%" height="15" fill="rgb(232,36,49)" fg:x="118" fg:w="5"/><text x="2.6910%" y="687.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="2.5445%" y="693" width="0.0207%" height="15" fill="rgb(209,103,24)" fg:x="123" fg:w="1"/><text x="2.7945%" y="703.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.02%)</title><rect x="2.5445%" y="677" width="0.0207%" height="15" fill="rgb(229,88,8)" fg:x="123" fg:w="1"/><text x="2.7945%" y="687.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (2 samples, 0.04%)</title><rect x="2.5652%" y="693" width="0.0414%" height="15" fill="rgb(213,181,19)" fg:x="124" fg:w="2"/><text x="2.8152%" y="703.50"></text></g><g><title>http_bench_json_ops`futures_task::noop_waker::noop (3 samples, 0.06%)</title><rect x="2.6065%" y="693" width="0.0621%" height="15" fill="rgb(254,191,54)" fg:x="126" fg:w="3"/><text x="2.8565%" y="703.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::clone_arc_raw (3 samples, 0.06%)</title><rect x="2.6686%" y="693" width="0.0621%" height="15" fill="rgb(241,83,37)" fg:x="129" fg:w="3"/><text x="2.9186%" y="703.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (14 samples, 0.29%)</title><rect x="2.7307%" y="693" width="0.2896%" height="15" fill="rgb(233,36,39)" fg:x="132" fg:w="14"/><text x="2.9807%" y="703.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 1.03%)</title><rect x="2.0894%" y="709" width="1.0343%" height="15" fill="rgb(226,3,54)" fg:x="101" fg:w="50"/><text x="2.3394%" y="719.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.10%)</title><rect x="3.0203%" y="693" width="0.1034%" height="15" fill="rgb(245,192,40)" fg:x="146" fg:w="5"/><text x="3.2703%" y="703.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$recv (1 samples, 0.02%)</title><rect x="3.1237%" y="709" width="0.0207%" height="15" fill="rgb(238,167,29)" fg:x="151" fg:w="1"/><text x="3.3737%" y="719.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="3.1444%" y="709" width="0.0207%" height="15" fill="rgb(232,182,51)" fg:x="152" fg:w="1"/><text x="3.3944%" y="719.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (1 samples, 0.02%)</title><rect x="3.1651%" y="709" width="0.0207%" height="15" fill="rgb(231,60,39)" fg:x="153" fg:w="1"/><text x="3.4151%" y="719.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="3.1858%" y="709" width="0.0207%" height="15" fill="rgb(208,69,12)" fg:x="154" fg:w="1"/><text x="3.4358%" y="719.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (4 samples, 0.08%)</title><rect x="3.2065%" y="709" width="0.0827%" height="15" fill="rgb(235,93,37)" fg:x="155" fg:w="4"/><text x="3.4565%" y="719.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,490 samples, 30.82%)</title><rect x="1.9446%" y="725" width="30.8233%" height="15" fill="rgb(213,116,39)" fg:x="94" fg:w="1490"/><text x="2.1946%" y="735.50">http_bench_json_ops`&lt;core::future::from_generator:..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,425 samples, 29.48%)</title><rect x="3.2892%" y="709" width="29.4787%" height="15" fill="rgb(222,207,29)" fg:x="159" fg:w="1425"/><text x="3.5392%" y="719.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::op_read::call::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="32.7679%" y="725" width="0.0207%" height="15" fill="rgb(206,96,30)" fg:x="1584" fg:w="1"/><text x="33.0179%" y="735.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;http_bench_json_ops::TcpStream::read::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="32.7886%" y="725" width="0.0207%" height="15" fill="rgb(218,138,4)" fg:x="1585" fg:w="1"/><text x="33.0386%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.17%)</title><rect x="32.8093%" y="725" width="0.1655%" height="15" fill="rgb(250,191,14)" fg:x="1586" fg:w="8"/><text x="33.0593%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.10%)</title><rect x="32.8713%" y="709" width="0.1034%" height="15" fill="rgb(239,60,40)" fg:x="1589" fg:w="5"/><text x="33.1213%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.04%)</title><rect x="32.9748%" y="725" width="0.0414%" height="15" fill="rgb(206,27,48)" fg:x="1594" fg:w="2"/><text x="33.2248%" y="735.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,522 samples, 31.49%)</title><rect x="1.5722%" y="741" width="31.4853%" height="15" fill="rgb(225,35,8)" fg:x="76" fg:w="1522"/><text x="1.8222%" y="751.50">http_bench_json_ops`&lt;core::future::from_generator::..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.04%)</title><rect x="33.0161%" y="725" width="0.0414%" height="15" fill="rgb(250,213,24)" fg:x="1596" fg:w="2"/><text x="33.2661%" y="735.50"></text></g><g><title>http_bench_json_ops`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="33.0575%" y="741" width="0.0207%" height="15" fill="rgb(247,123,22)" fg:x="1598" fg:w="1"/><text x="33.3075%" y="751.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u32 (1 samples, 0.02%)</title><rect x="33.0782%" y="741" width="0.0207%" height="15" fill="rgb(231,138,38)" fg:x="1599" fg:w="1"/><text x="33.3282%" y="751.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="33.0989%" y="741" width="0.0207%" height="15" fill="rgb(231,145,46)" fg:x="1600" fg:w="1"/><text x="33.3489%" y="751.50"></text></g><g><title>http_bench_json_ops`core::hash::BuildHasher::hash_one (7 samples, 0.14%)</title><rect x="33.1196%" y="741" width="0.1448%" height="15" fill="rgb(251,118,11)" fg:x="1601" fg:w="7"/><text x="33.3696%" y="751.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::op_read::v8_func::{{closure}}&gt;&gt; (2 samples, 0.04%)</title><rect x="33.2644%" y="741" width="0.0414%" height="15" fill="rgb(217,147,25)" fg:x="1608" fg:w="2"/><text x="33.5144%" y="751.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (3 samples, 0.06%)</title><rect x="33.3058%" y="741" width="0.0621%" height="15" fill="rgb(247,81,37)" fg:x="1610" fg:w="3"/><text x="33.5558%" y="751.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="33.5126%" y="725" width="0.0207%" height="15" fill="rgb(209,12,38)" fg:x="1620" fg:w="1"/><text x="33.7626%" y="735.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (9 samples, 0.19%)</title><rect x="33.3678%" y="741" width="0.1862%" height="15" fill="rgb(227,1,9)" fg:x="1613" fg:w="9"/><text x="33.6178%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::UnregisterTryCatchHandler (1 samples, 0.02%)</title><rect x="33.5333%" y="725" width="0.0207%" height="15" fill="rgb(248,47,43)" fg:x="1621" fg:w="1"/><text x="33.7833%" y="735.50"></text></g><g><title>http_bench_json_ops`deno_core::inspector::JsRuntimeInspector::poll_sessions (7 samples, 0.14%)</title><rect x="33.5540%" y="741" width="0.1448%" height="15" fill="rgb(221,10,30)" fg:x="1622" fg:w="7"/><text x="33.8040%" y="751.50"></text></g><g><title>http_bench_json_ops`futures_channel::mpsc::UnboundedReceiver&lt;T&gt;::next_message (1 samples, 0.02%)</title><rect x="33.6781%" y="725" width="0.0207%" height="15" fill="rgb(210,229,1)" fg:x="1628" fg:w="1"/><text x="33.9281%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::Integer::New (2 samples, 0.04%)</title><rect x="33.7609%" y="709" width="0.0414%" height="15" fill="rgb(222,148,37)" fg:x="1632" fg:w="2"/><text x="34.0109%" y="719.50"></text></g><g><title>http_bench_json_ops`deno_core::ops::OpResult::to_v8 (7 samples, 0.14%)</title><rect x="33.6988%" y="741" width="0.1448%" height="15" fill="rgb(234,67,33)" fg:x="1629" fg:w="7"/><text x="33.9488%" y="751.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::ser::Serializer as serde::ser::Serializer&gt;::serialize_u32 (7 samples, 0.14%)</title><rect x="33.6988%" y="725" width="0.1448%" height="15" fill="rgb(247,98,35)" fg:x="1629" fg:w="7"/><text x="33.9488%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::Integer::NewFromUnsigned (2 samples, 0.04%)</title><rect x="33.8022%" y="709" width="0.0414%" height="15" fill="rgb(247,138,52)" fg:x="1634" fg:w="2"/><text x="34.0522%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Integer::New (2 samples, 0.04%)</title><rect x="33.8022%" y="693" width="0.0414%" height="15" fill="rgb(213,79,30)" fg:x="1634" fg:w="2"/><text x="34.0522%" y="703.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::evaluate_pending_module (2 samples, 0.04%)</title><rect x="33.8436%" y="741" width="0.0414%" height="15" fill="rgb(246,177,23)" fg:x="1636" fg:w="2"/><text x="34.0936%" y="751.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (1 samples, 0.02%)</title><rect x="33.8850%" y="741" width="0.0207%" height="15" fill="rgb(230,62,27)" fg:x="1638" fg:w="1"/><text x="34.1350%" y="751.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="34.0505%" y="709" width="0.0207%" height="15" fill="rgb(216,154,8)" fg:x="1646" fg:w="1"/><text x="34.3005%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (8 samples, 0.17%)</title><rect x="34.0712%" y="709" width="0.1655%" height="15" fill="rgb(244,35,45)" fg:x="1647" fg:w="8"/><text x="34.3212%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (4 samples, 0.08%)</title><rect x="34.1539%" y="693" width="0.0827%" height="15" fill="rgb(251,115,12)" fg:x="1651" fg:w="4"/><text x="34.4039%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (2 samples, 0.04%)</title><rect x="34.2367%" y="709" width="0.0414%" height="15" fill="rgb(240,54,50)" fg:x="1655" fg:w="2"/><text x="34.4867%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::Extend (1 samples, 0.02%)</title><rect x="34.2780%" y="709" width="0.0207%" height="15" fill="rgb(233,84,52)" fg:x="1657" fg:w="1"/><text x="34.5280%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScopeImplementer::EnterContext (1 samples, 0.02%)</title><rect x="34.2987%" y="709" width="0.0207%" height="15" fill="rgb(207,117,47)" fg:x="1658" fg:w="1"/><text x="34.5487%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (2 samples, 0.04%)</title><rect x="34.4642%" y="677" width="0.0414%" height="15" fill="rgb(249,43,39)" fg:x="1666" fg:w="2"/><text x="34.7142%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::~HandleScope (3 samples, 0.06%)</title><rect x="34.5056%" y="677" width="0.0621%" height="15" fill="rgb(209,38,44)" fg:x="1668" fg:w="3"/><text x="34.7556%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (2 samples, 0.04%)</title><rect x="34.5263%" y="661" width="0.0414%" height="15" fill="rgb(236,212,23)" fg:x="1669" fg:w="2"/><text x="34.7763%" y="671.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (9 samples, 0.19%)</title><rect x="34.4022%" y="693" width="0.1862%" height="15" fill="rgb(242,79,21)" fg:x="1663" fg:w="9"/><text x="34.6522%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::HandleScope::DeleteExtensions (1 samples, 0.02%)</title><rect x="34.5676%" y="677" width="0.0207%" height="15" fill="rgb(211,96,35)" fg:x="1671" fg:w="1"/><text x="34.8176%" y="687.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::handle_scope (36 samples, 0.74%)</title><rect x="33.9057%" y="725" width="0.7447%" height="15" fill="rgb(253,215,40)" fg:x="1639" fg:w="36"/><text x="34.1557%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::scope::data::ScopeData::try_exit_scope (16 samples, 0.33%)</title><rect x="34.3194%" y="709" width="0.3310%" height="15" fill="rgb(211,81,21)" fg:x="1659" fg:w="16"/><text x="34.5694%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Context::Exit (3 samples, 0.06%)</title><rect x="34.5883%" y="693" width="0.0621%" height="15" fill="rgb(208,190,38)" fg:x="1672" fg:w="3"/><text x="34.8383%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::api_internal::GlobalizeReference (2 samples, 0.04%)</title><rect x="34.7538%" y="709" width="0.0414%" height="15" fill="rgb(235,213,38)" fg:x="1680" fg:w="2"/><text x="35.0038%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (2 samples, 0.04%)</title><rect x="34.7952%" y="709" width="0.0414%" height="15" fill="rgb(237,122,38)" fg:x="1682" fg:w="2"/><text x="35.0452%" y="719.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::global_realm (12 samples, 0.25%)</title><rect x="34.6504%" y="725" width="0.2482%" height="15" fill="rgb(244,218,35)" fg:x="1675" fg:w="12"/><text x="34.9004%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::MoveGlobal (3 samples, 0.06%)</title><rect x="34.8366%" y="709" width="0.0621%" height="15" fill="rgb(240,68,47)" fg:x="1684" fg:w="3"/><text x="35.0866%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Context::Enter (3 samples, 0.06%)</title><rect x="34.8986%" y="725" width="0.0621%" height="15" fill="rgb(210,16,53)" fg:x="1687" fg:w="3"/><text x="35.1486%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::HandleScope (1 samples, 0.02%)</title><rect x="34.9607%" y="725" width="0.0207%" height="15" fill="rgb(235,124,12)" fg:x="1690" fg:w="1"/><text x="35.2107%" y="735.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::handle_scope (53 samples, 1.10%)</title><rect x="33.9057%" y="741" width="1.0964%" height="15" fill="rgb(224,169,11)" fg:x="1639" fg:w="53"/><text x="34.1557%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::scope::data::ScopeData::try_exit_scope (1 samples, 0.02%)</title><rect x="34.9814%" y="725" width="0.0207%" height="15" fill="rgb(250,166,2)" fg:x="1691" fg:w="1"/><text x="35.2314%" y="735.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::inspector (1 samples, 0.02%)</title><rect x="35.0021%" y="741" width="0.0207%" height="15" fill="rgb(242,216,29)" fg:x="1692" fg:w="1"/><text x="35.2521%" y="751.50"></text></g><g><title>http_bench_json_ops`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.04%)</title><rect x="35.0641%" y="725" width="0.0414%" height="15" fill="rgb(230,116,27)" fg:x="1695" fg:w="2"/><text x="35.3141%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.19%)</title><rect x="35.1055%" y="725" width="0.1862%" height="15" fill="rgb(228,99,48)" fg:x="1697" fg:w="9"/><text x="35.3555%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.04%)</title><rect x="35.2503%" y="709" width="0.0414%" height="15" fill="rgb(253,11,6)" fg:x="1704" fg:w="2"/><text x="35.5003%" y="719.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (14 samples, 0.29%)</title><rect x="35.0228%" y="741" width="0.2896%" height="15" fill="rgb(247,143,39)" fg:x="1693" fg:w="14"/><text x="35.2728%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="35.2917%" y="725" width="0.0207%" height="15" fill="rgb(236,97,10)" fg:x="1706" fg:w="1"/><text x="35.5417%" y="735.50"></text></g><g><title>http_bench_json_ops`std__shared_ptr__v8__BackingStore__reset (1 samples, 0.02%)</title><rect x="35.3124%" y="741" width="0.0207%" height="15" fill="rgb(233,208,19)" fg:x="1707" fg:w="1"/><text x="35.5624%" y="751.50"></text></g><g><title>http_bench_json_ops`std__shared_ptr__v8__Platform__reset (2 samples, 0.04%)</title><rect x="35.3331%" y="741" width="0.0414%" height="15" fill="rgb(216,164,2)" fg:x="1708" fg:w="2"/><text x="35.5831%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (2 samples, 0.04%)</title><rect x="35.3744%" y="741" width="0.0414%" height="15" fill="rgb(220,129,5)" fg:x="1710" fg:w="2"/><text x="35.6244%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (1 samples, 0.02%)</title><rect x="35.4158%" y="741" width="0.0207%" height="15" fill="rgb(242,17,10)" fg:x="1712" fg:w="1"/><text x="35.6658%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (1 samples, 0.02%)</title><rect x="35.6434%" y="725" width="0.0207%" height="15" fill="rgb(242,107,0)" fg:x="1723" fg:w="1"/><text x="35.8934%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2 samples, 0.04%)</title><rect x="35.6640%" y="725" width="0.0414%" height="15" fill="rgb(251,28,31)" fg:x="1724" fg:w="2"/><text x="35.9140%" y="735.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (5 samples, 0.10%)</title><rect x="35.8089%" y="709" width="0.1034%" height="15" fill="rgb(233,223,10)" fg:x="1731" fg:w="5"/><text x="36.0589%" y="719.50"></text></g><g><title>0x11000e1f8 (1 samples, 0.02%)</title><rect x="36.3260%" y="677" width="0.0207%" height="15" fill="rgb(215,21,27)" fg:x="1756" fg:w="1"/><text x="36.5760%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsAny (3 samples, 0.06%)</title><rect x="36.3467%" y="677" width="0.0621%" height="15" fill="rgb(232,23,21)" fg:x="1757" fg:w="3"/><text x="36.5967%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsAny (1 samples, 0.02%)</title><rect x="36.4088%" y="677" width="0.0207%" height="15" fill="rgb(244,5,23)" fg:x="1760" fg:w="1"/><text x="36.6588%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (7 samples, 0.14%)</title><rect x="36.4295%" y="677" width="0.1448%" height="15" fill="rgb(226,81,46)" fg:x="1761" fg:w="7"/><text x="36.6795%" y="687.50"></text></g><g><title>0x11000e290 (11 samples, 0.23%)</title><rect x="36.5950%" y="661" width="0.2276%" height="15" fill="rgb(247,70,30)" fg:x="1769" fg:w="11"/><text x="36.8450%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (11 samples, 0.23%)</title><rect x="36.5950%" y="645" width="0.2276%" height="15" fill="rgb(212,68,19)" fg:x="1769" fg:w="11"/><text x="36.8450%" y="655.50"></text></g><g><title>0x11000e4c4 (1 samples, 0.02%)</title><rect x="36.8225%" y="661" width="0.0207%" height="15" fill="rgb(240,187,13)" fg:x="1780" fg:w="1"/><text x="37.0725%" y="671.50"></text></g><g><title>0x11000e4cc (8 samples, 0.17%)</title><rect x="36.8432%" y="661" width="0.1655%" height="15" fill="rgb(223,113,26)" fg:x="1781" fg:w="8"/><text x="37.0932%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (8 samples, 0.17%)</title><rect x="36.8432%" y="645" width="0.1655%" height="15" fill="rgb(206,192,2)" fg:x="1781" fg:w="8"/><text x="37.0932%" y="655.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (8 samples, 0.17%)</title><rect x="36.8432%" y="629" width="0.1655%" height="15" fill="rgb(241,108,4)" fg:x="1781" fg:w="8"/><text x="37.0932%" y="639.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (6 samples, 0.12%)</title><rect x="36.8846%" y="613" width="0.1241%" height="15" fill="rgb(247,173,49)" fg:x="1783" fg:w="6"/><text x="37.1346%" y="623.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (2 samples, 0.04%)</title><rect x="37.0087%" y="661" width="0.0414%" height="15" fill="rgb(224,114,35)" fg:x="1789" fg:w="2"/><text x="37.2587%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNullOrUndefined (1 samples, 0.02%)</title><rect x="37.0501%" y="661" width="0.0207%" height="15" fill="rgb(245,159,27)" fg:x="1791" fg:w="1"/><text x="37.3001%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (42 samples, 0.87%)</title><rect x="36.2847%" y="693" width="0.8688%" height="15" fill="rgb(245,172,44)" fg:x="1754" fg:w="42"/><text x="36.5347%" y="703.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (28 samples, 0.58%)</title><rect x="36.5743%" y="677" width="0.5792%" height="15" fill="rgb(236,23,11)" fg:x="1768" fg:w="28"/><text x="36.8243%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (4 samples, 0.08%)</title><rect x="37.0707%" y="661" width="0.0827%" height="15" fill="rgb(205,117,38)" fg:x="1792" fg:w="4"/><text x="37.3207%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="37.1535%" y="693" width="0.0207%" height="15" fill="rgb(237,72,25)" fg:x="1796" fg:w="1"/><text x="37.4035%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (62 samples, 1.28%)</title><rect x="35.9123%" y="709" width="1.2826%" height="15" fill="rgb(244,70,9)" fg:x="1736" fg:w="62"/><text x="36.1623%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="37.1742%" y="693" width="0.0207%" height="15" fill="rgb(217,125,39)" fg:x="1797" fg:w="1"/><text x="37.4242%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::AllowJavascriptExecution::IsAllowed (2 samples, 0.04%)</title><rect x="37.1949%" y="709" width="0.0414%" height="15" fill="rgb(235,36,10)" fg:x="1798" fg:w="2"/><text x="37.4449%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtins::code_handle (3 samples, 0.06%)</title><rect x="37.2362%" y="709" width="0.0621%" height="15" fill="rgb(251,123,47)" fg:x="1800" fg:w="3"/><text x="37.4862%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::DumpOnJavascriptExecution::IsAllowed (1 samples, 0.02%)</title><rect x="37.2983%" y="709" width="0.0207%" height="15" fill="rgb(221,13,13)" fg:x="1803" fg:w="1"/><text x="37.5483%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (3 samples, 0.06%)</title><rect x="37.3190%" y="709" width="0.0621%" height="15" fill="rgb(238,131,9)" fg:x="1804" fg:w="3"/><text x="37.5690%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::~SaveContext (2 samples, 0.04%)</title><rect x="37.3811%" y="709" width="0.0414%" height="15" fill="rgb(211,50,8)" fg:x="1807" fg:w="2"/><text x="37.6311%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (84 samples, 1.74%)</title><rect x="35.7054%" y="725" width="1.7377%" height="15" fill="rgb(245,182,24)" fg:x="1726" fg:w="84"/><text x="35.9554%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.02%)</title><rect x="37.4224%" y="709" width="0.0207%" height="15" fill="rgb(242,14,37)" fg:x="1809" fg:w="1"/><text x="37.6724%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.04%)</title><rect x="37.4431%" y="725" width="0.0414%" height="15" fill="rgb(246,228,12)" fg:x="1810" fg:w="2"/><text x="37.6931%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::ClearKeptObjects (1 samples, 0.02%)</title><rect x="37.5879%" y="709" width="0.0207%" height="15" fill="rgb(213,55,15)" fg:x="1817" fg:w="1"/><text x="37.8379%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::ClearKeptObjects (1 samples, 0.02%)</title><rect x="37.6086%" y="709" width="0.0207%" height="15" fill="rgb(209,9,3)" fg:x="1818" fg:w="1"/><text x="37.8586%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::SuppressMicrotaskExecutionScope::SuppressMicrotaskExecutionScope (2 samples, 0.04%)</title><rect x="37.6707%" y="693" width="0.0414%" height="15" fill="rgb(230,59,30)" fg:x="1821" fg:w="2"/><text x="37.9207%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (5 samples, 0.10%)</title><rect x="37.8982%" y="661" width="0.1034%" height="15" fill="rgb(209,121,21)" fg:x="1832" fg:w="5"/><text x="38.1482%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="38.0017%" y="661" width="0.0207%" height="15" fill="rgb(220,109,13)" fg:x="1837" fg:w="1"/><text x="38.2517%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (2 samples, 0.04%)</title><rect x="38.1051%" y="645" width="0.0414%" height="15" fill="rgb(232,18,1)" fg:x="1842" fg:w="2"/><text x="38.3551%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (1 samples, 0.02%)</title><rect x="38.1465%" y="645" width="0.0207%" height="15" fill="rgb(215,41,42)" fg:x="1844" fg:w="1"/><text x="38.3965%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::GetCurrentStackPosition (1 samples, 0.02%)</title><rect x="38.1465%" y="629" width="0.0207%" height="15" fill="rgb(224,123,36)" fg:x="1844" fg:w="1"/><text x="38.3965%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (1 samples, 0.02%)</title><rect x="38.1671%" y="645" width="0.0207%" height="15" fill="rgb(240,125,3)" fg:x="1845" fg:w="1"/><text x="38.4171%" y="655.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (4 samples, 0.08%)</title><rect x="39.0360%" y="597" width="0.0827%" height="15" fill="rgb(205,98,50)" fg:x="1887" fg:w="4"/><text x="39.2860%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNullOrUndefined (3 samples, 0.06%)</title><rect x="39.1187%" y="597" width="0.0621%" height="15" fill="rgb(205,185,37)" fg:x="1891" fg:w="3"/><text x="39.3687%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNullOrUndefined (2 samples, 0.04%)</title><rect x="39.1808%" y="597" width="0.0414%" height="15" fill="rgb(238,207,15)" fg:x="1894" fg:w="2"/><text x="39.4308%" y="607.50"></text></g><g><title>0x11000d0e0 (3 samples, 0.06%)</title><rect x="39.3256%" y="581" width="0.0621%" height="15" fill="rgb(213,199,42)" fg:x="1901" fg:w="3"/><text x="39.5756%" y="591.50"></text></g><g><title>0x11000c4b8 (1 samples, 0.02%)</title><rect x="39.5118%" y="565" width="0.0207%" height="15" fill="rgb(235,201,11)" fg:x="1910" fg:w="1"/><text x="39.7618%" y="575.50"></text></g><g><title>0x11000bf2c (1 samples, 0.02%)</title><rect x="39.5118%" y="549" width="0.0207%" height="15" fill="rgb(207,46,11)" fg:x="1910" fg:w="1"/><text x="39.7618%" y="559.50"></text></g><g><title>0x11000c088 (1 samples, 0.02%)</title><rect x="39.5118%" y="533" width="0.0207%" height="15" fill="rgb(241,35,35)" fg:x="1910" fg:w="1"/><text x="39.7618%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_KeyedStoreIC (1 samples, 0.02%)</title><rect x="39.5118%" y="517" width="0.0207%" height="15" fill="rgb(243,32,47)" fg:x="1910" fg:w="1"/><text x="39.7618%" y="527.50"></text></g><g><title>0x11000c23c (1 samples, 0.02%)</title><rect x="39.5325%" y="533" width="0.0207%" height="15" fill="rgb(247,202,23)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_BaselineOutOfLinePrologue (1 samples, 0.02%)</title><rect x="39.5325%" y="517" width="0.0207%" height="15" fill="rgb(219,102,11)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="527.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="39.5325%" y="501" width="0.0207%" height="15" fill="rgb(243,110,44)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileOptimized (1 samples, 0.02%)</title><rect x="39.5325%" y="485" width="0.0207%" height="15" fill="rgb(222,74,54)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::CompileOptimized(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="39.5325%" y="469" width="0.0207%" height="15" fill="rgb(216,99,12)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::GetOrCompileOptimized(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::ConcurrencyMode, v8::internal::CodeKind, v8::internal::BytecodeOffset, v8::internal:: (1 samples, 0.02%)</title><rect x="39.5325%" y="453" width="0.0207%" height="15" fill="rgb(226,22,26)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::PipelineCompilationJob(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="39.5325%" y="437" width="0.0207%" height="15" fill="rgb(217,163,10)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineData::PipelineData (1 samples, 0.02%)</title><rect x="39.5325%" y="421" width="0.0207%" height="15" fill="rgb(213,25,53)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::MachineOperatorBuilder::MachineOperatorBuilder(v8::internal::Zone*, v8::internal::MachineRepresentation, v8::base::Flags (1 samples, 0.02%)</title><rect x="39.5325%" y="405" width="0.0207%" height="15" fill="rgb(252,105,26)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::MachineOperatorGlobalCache::MachineOperatorGlobalCache (1 samples, 0.02%)</title><rect x="39.5325%" y="389" width="0.0207%" height="15" fill="rgb(220,39,43)" fg:x="1911" fg:w="1"/><text x="39.7825%" y="399.50"></text></g><g><title>0x11000c64c (4 samples, 0.08%)</title><rect x="39.5325%" y="565" width="0.0827%" height="15" fill="rgb(229,68,48)" fg:x="1911" fg:w="4"/><text x="39.7825%" y="575.50"></text></g><g><title>0x11000bf2c (4 samples, 0.08%)</title><rect x="39.5325%" y="549" width="0.0827%" height="15" fill="rgb(252,8,32)" fg:x="1911" fg:w="4"/><text x="39.7825%" y="559.50"></text></g><g><title>0x11000c2d8 (3 samples, 0.06%)</title><rect x="39.5532%" y="533" width="0.0621%" height="15" fill="rgb(223,20,43)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (3 samples, 0.06%)</title><rect x="39.5532%" y="517" width="0.0621%" height="15" fill="rgb(229,81,49)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (3 samples, 0.06%)</title><rect x="39.5532%" y="501" width="0.0621%" height="15" fill="rgb(236,28,36)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (3 samples, 0.06%)</title><rect x="39.5532%" y="485" width="0.0621%" height="15" fill="rgb(249,185,26)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="495.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.06%)</title><rect x="39.5532%" y="469" width="0.0621%" height="15" fill="rgb(249,174,33)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="39.5532%" y="453" width="0.0621%" height="15" fill="rgb(233,201,37)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.06%)</title><rect x="39.5532%" y="437" width="0.0621%" height="15" fill="rgb(221,78,26)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (3 samples, 0.06%)</title><rect x="39.5532%" y="421" width="0.0621%" height="15" fill="rgb(250,127,30)" fg:x="1912" fg:w="3"/><text x="39.8032%" y="431.50"></text></g><g><title>0x11000ccec (1 samples, 0.02%)</title><rect x="39.6152%" y="565" width="0.0207%" height="15" fill="rgb(230,49,44)" fg:x="1915" fg:w="1"/><text x="39.8652%" y="575.50"></text></g><g><title>0x11000cd18 (2 samples, 0.04%)</title><rect x="39.6359%" y="565" width="0.0414%" height="15" fill="rgb(229,67,23)" fg:x="1916" fg:w="2"/><text x="39.8859%" y="575.50"></text></g><g><title>0x11000ce74 (2 samples, 0.04%)</title><rect x="39.6773%" y="565" width="0.0414%" height="15" fill="rgb(249,83,47)" fg:x="1918" fg:w="2"/><text x="39.9273%" y="575.50"></text></g><g><title>0x11000ce80 (1 samples, 0.02%)</title><rect x="39.7187%" y="565" width="0.0207%" height="15" fill="rgb(215,43,3)" fg:x="1920" fg:w="1"/><text x="39.9687%" y="575.50"></text></g><g><title>0x11000ce84 (1 samples, 0.02%)</title><rect x="39.7393%" y="565" width="0.0207%" height="15" fill="rgb(238,154,13)" fg:x="1921" fg:w="1"/><text x="39.9893%" y="575.50"></text></g><g><title>0x11000cfa0 (1 samples, 0.02%)</title><rect x="39.7600%" y="565" width="0.0207%" height="15" fill="rgb(219,56,2)" fg:x="1922" fg:w="1"/><text x="40.0100%" y="575.50"></text></g><g><title>0x11000cfa8 (6 samples, 0.12%)</title><rect x="39.7807%" y="565" width="0.1241%" height="15" fill="rgb(233,0,4)" fg:x="1923" fg:w="6"/><text x="40.0307%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (6 samples, 0.12%)</title><rect x="39.7807%" y="549" width="0.1241%" height="15" fill="rgb(235,30,7)" fg:x="1923" fg:w="6"/><text x="40.0307%" y="559.50"></text></g><g><title>0x11000cfb8 (1 samples, 0.02%)</title><rect x="39.9048%" y="565" width="0.0207%" height="15" fill="rgb(250,79,13)" fg:x="1929" fg:w="1"/><text x="40.1548%" y="575.50"></text></g><g><title>0x11000cfec (2 samples, 0.04%)</title><rect x="39.9255%" y="565" width="0.0414%" height="15" fill="rgb(211,146,34)" fg:x="1930" fg:w="2"/><text x="40.1755%" y="575.50"></text></g><g><title>0x11000cff4 (9 samples, 0.19%)</title><rect x="39.9669%" y="565" width="0.1862%" height="15" fill="rgb(228,22,38)" fg:x="1932" fg:w="9"/><text x="40.2169%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_KeyedLoadIC_Megamorphic (9 samples, 0.19%)</title><rect x="39.9669%" y="549" width="0.1862%" height="15" fill="rgb(235,168,5)" fg:x="1932" fg:w="9"/><text x="40.2169%" y="559.50"></text></g><g><title>0x11000c2d8 (1 samples, 0.02%)</title><rect x="40.2151%" y="549" width="0.0207%" height="15" fill="rgb(221,155,16)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="40.2151%" y="533" width="0.0207%" height="15" fill="rgb(215,215,53)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="40.2151%" y="517" width="0.0207%" height="15" fill="rgb(223,4,10)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="40.2151%" y="501" width="0.0207%" height="15" fill="rgb(234,103,6)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="511.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="40.2151%" y="485" width="0.0207%" height="15" fill="rgb(227,97,0)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="495.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="40.2151%" y="469" width="0.0207%" height="15" fill="rgb(234,150,53)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="40.2151%" y="453" width="0.0207%" height="15" fill="rgb(228,201,54)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.02%)</title><rect x="40.2151%" y="437" width="0.0207%" height="15" fill="rgb(222,22,37)" fg:x="1944" fg:w="1"/><text x="40.4651%" y="447.50"></text></g><g><title>0x11000dd30 (1 samples, 0.02%)</title><rect x="40.2358%" y="549" width="0.0207%" height="15" fill="rgb(237,53,32)" fg:x="1945" fg:w="1"/><text x="40.4858%" y="559.50"></text></g><g><title>0x11000dd50 (1 samples, 0.02%)</title><rect x="40.2565%" y="549" width="0.0207%" height="15" fill="rgb(233,25,53)" fg:x="1946" fg:w="1"/><text x="40.5065%" y="559.50"></text></g><g><title>0x11000dd54 (1 samples, 0.02%)</title><rect x="40.2772%" y="549" width="0.0207%" height="15" fill="rgb(210,40,34)" fg:x="1947" fg:w="1"/><text x="40.5272%" y="559.50"></text></g><g><title>0x11000dd78 (1 samples, 0.02%)</title><rect x="40.2979%" y="549" width="0.0207%" height="15" fill="rgb(241,220,44)" fg:x="1948" fg:w="1"/><text x="40.5479%" y="559.50"></text></g><g><title>0x11000de38 (1 samples, 0.02%)</title><rect x="40.3186%" y="549" width="0.0207%" height="15" fill="rgb(235,28,35)" fg:x="1949" fg:w="1"/><text x="40.5686%" y="559.50"></text></g><g><title>0x11000de94 (1 samples, 0.02%)</title><rect x="40.3393%" y="549" width="0.0207%" height="15" fill="rgb(210,56,17)" fg:x="1950" fg:w="1"/><text x="40.5893%" y="559.50"></text></g><g><title>0x11000de9c (1 samples, 0.02%)</title><rect x="40.3600%" y="549" width="0.0207%" height="15" fill="rgb(224,130,29)" fg:x="1951" fg:w="1"/><text x="40.6100%" y="559.50"></text></g><g><title>0x11000defc (1 samples, 0.02%)</title><rect x="40.3806%" y="549" width="0.0207%" height="15" fill="rgb(235,212,8)" fg:x="1952" fg:w="1"/><text x="40.6306%" y="559.50"></text></g><g><title>0x11000df28 (2 samples, 0.04%)</title><rect x="40.4013%" y="549" width="0.0414%" height="15" fill="rgb(223,33,50)" fg:x="1953" fg:w="2"/><text x="40.6513%" y="559.50"></text></g><g><title>0x11000df40 (1 samples, 0.02%)</title><rect x="40.4427%" y="549" width="0.0207%" height="15" fill="rgb(219,149,13)" fg:x="1955" fg:w="1"/><text x="40.6927%" y="559.50"></text></g><g><title>0x11000df7c (1 samples, 0.02%)</title><rect x="40.4634%" y="549" width="0.0207%" height="15" fill="rgb(250,156,29)" fg:x="1956" fg:w="1"/><text x="40.7134%" y="559.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (3 samples, 0.06%)</title><rect x="40.5254%" y="533" width="0.0621%" height="15" fill="rgb(216,193,19)" fg:x="1959" fg:w="3"/><text x="40.7754%" y="543.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="43.7526%" y="453" width="0.0621%" height="15" fill="rgb(216,135,14)" fg:x="2115" fg:w="3"/><text x="44.0026%" y="463.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;http_bench_json_ops::TcpStream::write::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="43.8146%" y="453" width="0.0207%" height="15" fill="rgb(241,47,5)" fg:x="2118" fg:w="1"/><text x="44.0646%" y="463.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="43.8353%" y="453" width="0.0207%" height="15" fill="rgb(233,42,35)" fg:x="2119" fg:w="1"/><text x="44.0853%" y="463.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (1 samples, 0.02%)</title><rect x="43.8353%" y="437" width="0.0207%" height="15" fill="rgb(231,13,6)" fg:x="2119" fg:w="1"/><text x="44.0853%" y="447.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (22 samples, 0.46%)</title><rect x="43.8560%" y="453" width="0.4551%" height="15" fill="rgb(207,181,40)" fg:x="2120" fg:w="22"/><text x="44.1060%" y="463.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="44.3111%" y="453" width="0.0207%" height="15" fill="rgb(254,173,49)" fg:x="2142" fg:w="1"/><text x="44.5611%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.97%)</title><rect x="43.4423%" y="469" width="0.9723%" height="15" fill="rgb(221,1,38)" fg:x="2100" fg:w="47"/><text x="43.6923%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.08%)</title><rect x="44.3318%" y="453" width="0.0827%" height="15" fill="rgb(206,124,46)" fg:x="2143" fg:w="4"/><text x="44.5818%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (5 samples, 0.10%)</title><rect x="44.4146%" y="469" width="0.1034%" height="15" fill="rgb(249,21,11)" fg:x="2147" fg:w="5"/><text x="44.6646%" y="479.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;http_bench_json_ops::TcpStream::write::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="44.5180%" y="469" width="0.0207%" height="15" fill="rgb(222,201,40)" fg:x="2152" fg:w="1"/><text x="44.7680%" y="479.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowImpl&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (1 samples, 0.02%)</title><rect x="44.5387%" y="469" width="0.0207%" height="15" fill="rgb(235,61,29)" fg:x="2153" fg:w="1"/><text x="44.7887%" y="479.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (2 samples, 0.04%)</title><rect x="44.5594%" y="469" width="0.0414%" height="15" fill="rgb(219,207,3)" fg:x="2154" fg:w="2"/><text x="44.8094%" y="479.50"></text></g><g><title>http_bench_json_ops`std__shared_ptr__v8__BackingStore__get (3 samples, 0.06%)</title><rect x="44.6007%" y="469" width="0.0621%" height="15" fill="rgb(222,56,46)" fg:x="2156" fg:w="3"/><text x="44.8507%" y="479.50"></text></g><g><title>http_bench_json_ops`std__shared_ptr__v8__BackingStore__reset (3 samples, 0.06%)</title><rect x="44.6628%" y="469" width="0.0621%" height="15" fill="rgb(239,76,54)" fg:x="2159" fg:w="3"/><text x="44.9128%" y="479.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (3 samples, 0.06%)</title><rect x="44.7249%" y="469" width="0.0621%" height="15" fill="rgb(231,124,27)" fg:x="2162" fg:w="3"/><text x="44.9749%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::BackingStore::ByteLength (2 samples, 0.04%)</title><rect x="44.7869%" y="469" width="0.0414%" height="15" fill="rgb(249,195,6)" fg:x="2165" fg:w="2"/><text x="45.0369%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::BackingStore::Data (3 samples, 0.06%)</title><rect x="44.8283%" y="469" width="0.0621%" height="15" fill="rgb(237,174,47)" fg:x="2167" fg:w="3"/><text x="45.0783%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1,552 samples, 32.11%)</title><rect x="44.8904%" y="469" width="32.1059%" height="15" fill="rgb(206,201,31)" fg:x="2170" fg:w="1552"/><text x="45.1404%" y="479.50">libsystem_kernel.dylib`__sendto</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.08%)</title><rect x="77.1204%" y="437" width="0.0827%" height="15" fill="rgb(231,57,52)" fg:x="3728" fg:w="4"/><text x="77.3704%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.04%)</title><rect x="77.1618%" y="421" width="0.0414%" height="15" fill="rgb(248,177,22)" fg:x="3730" fg:w="2"/><text x="77.4118%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.23%)</title><rect x="76.9963%" y="469" width="0.2276%" height="15" fill="rgb(215,211,37)" fg:x="3722" fg:w="11"/><text x="77.2463%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.12%)</title><rect x="77.0997%" y="453" width="0.1241%" height="15" fill="rgb(241,128,51)" fg:x="3727" fg:w="6"/><text x="77.3497%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="77.2031%" y="437" width="0.0207%" height="15" fill="rgb(227,165,31)" fg:x="3732" fg:w="1"/><text x="77.4531%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.06%)</title><rect x="77.2238%" y="469" width="0.0621%" height="15" fill="rgb(228,167,24)" fg:x="3733" fg:w="3"/><text x="77.4738%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.08%)</title><rect x="77.2859%" y="469" width="0.0827%" height="15" fill="rgb(228,143,12)" fg:x="3736" fg:w="4"/><text x="77.5359%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,659 samples, 34.32%)</title><rect x="43.0699%" y="485" width="34.3194%" height="15" fill="rgb(249,149,8)" fg:x="2082" fg:w="1659"/><text x="43.3199%" y="495.50">http_bench_json_ops`&lt;core::future::from_generator::GenFu..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="77.3686%" y="469" width="0.0207%" height="15" fill="rgb(243,35,44)" fg:x="3740" fg:w="1"/><text x="77.6186%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="77.3893%" y="485" width="0.0414%" height="15" fill="rgb(246,89,9)" fg:x="3741" fg:w="2"/><text x="77.6393%" y="495.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="77.4307%" y="485" width="0.0207%" height="15" fill="rgb(233,213,13)" fg:x="3743" fg:w="1"/><text x="77.6807%" y="495.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="77.4514%" y="485" width="0.0207%" height="15" fill="rgb(233,141,41)" fg:x="3744" fg:w="1"/><text x="77.7014%" y="495.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::write::{{closure}}&gt;&gt; (2 samples, 0.04%)</title><rect x="77.4721%" y="485" width="0.0414%" height="15" fill="rgb(239,167,4)" fg:x="3745" fg:w="2"/><text x="77.7221%" y="495.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::op_write::call::{{closure}}&gt;&gt; (3 samples, 0.06%)</title><rect x="77.5134%" y="485" width="0.0621%" height="15" fill="rgb(209,217,16)" fg:x="3747" fg:w="3"/><text x="77.7634%" y="495.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::io::BufView&gt; (2 samples, 0.04%)</title><rect x="77.5755%" y="485" width="0.0414%" height="15" fill="rgb(219,88,35)" fg:x="3750" fg:w="2"/><text x="77.8255%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="77.6583%" y="453" width="0.0207%" height="15" fill="rgb(220,193,23)" fg:x="3754" fg:w="1"/><text x="77.9083%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.23%)</title><rect x="77.6376%" y="469" width="0.2276%" height="15" fill="rgb(230,90,52)" fg:x="3753" fg:w="11"/><text x="77.8876%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.19%)</title><rect x="77.6789%" y="453" width="0.1862%" height="15" fill="rgb(252,106,19)" fg:x="3755" fg:w="9"/><text x="77.9289%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.14%)</title><rect x="77.7203%" y="437" width="0.1448%" height="15" fill="rgb(206,74,20)" fg:x="3757" fg:w="7"/><text x="77.9703%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="77.8444%" y="421" width="0.0207%" height="15" fill="rgb(230,138,44)" fg:x="3763" fg:w="1"/><text x="78.0944%" y="431.50"></text></g><g><title>http_bench_json_ops`deno_core::resources::Resource::write_all (13 samples, 0.27%)</title><rect x="77.6169%" y="485" width="0.2689%" height="15" fill="rgb(235,182,43)" fg:x="3752" fg:w="13"/><text x="77.8669%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="77.8651%" y="469" width="0.0207%" height="15" fill="rgb(242,16,51)" fg:x="3764" fg:w="1"/><text x="78.1151%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.25%)</title><rect x="77.8858%" y="485" width="0.2482%" height="15" fill="rgb(248,9,4)" fg:x="3765" fg:w="12"/><text x="78.1358%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.08%)</title><rect x="78.0513%" y="469" width="0.0827%" height="15" fill="rgb(210,31,22)" fg:x="3773" fg:w="4"/><text x="78.3013%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="78.1341%" y="485" width="0.0207%" height="15" fill="rgb(239,54,39)" fg:x="3777" fg:w="1"/><text x="78.3841%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.04%)</title><rect x="78.1547%" y="485" width="0.0414%" height="15" fill="rgb(230,99,41)" fg:x="3778" fg:w="2"/><text x="78.4047%" y="495.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,758 samples, 36.37%)</title><rect x="41.8494%" y="501" width="36.3674%" height="15" fill="rgb(253,106,12)" fg:x="2023" fg:w="1758"/><text x="42.0994%" y="511.50">http_bench_json_ops`&lt;core::future::from_generator::GenFutur..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="78.1961%" y="485" width="0.0207%" height="15" fill="rgb(213,46,41)" fg:x="3780" fg:w="1"/><text x="78.4461%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBuffer::GetBackingStore (9 samples, 0.19%)</title><rect x="78.2789%" y="485" width="0.1862%" height="15" fill="rgb(215,133,35)" fg:x="3784" fg:w="9"/><text x="78.5289%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::Buffer (4 samples, 0.08%)</title><rect x="78.4650%" y="485" width="0.0827%" height="15" fill="rgb(213,28,5)" fg:x="3793" fg:w="4"/><text x="78.7150%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::JSTypedArray::GetBuffer (3 samples, 0.06%)</title><rect x="78.4857%" y="469" width="0.0621%" height="15" fill="rgb(215,77,49)" fg:x="3794" fg:w="3"/><text x="78.7357%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as serde_v8::magic::transl8::FromV8&gt;::from_v8 (23 samples, 0.48%)</title><rect x="78.2168%" y="501" width="0.4758%" height="15" fill="rgb(248,100,22)" fg:x="3781" fg:w="23"/><text x="78.4668%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (7 samples, 0.14%)</title><rect x="78.5478%" y="485" width="0.1448%" height="15" fill="rgb(208,67,9)" fg:x="3797" fg:w="7"/><text x="78.7978%" y="495.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="78.6926%" y="501" width="0.0207%" height="15" fill="rgb(219,133,21)" fg:x="3804" fg:w="1"/><text x="78.9426%" y="511.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;deno_core::ops_builtin::op_write::call::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="78.7133%" y="501" width="0.0207%" height="15" fill="rgb(246,46,29)" fg:x="3805" fg:w="1"/><text x="78.9633%" y="511.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::ops::OpResult&gt; (4 samples, 0.08%)</title><rect x="78.7340%" y="501" width="0.0827%" height="15" fill="rgb(246,185,52)" fg:x="3806" fg:w="4"/><text x="78.9840%" y="511.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (6 samples, 0.12%)</title><rect x="78.8167%" y="501" width="0.1241%" height="15" fill="rgb(252,136,11)" fg:x="3810" fg:w="6"/><text x="79.0667%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (2 samples, 0.04%)</title><rect x="78.8995%" y="485" width="0.0414%" height="15" fill="rgb(219,138,53)" fg:x="3814" fg:w="2"/><text x="79.1495%" y="495.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::data::ScopeTypeSpecificData&gt; (1 samples, 0.02%)</title><rect x="78.9408%" y="501" width="0.0207%" height="15" fill="rgb(211,51,23)" fg:x="3816" fg:w="1"/><text x="79.1908%" y="511.50"></text></g><g><title>http_bench_json_ops`deno_core::ops::OpResult::to_v8 (2 samples, 0.04%)</title><rect x="78.9615%" y="501" width="0.0414%" height="15" fill="rgb(247,221,28)" fg:x="3817" fg:w="2"/><text x="79.2115%" y="511.50"></text></g><g><title>http_bench_json_ops`deno_core::resources::Resource::write_all (1 samples, 0.02%)</title><rect x="79.0029%" y="501" width="0.0207%" height="15" fill="rgb(251,222,45)" fg:x="3819" fg:w="1"/><text x="79.2529%" y="511.50"></text></g><g><title>http_bench_json_ops`serde::de::impls::_&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="79.0236%" y="501" width="0.0207%" height="15" fill="rgb(217,162,53)" fg:x="3820" fg:w="1"/><text x="79.2736%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBuffer::GetBackingStore (1 samples, 0.02%)</title><rect x="79.0443%" y="501" width="0.0207%" height="15" fill="rgb(229,93,14)" fg:x="3821" fg:w="1"/><text x="79.2943%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::Buffer (1 samples, 0.02%)</title><rect x="79.0650%" y="501" width="0.0207%" height="15" fill="rgb(209,67,49)" fg:x="3822" fg:w="1"/><text x="79.3150%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::ByteLength (1 samples, 0.02%)</title><rect x="79.0856%" y="501" width="0.0207%" height="15" fill="rgb(213,87,29)" fg:x="3823" fg:w="1"/><text x="79.3356%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::ByteOffset (2 samples, 0.04%)</title><rect x="79.1063%" y="501" width="0.0414%" height="15" fill="rgb(205,151,52)" fg:x="3824" fg:w="2"/><text x="79.3563%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (1 samples, 0.02%)</title><rect x="79.1477%" y="501" width="0.0207%" height="15" fill="rgb(253,215,39)" fg:x="3826" fg:w="1"/><text x="79.3977%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (1 samples, 0.02%)</title><rect x="79.1684%" y="501" width="0.0207%" height="15" fill="rgb(221,220,41)" fg:x="3827" fg:w="1"/><text x="79.4184%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::CallDepthScope&lt;true&gt;::CallDepthScope(v8::internal::Isolate*, v8::Local (8 samples, 0.17%)</title><rect x="79.4166%" y="485" width="0.1655%" height="15" fill="rgb(218,133,21)" fg:x="3839" fg:w="8"/><text x="79.6666%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.04%)</title><rect x="79.5408%" y="469" width="0.0414%" height="15" fill="rgb(221,193,43)" fg:x="3845" fg:w="2"/><text x="79.7908%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::EscapableHandleScope::EscapableHandleScope (2 samples, 0.04%)</title><rect x="79.5821%" y="485" width="0.0414%" height="15" fill="rgb(240,128,52)" fg:x="3847" fg:w="2"/><text x="79.8321%" y="495.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (5 samples, 0.10%)</title><rect x="79.9338%" y="469" width="0.1034%" height="15" fill="rgb(253,114,12)" fg:x="3864" fg:w="5"/><text x="80.1838%" y="479.50"></text></g><g><title>0x11000e4e4 (1 samples, 0.02%)</title><rect x="80.1820%" y="437" width="0.0207%" height="15" fill="rgb(215,223,47)" fg:x="3876" fg:w="1"/><text x="80.4320%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsAny (3 samples, 0.06%)</title><rect x="80.2027%" y="437" width="0.0621%" height="15" fill="rgb(248,225,23)" fg:x="3877" fg:w="3"/><text x="80.4527%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsAny (2 samples, 0.04%)</title><rect x="80.2648%" y="437" width="0.0414%" height="15" fill="rgb(250,108,0)" fg:x="3880" fg:w="2"/><text x="80.5148%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (6 samples, 0.12%)</title><rect x="80.3062%" y="437" width="0.1241%" height="15" fill="rgb(228,208,7)" fg:x="3882" fg:w="6"/><text x="80.5562%" y="447.50"></text></g><g><title>0x11000e260 (1 samples, 0.02%)</title><rect x="80.5130%" y="421" width="0.0207%" height="15" fill="rgb(244,45,10)" fg:x="3892" fg:w="1"/><text x="80.7630%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (1 samples, 0.02%)</title><rect x="80.5751%" y="389" width="0.0207%" height="15" fill="rgb(207,125,25)" fg:x="3895" fg:w="1"/><text x="80.8251%" y="399.50"></text></g><g><title>0x11000e4cc (7 samples, 0.14%)</title><rect x="80.5337%" y="421" width="0.1448%" height="15" fill="rgb(210,195,18)" fg:x="3893" fg:w="7"/><text x="80.7837%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (7 samples, 0.14%)</title><rect x="80.5337%" y="405" width="0.1448%" height="15" fill="rgb(249,80,12)" fg:x="3893" fg:w="7"/><text x="80.7837%" y="415.50"></text></g><g><title>http_bench_json_ops`Builtins_ResolvePromise (4 samples, 0.08%)</title><rect x="80.5958%" y="389" width="0.0827%" height="15" fill="rgb(221,65,9)" fg:x="3896" fg:w="4"/><text x="80.8458%" y="399.50"></text></g><g><title>http_bench_json_ops`Builtins_FulfillPromise (4 samples, 0.08%)</title><rect x="80.5958%" y="373" width="0.0827%" height="15" fill="rgb(235,49,36)" fg:x="3896" fg:w="4"/><text x="80.8458%" y="383.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNullOrUndefined (1 samples, 0.02%)</title><rect x="80.6785%" y="421" width="0.0207%" height="15" fill="rgb(225,32,20)" fg:x="3900" fg:w="1"/><text x="80.9285%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (31 samples, 0.64%)</title><rect x="80.1200%" y="453" width="0.6413%" height="15" fill="rgb(215,141,46)" fg:x="3873" fg:w="31"/><text x="80.3700%" y="463.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (16 samples, 0.33%)</title><rect x="80.4303%" y="437" width="0.3310%" height="15" fill="rgb(250,160,47)" fg:x="3888" fg:w="16"/><text x="80.6803%" y="447.50"></text></g><g><title>http_bench_json_ops`Builtins_PromiseCapabilityDefaultResolve (3 samples, 0.06%)</title><rect x="80.6992%" y="421" width="0.0621%" height="15" fill="rgb(216,222,40)" fg:x="3901" fg:w="3"/><text x="80.9492%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="80.7613%" y="453" width="0.0207%" height="15" fill="rgb(234,217,39)" fg:x="3904" fg:w="1"/><text x="81.0113%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (38 samples, 0.79%)</title><rect x="80.0372%" y="469" width="0.7861%" height="15" fill="rgb(207,178,40)" fg:x="3869" fg:w="38"/><text x="80.2872%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (2 samples, 0.04%)</title><rect x="80.7820%" y="453" width="0.0414%" height="15" fill="rgb(221,136,13)" fg:x="3905" fg:w="2"/><text x="81.0320%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (1 samples, 0.02%)</title><rect x="80.8233%" y="469" width="0.0207%" height="15" fill="rgb(249,199,10)" fg:x="3907" fg:w="1"/><text x="81.0733%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (60 samples, 1.24%)</title><rect x="79.6235%" y="485" width="1.2412%" height="15" fill="rgb(249,222,13)" fg:x="3849" fg:w="60"/><text x="79.8735%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScopeInfo::is_script_scope (1 samples, 0.02%)</title><rect x="80.8440%" y="469" width="0.0207%" height="15" fill="rgb(244,185,38)" fg:x="3908" fg:w="1"/><text x="81.0940%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (83 samples, 1.72%)</title><rect x="79.1891%" y="501" width="1.7170%" height="15" fill="rgb(236,202,9)" fg:x="3828" fg:w="83"/><text x="79.4391%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::InterruptsScope::InterruptsScope (2 samples, 0.04%)</title><rect x="80.8647%" y="485" width="0.0414%" height="15" fill="rgb(250,229,37)" fg:x="3909" fg:w="2"/><text x="81.1147%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (2 samples, 0.04%)</title><rect x="80.9061%" y="501" width="0.0414%" height="15" fill="rgb(206,174,23)" fg:x="3911" fg:w="2"/><text x="81.1561%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::GetCurrentContext (3 samples, 0.06%)</title><rect x="80.9475%" y="501" width="0.0621%" height="15" fill="rgb(211,33,43)" fg:x="3913" fg:w="3"/><text x="81.1975%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::Number::Value (1 samples, 0.02%)</title><rect x="81.0095%" y="501" width="0.0207%" height="15" fill="rgb(245,58,50)" fg:x="3916" fg:w="1"/><text x="81.2595%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (4 samples, 0.08%)</title><rect x="81.0302%" y="501" width="0.0827%" height="15" fill="rgb(244,68,36)" fg:x="3917" fg:w="4"/><text x="81.2802%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::Value::IsArrayBufferView (2 samples, 0.04%)</title><rect x="81.1129%" y="501" width="0.0414%" height="15" fill="rgb(232,229,15)" fg:x="3921" fg:w="2"/><text x="81.3629%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (1 samples, 0.02%)</title><rect x="81.1543%" y="501" width="0.0207%" height="15" fill="rgb(254,30,23)" fg:x="3923" fg:w="1"/><text x="81.4043%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (3 samples, 0.06%)</title><rect x="81.1750%" y="501" width="0.0621%" height="15" fill="rgb(235,160,14)" fg:x="3924" fg:w="3"/><text x="81.4250%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (2 samples, 0.04%)</title><rect x="81.2371%" y="501" width="0.0414%" height="15" fill="rgb(212,155,44)" fg:x="3927" fg:w="2"/><text x="81.4871%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (8 samples, 0.17%)</title><rect x="81.2991%" y="485" width="0.1655%" height="15" fill="rgb(226,2,50)" fg:x="3930" fg:w="8"/><text x="81.5491%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::GetCurrentStackPosition (1 samples, 0.02%)</title><rect x="81.4439%" y="469" width="0.0207%" height="15" fill="rgb(234,177,6)" fg:x="3937" fg:w="1"/><text x="81.6939%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (10 samples, 0.21%)</title><rect x="81.2784%" y="501" width="0.2069%" height="15" fill="rgb(217,24,9)" fg:x="3929" fg:w="10"/><text x="81.5284%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::RegisterTryCatchHandler (1 samples, 0.02%)</title><rect x="81.4646%" y="485" width="0.0207%" height="15" fill="rgb(220,13,46)" fg:x="3938" fg:w="1"/><text x="81.7146%" y="495.50"></text></g><g><title>http_bench_json_ops`v8__ArrayBufferView__ByteLength (1 samples, 0.02%)</title><rect x="81.4853%" y="501" width="0.0207%" height="15" fill="rgb(239,221,27)" fg:x="3939" fg:w="1"/><text x="81.7353%" y="511.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (7 samples, 0.14%)</title><rect x="81.5060%" y="501" width="0.1448%" height="15" fill="rgb(222,198,25)" fg:x="3940" fg:w="7"/><text x="81.7560%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (5 samples, 0.10%)</title><rect x="81.5474%" y="485" width="0.1034%" height="15" fill="rgb(211,99,13)" fg:x="3942" fg:w="5"/><text x="81.7974%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="81.6922%" y="485" width="0.0207%" height="15" fill="rgb(232,111,31)" fg:x="3949" fg:w="1"/><text x="81.9422%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.17%)</title><rect x="81.6508%" y="501" width="0.1655%" height="15" fill="rgb(245,82,37)" fg:x="3947" fg:w="8"/><text x="81.9008%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.10%)</title><rect x="81.7129%" y="485" width="0.1034%" height="15" fill="rgb(227,149,46)" fg:x="3950" fg:w="5"/><text x="81.9629%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.08%)</title><rect x="81.7336%" y="469" width="0.0827%" height="15" fill="rgb(218,36,50)" fg:x="3951" fg:w="4"/><text x="81.9836%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="81.7956%" y="453" width="0.0207%" height="15" fill="rgb(226,80,48)" fg:x="3954" fg:w="1"/><text x="82.0456%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.17%)</title><rect x="81.8163%" y="501" width="0.1655%" height="15" fill="rgb(238,224,15)" fg:x="3955" fg:w="8"/><text x="82.0663%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.25%)</title><rect x="81.9818%" y="501" width="0.2482%" height="15" fill="rgb(241,136,10)" fg:x="3963" fg:w="12"/><text x="82.2318%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.06%)</title><rect x="82.1680%" y="485" width="0.0621%" height="15" fill="rgb(208,32,45)" fg:x="3972" fg:w="3"/><text x="82.4180%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.04%)</title><rect x="82.2300%" y="501" width="0.0414%" height="15" fill="rgb(207,135,9)" fg:x="3975" fg:w="2"/><text x="82.4800%" y="511.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2,012 samples, 41.62%)</title><rect x="40.6703%" y="517" width="41.6218%" height="15" fill="rgb(206,86,44)" fg:x="1966" fg:w="2012"/><text x="40.9203%" y="527.50">http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="82.2714%" y="501" width="0.0207%" height="15" fill="rgb(245,177,15)" fg:x="3977" fg:w="1"/><text x="82.5214%" y="511.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as serde_v8::magic::transl8::FromV8&gt;::from_v8 (5 samples, 0.10%)</title><rect x="82.2921%" y="517" width="0.1034%" height="15" fill="rgb(206,64,50)" fg:x="3978" fg:w="5"/><text x="82.5421%" y="527.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (1 samples, 0.02%)</title><rect x="82.3955%" y="517" width="0.0207%" height="15" fill="rgb(234,36,40)" fg:x="3983" fg:w="1"/><text x="82.6455%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::External::Value (1 samples, 0.02%)</title><rect x="82.4162%" y="517" width="0.0207%" height="15" fill="rgb(213,64,8)" fg:x="3984" fg:w="1"/><text x="82.6662%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::GetCurrentContext (1 samples, 0.02%)</title><rect x="82.4369%" y="517" width="0.0207%" height="15" fill="rgb(210,75,36)" fg:x="3985" fg:w="1"/><text x="82.6869%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::Value::IsFunction (1 samples, 0.02%)</title><rect x="82.4576%" y="517" width="0.0207%" height="15" fill="rgb(229,88,21)" fg:x="3986" fg:w="1"/><text x="82.7076%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::Value::IsInt32 (2 samples, 0.04%)</title><rect x="82.4783%" y="517" width="0.0414%" height="15" fill="rgb(252,204,47)" fg:x="3987" fg:w="2"/><text x="82.7283%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Destroy (1 samples, 0.02%)</title><rect x="82.5197%" y="517" width="0.0207%" height="15" fill="rgb(208,77,27)" fg:x="3989" fg:w="1"/><text x="82.7697%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (1 samples, 0.02%)</title><rect x="82.5403%" y="517" width="0.0207%" height="15" fill="rgb(221,76,26)" fg:x="3990" fg:w="1"/><text x="82.7903%" y="527.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (1 samples, 0.02%)</title><rect x="82.5610%" y="517" width="0.0207%" height="15" fill="rgb(225,139,18)" fg:x="3991" fg:w="1"/><text x="82.8110%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="82.5817%" y="517" width="0.0207%" height="15" fill="rgb(230,137,11)" fg:x="3992" fg:w="1"/><text x="82.8317%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="82.6024%" y="517" width="0.0207%" height="15" fill="rgb(212,28,1)" fg:x="3993" fg:w="1"/><text x="82.8524%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="82.6231%" y="517" width="0.0207%" height="15" fill="rgb(248,164,17)" fg:x="3994" fg:w="1"/><text x="82.8731%" y="527.50"></text></g><g><title>0x11000df88 (2,039 samples, 42.18%)</title><rect x="40.4841%" y="549" width="42.1804%" height="15" fill="rgb(222,171,42)" fg:x="1957" fg:w="2039"/><text x="40.7341%" y="559.50">0x11000df88</text></g><g><title>http_bench_json_ops`Builtins_CallApiCallback (2,034 samples, 42.08%)</title><rect x="40.5875%" y="533" width="42.0770%" height="15" fill="rgb(243,84,45)" fg:x="1962" fg:w="2034"/><text x="40.8375%" y="543.50">http_bench_json_ops`Builtins_CallApiCallback</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="82.6438%" y="517" width="0.0207%" height="15" fill="rgb(252,49,23)" fg:x="3995" fg:w="1"/><text x="82.8938%" y="527.50"></text></g><g><title>0x11000df94 (1 samples, 0.02%)</title><rect x="82.6645%" y="549" width="0.0207%" height="15" fill="rgb(215,19,7)" fg:x="3996" fg:w="1"/><text x="82.9145%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::AllocationCounter::InvokeAllocationObservers (1 samples, 0.02%)</title><rect x="82.6851%" y="485" width="0.0207%" height="15" fill="rgb(238,81,41)" fg:x="3997" fg:w="1"/><text x="82.9351%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::Size (1 samples, 0.02%)</title><rect x="82.6851%" y="469" width="0.0207%" height="15" fill="rgb(210,199,37)" fg:x="3997" fg:w="1"/><text x="82.9351%" y="479.50"></text></g><g><title>0x11000d028 (2,058 samples, 42.57%)</title><rect x="40.1531%" y="565" width="42.5734%" height="15" fill="rgb(244,192,49)" fg:x="1941" fg:w="2058"/><text x="40.4031%" y="575.50">0x11000d028</text></g><g><title>0x11000e05c (2 samples, 0.04%)</title><rect x="82.6851%" y="549" width="0.0414%" height="15" fill="rgb(226,211,11)" fg:x="3997" fg:w="2"/><text x="82.9351%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.04%)</title><rect x="82.6851%" y="533" width="0.0414%" height="15" fill="rgb(236,162,54)" fg:x="3997" fg:w="2"/><text x="82.9351%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (2 samples, 0.04%)</title><rect x="82.6851%" y="517" width="0.0414%" height="15" fill="rgb(220,229,9)" fg:x="3997" fg:w="2"/><text x="82.9351%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (2 samples, 0.04%)</title><rect x="82.6851%" y="501" width="0.0414%" height="15" fill="rgb(250,87,22)" fg:x="3997" fg:w="2"/><text x="82.9351%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.02%)</title><rect x="82.7058%" y="485" width="0.0207%" height="15" fill="rgb(239,43,17)" fg:x="3998" fg:w="1"/><text x="82.9558%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::CreateFillerObjectAt (1 samples, 0.02%)</title><rect x="82.7058%" y="469" width="0.0207%" height="15" fill="rgb(231,177,25)" fg:x="3998" fg:w="1"/><text x="82.9558%" y="479.50"></text></g><g><title>0x11000d034 (1 samples, 0.02%)</title><rect x="82.7265%" y="565" width="0.0207%" height="15" fill="rgb(219,179,1)" fg:x="3999" fg:w="1"/><text x="82.9765%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_EnqueueMicrotask (2 samples, 0.04%)</title><rect x="82.9541%" y="533" width="0.0414%" height="15" fill="rgb(238,219,53)" fg:x="4010" fg:w="2"/><text x="83.2041%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitCaught (17 samples, 0.35%)</title><rect x="82.7472%" y="549" width="0.3517%" height="15" fill="rgb(232,167,36)" fg:x="4000" fg:w="17"/><text x="82.9972%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (5 samples, 0.10%)</title><rect x="82.9954%" y="533" width="0.1034%" height="15" fill="rgb(244,19,51)" fg:x="4012" fg:w="5"/><text x="83.2454%" y="543.50"></text></g><g><title>0x11000d03c (18 samples, 0.37%)</title><rect x="82.7472%" y="565" width="0.3724%" height="15" fill="rgb(224,6,22)" fg:x="4000" fg:w="18"/><text x="82.9972%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (1 samples, 0.02%)</title><rect x="83.0989%" y="549" width="0.0207%" height="15" fill="rgb(224,145,5)" fg:x="4017" fg:w="1"/><text x="83.3489%" y="559.50"></text></g><g><title>0x11000d04c (1 samples, 0.02%)</title><rect x="83.1196%" y="565" width="0.0207%" height="15" fill="rgb(234,130,49)" fg:x="4018" fg:w="1"/><text x="83.3696%" y="575.50"></text></g><g><title>0x11000d09c (1 samples, 0.02%)</title><rect x="83.1403%" y="565" width="0.0207%" height="15" fill="rgb(254,6,2)" fg:x="4019" fg:w="1"/><text x="83.3903%" y="575.50"></text></g><g><title>0x11000d0bc (1 samples, 0.02%)</title><rect x="83.1609%" y="565" width="0.0207%" height="15" fill="rgb(208,96,46)" fg:x="4020" fg:w="1"/><text x="83.4109%" y="575.50"></text></g><g><title>0x11000d0d0 (2 samples, 0.04%)</title><rect x="83.1816%" y="565" width="0.0414%" height="15" fill="rgb(239,3,39)" fg:x="4021" fg:w="2"/><text x="83.4316%" y="575.50"></text></g><g><title>0x11000d134 (1 samples, 0.02%)</title><rect x="83.2230%" y="565" width="0.0207%" height="15" fill="rgb(233,210,1)" fg:x="4023" fg:w="1"/><text x="83.4730%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (1 samples, 0.02%)</title><rect x="83.2230%" y="549" width="0.0207%" height="15" fill="rgb(244,137,37)" fg:x="4023" fg:w="1"/><text x="83.4730%" y="559.50"></text></g><g><title>0x11000d178 (7 samples, 0.14%)</title><rect x="83.2437%" y="565" width="0.1448%" height="15" fill="rgb(240,136,2)" fg:x="4024" fg:w="7"/><text x="83.4937%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_KeyedLoadIC_Megamorphic (7 samples, 0.14%)</title><rect x="83.2437%" y="549" width="0.1448%" height="15" fill="rgb(239,18,37)" fg:x="4024" fg:w="7"/><text x="83.4937%" y="559.50"></text></g><g><title>0x11000d1a0 (1 samples, 0.02%)</title><rect x="83.3885%" y="565" width="0.0207%" height="15" fill="rgb(218,185,22)" fg:x="4031" fg:w="1"/><text x="83.6385%" y="575.50"></text></g><g><title>0x11000d870 (1 samples, 0.02%)</title><rect x="83.4092%" y="549" width="0.0207%" height="15" fill="rgb(225,218,4)" fg:x="4032" fg:w="1"/><text x="83.6592%" y="559.50"></text></g><g><title>0x11000d87c (3 samples, 0.06%)</title><rect x="83.4299%" y="549" width="0.0621%" height="15" fill="rgb(230,182,32)" fg:x="4033" fg:w="3"/><text x="83.6799%" y="559.50"></text></g><g><title>0x11000d8d4 (1 samples, 0.02%)</title><rect x="83.4919%" y="549" width="0.0207%" height="15" fill="rgb(242,56,43)" fg:x="4036" fg:w="1"/><text x="83.7419%" y="559.50"></text></g><g><title>0x11000d97c (1 samples, 0.02%)</title><rect x="83.5126%" y="549" width="0.0207%" height="15" fill="rgb(233,99,24)" fg:x="4037" fg:w="1"/><text x="83.7626%" y="559.50"></text></g><g><title>0x11000d99c (1 samples, 0.02%)</title><rect x="83.5333%" y="549" width="0.0207%" height="15" fill="rgb(234,209,42)" fg:x="4038" fg:w="1"/><text x="83.7833%" y="559.50"></text></g><g><title>0x11000d9f4 (1 samples, 0.02%)</title><rect x="83.5540%" y="549" width="0.0207%" height="15" fill="rgb(227,7,12)" fg:x="4039" fg:w="1"/><text x="83.8040%" y="559.50"></text></g><g><title>0x11000d9fc (1 samples, 0.02%)</title><rect x="83.5747%" y="549" width="0.0207%" height="15" fill="rgb(245,203,43)" fg:x="4040" fg:w="1"/><text x="83.8247%" y="559.50"></text></g><g><title>0x11000da1c (1 samples, 0.02%)</title><rect x="83.5954%" y="549" width="0.0207%" height="15" fill="rgb(238,205,33)" fg:x="4041" fg:w="1"/><text x="83.8454%" y="559.50"></text></g><g><title>0x11000da34 (1 samples, 0.02%)</title><rect x="83.6161%" y="549" width="0.0207%" height="15" fill="rgb(231,56,7)" fg:x="4042" fg:w="1"/><text x="83.8661%" y="559.50"></text></g><g><title>0x11000da48 (3 samples, 0.06%)</title><rect x="83.6367%" y="549" width="0.0621%" height="15" fill="rgb(244,186,29)" fg:x="4043" fg:w="3"/><text x="83.8867%" y="559.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2 samples, 0.04%)</title><rect x="83.6988%" y="533" width="0.0414%" height="15" fill="rgb(234,111,31)" fg:x="4046" fg:w="2"/><text x="83.9488%" y="543.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="83.7609%" y="517" width="0.0414%" height="15" fill="rgb(241,149,10)" fg:x="4049" fg:w="2"/><text x="84.0109%" y="527.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;deno_core::async_cell::internal::AsyncBorrowFutureImpl&lt;tokio::net::tcp::split_owned::OwnedReadHalf,deno_core::async_cell::internal::Exclusive&gt;&gt; (2 samples, 0.04%)</title><rect x="86.1192%" y="453" width="0.0414%" height="15" fill="rgb(249,206,44)" fg:x="4163" fg:w="2"/><text x="86.3692%" y="463.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::Node::register (4 samples, 0.08%)</title><rect x="86.1605%" y="453" width="0.0827%" height="15" fill="rgb(251,153,30)" fg:x="4165" fg:w="4"/><text x="86.4105%" y="463.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cell::internal::_&lt;impl deno_core::async_cell::AsyncRefCell&lt;T&gt;&gt;::wake_waiters (27 samples, 0.56%)</title><rect x="86.2433%" y="453" width="0.5585%" height="15" fill="rgb(239,152,38)" fg:x="4169" fg:w="27"/><text x="86.4933%" y="463.50"></text></g><g><title>http_bench_json_ops`futures_task::noop_waker::noop_clone (2 samples, 0.04%)</title><rect x="86.8018%" y="453" width="0.0414%" height="15" fill="rgb(249,139,47)" fg:x="4196" fg:w="2"/><text x="87.0518%" y="463.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (3 samples, 0.06%)</title><rect x="86.8432%" y="453" width="0.0621%" height="15" fill="rgb(244,64,35)" fg:x="4198" fg:w="3"/><text x="87.0932%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 1.22%)</title><rect x="85.8502%" y="469" width="1.2205%" height="15" fill="rgb(216,46,15)" fg:x="4150" fg:w="59"/><text x="86.1002%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.17%)</title><rect x="86.9053%" y="453" width="0.1655%" height="15" fill="rgb(250,74,19)" fg:x="4201" fg:w="8"/><text x="87.1553%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.06%)</title><rect x="87.0707%" y="469" width="0.0621%" height="15" fill="rgb(249,42,33)" fg:x="4209" fg:w="3"/><text x="87.3207%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 1.55%)</title><rect x="85.6227%" y="485" width="1.5515%" height="15" fill="rgb(242,149,17)" fg:x="4139" fg:w="75"/><text x="85.8727%" y="495.50"></text></g><g><title>http_bench_json_ops`deno_core::async_cancel::internal::_::_&lt;impl deno_core::async_cancel::internal::Registration&gt;::project_replace (2 samples, 0.04%)</title><rect x="87.1328%" y="469" width="0.0414%" height="15" fill="rgb(244,29,21)" fg:x="4212" fg:w="2"/><text x="87.3828%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.29%)</title><rect x="87.1949%" y="469" width="0.2896%" height="15" fill="rgb(220,130,37)" fg:x="4215" fg:w="14"/><text x="87.4449%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.23%)</title><rect x="87.2569%" y="453" width="0.2276%" height="15" fill="rgb(211,67,2)" fg:x="4218" fg:w="11"/><text x="87.5069%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.19%)</title><rect x="87.2983%" y="437" width="0.1862%" height="15" fill="rgb(235,68,52)" fg:x="4220" fg:w="9"/><text x="87.5483%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.19%)</title><rect x="87.2983%" y="421" width="0.1862%" height="15" fill="rgb(246,142,3)" fg:x="4220" fg:w="9"/><text x="87.5483%" y="431.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (139 samples, 2.88%)</title><rect x="84.6504%" y="501" width="2.8755%" height="15" fill="rgb(241,25,7)" fg:x="4092" fg:w="139"/><text x="84.9004%" y="511.50">ht..</text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (17 samples, 0.35%)</title><rect x="87.1742%" y="485" width="0.3517%" height="15" fill="rgb(242,119,39)" fg:x="4214" fg:w="17"/><text x="87.4242%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.04%)</title><rect x="87.4845%" y="469" width="0.0414%" height="15" fill="rgb(241,98,45)" fg:x="4229" fg:w="2"/><text x="87.7345%" y="479.50"></text></g><g><title>http_bench_json_ops`&lt;http_bench_json_ops::TcpStream as deno_core::resources::Resource&gt;::read_byob (1 samples, 0.02%)</title><rect x="87.5259%" y="501" width="0.0207%" height="15" fill="rgb(254,28,30)" fg:x="4231" fg:w="1"/><text x="87.7759%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBuffer::GetBackingStore (5 samples, 0.10%)</title><rect x="87.6086%" y="485" width="0.1034%" height="15" fill="rgb(241,142,54)" fg:x="4235" fg:w="5"/><text x="87.8586%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::Buffer (4 samples, 0.08%)</title><rect x="87.7120%" y="485" width="0.0827%" height="15" fill="rgb(222,85,15)" fg:x="4240" fg:w="4"/><text x="87.9620%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::JSTypedArray::GetBuffer (3 samples, 0.06%)</title><rect x="87.7327%" y="469" width="0.0621%" height="15" fill="rgb(210,85,47)" fg:x="4241" fg:w="3"/><text x="87.9827%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (1 samples, 0.02%)</title><rect x="87.7948%" y="485" width="0.0207%" height="15" fill="rgb(224,206,25)" fg:x="4244" fg:w="1"/><text x="88.0448%" y="495.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as serde_v8::magic::transl8::FromV8&gt;::from_v8 (15 samples, 0.31%)</title><rect x="87.5465%" y="501" width="0.3103%" height="15" fill="rgb(243,201,19)" fg:x="4232" fg:w="15"/><text x="87.7965%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::JSTypedArray::GetBuffer (2 samples, 0.04%)</title><rect x="87.8155%" y="485" width="0.0414%" height="15" fill="rgb(236,59,4)" fg:x="4245" fg:w="2"/><text x="88.0655%" y="495.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (1 samples, 0.02%)</title><rect x="87.8568%" y="501" width="0.0207%" height="15" fill="rgb(254,179,45)" fg:x="4247" fg:w="1"/><text x="88.1068%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="88.1051%" y="469" width="0.0207%" height="15" fill="rgb(226,14,10)" fg:x="4259" fg:w="1"/><text x="88.3551%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.21%)</title><rect x="88.0430%" y="485" width="0.2069%" height="15" fill="rgb(244,27,41)" fg:x="4256" fg:w="10"/><text x="88.2930%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.12%)</title><rect x="88.1258%" y="469" width="0.1241%" height="15" fill="rgb(235,35,32)" fg:x="4260" fg:w="6"/><text x="88.3758%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.12%)</title><rect x="88.1258%" y="453" width="0.1241%" height="15" fill="rgb(218,68,31)" fg:x="4260" fg:w="6"/><text x="88.3758%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.08%)</title><rect x="88.1671%" y="437" width="0.0827%" height="15" fill="rgb(207,120,37)" fg:x="4262" fg:w="4"/><text x="88.4171%" y="447.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (21 samples, 0.43%)</title><rect x="87.8775%" y="501" width="0.4344%" height="15" fill="rgb(227,98,0)" fg:x="4248" fg:w="21"/><text x="88.1275%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.06%)</title><rect x="88.2499%" y="485" width="0.0621%" height="15" fill="rgb(207,7,3)" fg:x="4266" fg:w="3"/><text x="88.4999%" y="495.50"></text></g><g><title>http_bench_json_ops`serde::de::impls::_&lt;impl serde::de::Deserialize for u32&gt;::deserialize (1 samples, 0.02%)</title><rect x="88.3120%" y="501" width="0.0207%" height="15" fill="rgb(206,98,19)" fg:x="4269" fg:w="1"/><text x="88.5620%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::Buffer (1 samples, 0.02%)</title><rect x="88.3326%" y="501" width="0.0207%" height="15" fill="rgb(217,5,26)" fg:x="4270" fg:w="1"/><text x="88.5826%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::ByteLength (2 samples, 0.04%)</title><rect x="88.3533%" y="501" width="0.0414%" height="15" fill="rgb(235,190,38)" fg:x="4271" fg:w="2"/><text x="88.6033%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::ArrayBufferView::ByteOffset (1 samples, 0.02%)</title><rect x="88.3947%" y="501" width="0.0207%" height="15" fill="rgb(247,86,24)" fg:x="4273" fg:w="1"/><text x="88.6447%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::HandleScope::CreateHandle (1 samples, 0.02%)</title><rect x="88.4154%" y="501" width="0.0207%" height="15" fill="rgb(205,101,16)" fg:x="4274" fg:w="1"/><text x="88.6654%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::Number::Value (1 samples, 0.02%)</title><rect x="88.4361%" y="501" width="0.0207%" height="15" fill="rgb(246,168,33)" fg:x="4275" fg:w="1"/><text x="88.6861%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::Value::IsArrayBufferView (3 samples, 0.06%)</title><rect x="88.4568%" y="501" width="0.0621%" height="15" fill="rgb(231,114,1)" fg:x="4276" fg:w="3"/><text x="88.7068%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (4 samples, 0.08%)</title><rect x="88.5188%" y="501" width="0.0827%" height="15" fill="rgb(207,184,53)" fg:x="4279" fg:w="4"/><text x="88.7688%" y="511.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (5 samples, 0.10%)</title><rect x="88.6016%" y="501" width="0.1034%" height="15" fill="rgb(224,95,51)" fg:x="4283" fg:w="5"/><text x="88.8516%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::Create (3 samples, 0.06%)</title><rect x="88.6429%" y="485" width="0.0621%" height="15" fill="rgb(212,188,45)" fg:x="4285" fg:w="3"/><text x="88.8929%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.12%)</title><rect x="88.7050%" y="501" width="0.1241%" height="15" fill="rgb(223,154,38)" fg:x="4288" fg:w="6"/><text x="88.9550%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.06%)</title><rect x="88.7671%" y="485" width="0.0621%" height="15" fill="rgb(251,22,52)" fg:x="4291" fg:w="3"/><text x="89.0171%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.04%)</title><rect x="88.7878%" y="469" width="0.0414%" height="15" fill="rgb(229,209,22)" fg:x="4292" fg:w="2"/><text x="89.0378%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="88.8084%" y="453" width="0.0207%" height="15" fill="rgb(234,138,34)" fg:x="4293" fg:w="1"/><text x="89.0584%" y="463.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (253 samples, 5.23%)</title><rect x="83.8022%" y="517" width="5.2338%" height="15" fill="rgb(212,95,11)" fg:x="4051" fg:w="253"/><text x="84.0522%" y="527.50">http_b..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.21%)</title><rect x="88.8291%" y="501" width="0.2069%" height="15" fill="rgb(240,179,47)" fg:x="4294" fg:w="10"/><text x="89.0791%" y="511.50"></text></g><g><title>http_bench_json_ops`&lt;serde_v8::magic::buffer::ZeroCopyBuf as serde_v8::magic::transl8::FromV8&gt;::from_v8 (1 samples, 0.02%)</title><rect x="89.0360%" y="517" width="0.0207%" height="15" fill="rgb(240,163,11)" fg:x="4304" fg:w="1"/><text x="89.2860%" y="527.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;v8::scope::HandleScope&gt; (1 samples, 0.02%)</title><rect x="89.0567%" y="517" width="0.0207%" height="15" fill="rgb(236,37,12)" fg:x="4305" fg:w="1"/><text x="89.3067%" y="527.50"></text></g><g><title>http_bench_json_ops`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (1 samples, 0.02%)</title><rect x="89.0774%" y="517" width="0.0207%" height="15" fill="rgb(232,164,16)" fg:x="4306" fg:w="1"/><text x="89.3274%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::Integer::Value (2 samples, 0.04%)</title><rect x="89.0981%" y="517" width="0.0414%" height="15" fill="rgb(244,205,15)" fg:x="4307" fg:w="2"/><text x="89.3481%" y="527.50"></text></g><g><title>http_bench_json_ops`v8__Global__New (1 samples, 0.02%)</title><rect x="89.1394%" y="517" width="0.0207%" height="15" fill="rgb(223,117,47)" fg:x="4309" fg:w="1"/><text x="89.3894%" y="527.50"></text></g><g><title>0x11000daa8 (266 samples, 5.50%)</title><rect x="83.6988%" y="549" width="5.5027%" height="15" fill="rgb(244,107,35)" fg:x="4046" fg:w="266"/><text x="83.9488%" y="559.50">0x11000..</text></g><g><title>http_bench_json_ops`Builtins_CallApiCallback (264 samples, 5.46%)</title><rect x="83.7402%" y="533" width="5.4613%" height="15" fill="rgb(205,140,8)" fg:x="4048" fg:w="264"/><text x="83.9902%" y="543.50">http_be..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="89.1601%" y="517" width="0.0414%" height="15" fill="rgb(228,84,46)" fg:x="4310" fg:w="2"/><text x="89.4101%" y="527.50"></text></g><g><title>0x11000db7c (2 samples, 0.04%)</title><rect x="89.2015%" y="549" width="0.0414%" height="15" fill="rgb(254,188,9)" fg:x="4312" fg:w="2"/><text x="89.4515%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (2 samples, 0.04%)</title><rect x="89.2015%" y="533" width="0.0414%" height="15" fill="rgb(206,112,54)" fg:x="4312" fg:w="2"/><text x="89.4515%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_AllocateInYoungGeneration (2 samples, 0.04%)</title><rect x="89.2015%" y="517" width="0.0414%" height="15" fill="rgb(216,84,49)" fg:x="4312" fg:w="2"/><text x="89.4515%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Factory::NewFillerObject (2 samples, 0.04%)</title><rect x="89.2015%" y="501" width="0.0414%" height="15" fill="rgb(214,194,35)" fg:x="4312" fg:w="2"/><text x="89.4515%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::SemiSpaceNewSpace::EnsureAllocation (1 samples, 0.02%)</title><rect x="89.2222%" y="485" width="0.0207%" height="15" fill="rgb(249,28,3)" fg:x="4313" fg:w="1"/><text x="89.4722%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::SpaceWithLinearArea::AdvanceAllocationObservers (1 samples, 0.02%)</title><rect x="89.2222%" y="469" width="0.0207%" height="15" fill="rgb(222,56,52)" fg:x="4313" fg:w="1"/><text x="89.4722%" y="479.50"></text></g><g><title>http_bench_json_ops`std::__1::mutex::lock (1 samples, 0.02%)</title><rect x="89.2222%" y="453" width="0.0207%" height="15" fill="rgb(245,217,50)" fg:x="4313" fg:w="1"/><text x="89.4722%" y="463.50"></text></g><g><title>0x11000d1a8 (284 samples, 5.88%)</title><rect x="83.4092%" y="565" width="5.8751%" height="15" fill="rgb(213,201,24)" fg:x="4032" fg:w="284"/><text x="83.6592%" y="575.50">0x11000..</text></g><g><title>http_bench_json_ops`Builtins_CallApiCallback (2 samples, 0.04%)</title><rect x="89.2429%" y="549" width="0.0414%" height="15" fill="rgb(248,116,28)" fg:x="4314" fg:w="2"/><text x="89.4929%" y="559.50"></text></g><g><title>0x11000d1b4 (1 samples, 0.02%)</title><rect x="89.2842%" y="565" width="0.0207%" height="15" fill="rgb(219,72,43)" fg:x="4316" fg:w="1"/><text x="89.5342%" y="575.50"></text></g><g><title>0x11000d1bc (15 samples, 0.31%)</title><rect x="89.3049%" y="565" width="0.3103%" height="15" fill="rgb(209,138,14)" fg:x="4317" fg:w="15"/><text x="89.5549%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitCaught (15 samples, 0.31%)</title><rect x="89.3049%" y="549" width="0.3103%" height="15" fill="rgb(222,18,33)" fg:x="4317" fg:w="15"/><text x="89.5549%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_PerformPromiseThen (8 samples, 0.17%)</title><rect x="89.4497%" y="533" width="0.1655%" height="15" fill="rgb(213,199,7)" fg:x="4324" fg:w="8"/><text x="89.6997%" y="543.50"></text></g><g><title>0x11000d1e0 (1 samples, 0.02%)</title><rect x="89.6152%" y="565" width="0.0207%" height="15" fill="rgb(250,110,10)" fg:x="4332" fg:w="1"/><text x="89.8652%" y="575.50"></text></g><g><title>0x11000d21c (1 samples, 0.02%)</title><rect x="89.6359%" y="565" width="0.0207%" height="15" fill="rgb(248,123,6)" fg:x="4333" fg:w="1"/><text x="89.8859%" y="575.50"></text></g><g><title>0x11000d430 (1 samples, 0.02%)</title><rect x="89.6566%" y="565" width="0.0207%" height="15" fill="rgb(206,91,31)" fg:x="4334" fg:w="1"/><text x="89.9066%" y="575.50"></text></g><g><title>0x11000d490 (1 samples, 0.02%)</title><rect x="89.6773%" y="565" width="0.0207%" height="15" fill="rgb(211,154,13)" fg:x="4335" fg:w="1"/><text x="89.9273%" y="575.50"></text></g><g><title>0x11000d494 (1 samples, 0.02%)</title><rect x="89.6980%" y="565" width="0.0207%" height="15" fill="rgb(225,148,7)" fg:x="4336" fg:w="1"/><text x="89.9480%" y="575.50"></text></g><g><title>0x11000d580 (1 samples, 0.02%)</title><rect x="89.7187%" y="565" width="0.0207%" height="15" fill="rgb(220,160,43)" fg:x="4337" fg:w="1"/><text x="89.9687%" y="575.50"></text></g><g><title>0x11000d820 (1 samples, 0.02%)</title><rect x="89.7393%" y="565" width="0.0207%" height="15" fill="rgb(213,52,39)" fg:x="4338" fg:w="1"/><text x="89.9893%" y="575.50"></text></g><g><title>0x11000dd00 (1 samples, 0.02%)</title><rect x="89.7600%" y="565" width="0.0207%" height="15" fill="rgb(243,137,7)" fg:x="4339" fg:w="1"/><text x="90.0100%" y="575.50"></text></g><g><title>0x11000dd08 (3 samples, 0.06%)</title><rect x="89.7807%" y="565" width="0.0621%" height="15" fill="rgb(230,79,13)" fg:x="4340" fg:w="3"/><text x="90.0307%" y="575.50"></text></g><g><title>0x11000dfa4 (1 samples, 0.02%)</title><rect x="89.8428%" y="565" width="0.0207%" height="15" fill="rgb(247,105,23)" fg:x="4343" fg:w="1"/><text x="90.0928%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_CallFunction_ReceiverIsNotNullOrUndefined (9 samples, 0.19%)</title><rect x="89.8635%" y="565" width="0.1862%" height="15" fill="rgb(223,179,41)" fg:x="4344" fg:w="9"/><text x="90.1135%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_Call_ReceiverIsNotNullOrUndefined (3 samples, 0.06%)</title><rect x="90.0496%" y="565" width="0.0621%" height="15" fill="rgb(218,9,34)" fg:x="4353" fg:w="3"/><text x="90.2996%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="565" width="0.0207%" height="15" fill="rgb(222,106,8)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="549" width="0.0207%" height="15" fill="rgb(211,220,0)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="559.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="533" width="0.0207%" height="15" fill="rgb(229,52,16)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="543.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="90.1117%" y="517" width="0.0207%" height="15" fill="rgb(212,155,18)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::Builtin_HandleApiCall (1 samples, 0.02%)</title><rect x="90.1117%" y="501" width="0.0207%" height="15" fill="rgb(242,21,14)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::HeapObject&gt;, v8::internal::Handle&lt;v8::internal::FunctionTemplateInfo&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="485" width="0.0207%" height="15" fill="rgb(222,19,48)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="495.50"></text></g><g><title>http_bench_json_ops`&lt;extern &quot;C&quot; fn(A0) .&gt; R as v8::support::CFnFrom&lt;F&gt;&gt;::mapping::c_fn (1 samples, 0.02%)</title><rect x="90.1117%" y="469" width="0.0207%" height="15" fill="rgb(232,45,27)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (1 samples, 0.02%)</title><rect x="90.1117%" y="453" width="0.0207%" height="15" fill="rgb(249,103,42)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="437" width="0.0207%" height="15" fill="rgb(246,81,33)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="90.1117%" y="421" width="0.0207%" height="15" fill="rgb(252,33,42)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="431.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="90.1117%" y="405" width="0.0207%" height="15" fill="rgb(209,212,41)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="415.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="389" width="0.0207%" height="15" fill="rgb(207,154,6)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="399.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="373" width="0.0207%" height="15" fill="rgb(223,64,47)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="383.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="90.1117%" y="357" width="0.0207%" height="15" fill="rgb(211,161,38)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="367.50"></text></g><g><title>http_bench_json_ops`Builtins_ReturnHandler (1 samples, 0.02%)</title><rect x="90.1117%" y="341" width="0.0207%" height="15" fill="rgb(219,138,40)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="351.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="90.1117%" y="325" width="0.0207%" height="15" fill="rgb(241,228,46)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_BytecodeBudgetInterrupt_Ignition (1 samples, 0.02%)</title><rect x="90.1117%" y="309" width="0.0207%" height="15" fill="rgb(223,209,38)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::BytecodeBudgetInterrupt(v8::internal::Isolate*, v8::internal::Arguments&lt; (1 samples, 0.02%)</title><rect x="90.1117%" y="293" width="0.0207%" height="15" fill="rgb(236,164,45)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::TieringManager::OnInterruptTick(v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="277" width="0.0207%" height="15" fill="rgb(231,15,5)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="287.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineBatchCompiler::CompileBatch(v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="261" width="0.0207%" height="15" fill="rgb(252,35,15)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="271.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineBatchCompiler::MaybeCompileFunction (1 samples, 0.02%)</title><rect x="90.1117%" y="245" width="0.0207%" height="15" fill="rgb(248,181,18)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="255.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::CompileSharedWithBaseline(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="229" width="0.0207%" height="15" fill="rgb(233,39,42)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="239.50"></text></g><g><title>http_bench_json_ops`v8::internal::GenerateBaselineCode(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="213" width="0.0207%" height="15" fill="rgb(238,110,33)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="223.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineCompiler::GenerateCode (1 samples, 0.02%)</title><rect x="90.1117%" y="197" width="0.0207%" height="15" fill="rgb(233,195,10)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="207.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::BaselineCompiler::VisitThrowReferenceErrorIfHole (1 samples, 0.02%)</title><rect x="90.1117%" y="181" width="0.0207%" height="15" fill="rgb(254,105,3)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="191.50"></text></g><g><title>http_bench_json_ops`v8::internal::baseline::detail::PushAllHelper&lt;v8::internal::Register, v8::internal::Handle&lt;v8::internal::Name&gt; &gt;::Push(v8::internal::baseline::BaselineAssembler*, v8::internal::Register, v8::internal::Handle (1 samples, 0.02%)</title><rect x="90.1117%" y="165" width="0.0207%" height="15" fill="rgb(221,225,9)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="175.50"></text></g><g><title>http_bench_json_ops`v8::internal::TurboAssembler::Mov (1 samples, 0.02%)</title><rect x="90.1117%" y="149" width="0.0207%" height="15" fill="rgb(224,227,45)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="159.50"></text></g><g><title>http_bench_json_ops`v8::internal::Assembler::ldr (1 samples, 0.02%)</title><rect x="90.1117%" y="133" width="0.0207%" height="15" fill="rgb(229,198,43)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="143.50"></text></g><g><title>http_bench_json_ops`v8::internal::Assembler::ldr (1 samples, 0.02%)</title><rect x="90.1117%" y="117" width="0.0207%" height="15" fill="rgb(206,209,35)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="127.50"></text></g><g><title>http_bench_json_ops`v8::internal::Assembler::RecordRelocInfo (1 samples, 0.02%)</title><rect x="90.1117%" y="101" width="0.0207%" height="15" fill="rgb(245,195,53)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="111.50"></text></g><g><title>http_bench_json_ops`v8::internal::ConstantPool::RecordEntry (1 samples, 0.02%)</title><rect x="90.1117%" y="85" width="0.0207%" height="15" fill="rgb(240,92,26)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="95.50"></text></g><g><title>http_bench_json_ops`v8::internal::ConstantPool::RecordKey (1 samples, 0.02%)</title><rect x="90.1117%" y="69" width="0.0207%" height="15" fill="rgb(207,40,23)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="79.50"></text></g><g><title>http_bench_json_ops`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="90.1117%" y="53" width="0.0207%" height="15" fill="rgb(223,111,35)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="90.1117%" y="37" width="0.0207%" height="15" fill="rgb(229,147,28)" fg:x="4356" fg:w="1"/><text x="90.3617%" y="47.50"></text></g><g><title>http_bench_json_ops`Builtins_KeyedLoadIC_Megamorphic (1 samples, 0.02%)</title><rect x="90.1324%" y="565" width="0.0207%" height="15" fill="rgb(211,29,28)" fg:x="4357" fg:w="1"/><text x="90.3824%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_LoadIC (7 samples, 0.14%)</title><rect x="90.1531%" y="565" width="0.1448%" height="15" fill="rgb(228,72,33)" fg:x="4358" fg:w="7"/><text x="90.4031%" y="575.50"></text></g><g><title>http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure (2,463 samples, 50.95%)</title><rect x="39.3877%" y="581" width="50.9516%" height="15" fill="rgb(205,214,31)" fg:x="1904" fg:w="2463"/><text x="39.6377%" y="591.50">http_bench_json_ops`Builtins_AsyncFunctionAwaitResolveClosure</text></g><g><title>http_bench_json_ops`Builtins_LoadICTrampoline (2 samples, 0.04%)</title><rect x="90.2979%" y="565" width="0.0414%" height="15" fill="rgb(224,111,15)" fg:x="4365" fg:w="2"/><text x="90.5479%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (2,527 samples, 52.28%)</title><rect x="38.1878%" y="645" width="52.2755%" height="15" fill="rgb(253,21,26)" fg:x="1846" fg:w="2527"/><text x="38.4378%" y="655.50">http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*..</text></g><g><title>http_bench_json_ops`Builtins_JSRunMicrotasksEntry (2,519 samples, 52.11%)</title><rect x="38.3533%" y="629" width="52.1101%" height="15" fill="rgb(245,139,43)" fg:x="1854" fg:w="2519"/><text x="38.6033%" y="639.50">http_bench_json_ops`Builtins_JSRunMicrotasksEntry</text></g><g><title>http_bench_json_ops`Builtins_RunMicrotasks (2,514 samples, 52.01%)</title><rect x="38.4568%" y="613" width="52.0066%" height="15" fill="rgb(252,170,7)" fg:x="1859" fg:w="2514"/><text x="38.7068%" y="623.50">http_bench_json_ops`Builtins_RunMicrotasks</text></g><g><title>http_bench_json_ops`Builtins_PromiseFulfillReactionJob (2,477 samples, 51.24%)</title><rect x="39.2222%" y="597" width="51.2412%" height="15" fill="rgb(231,118,14)" fg:x="1896" fg:w="2477"/><text x="39.4722%" y="607.50">http_bench_json_ops`Builtins_PromiseFulfillReactionJob</text></g><g><title>http_bench_json_ops`Builtins_ResumeGeneratorTrampoline (6 samples, 0.12%)</title><rect x="90.3393%" y="581" width="0.1241%" height="15" fill="rgb(238,83,0)" fg:x="4367" fg:w="6"/><text x="90.5893%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::RegisterTryCatchHandler (1 samples, 0.02%)</title><rect x="90.4634%" y="645" width="0.0207%" height="15" fill="rgb(221,39,39)" fg:x="4373" fg:w="1"/><text x="90.7134%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::SaveContext (2 samples, 0.04%)</title><rect x="90.4841%" y="645" width="0.0414%" height="15" fill="rgb(222,119,46)" fg:x="4374" fg:w="2"/><text x="90.7341%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (2,565 samples, 53.06%)</title><rect x="37.4845%" y="725" width="53.0616%" height="15" fill="rgb(222,165,49)" fg:x="1812" fg:w="2565"/><text x="37.7345%" y="735.50">http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (2,558 samples, 52.92%)</title><rect x="37.6293%" y="709" width="52.9168%" height="15" fill="rgb(219,113,52)" fg:x="1819" fg:w="2558"/><text x="37.8793%" y="719.50">http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks (2,554 samples, 52.83%)</title><rect x="37.7120%" y="693" width="52.8341%" height="15" fill="rgb(214,7,15)" fg:x="1823" fg:w="2554"/><text x="37.9620%" y="703.50">http_bench_json_ops`v8::internal::MicrotaskQueue::RunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks (2,547 samples, 52.69%)</title><rect x="37.8568%" y="677" width="52.6893%" height="15" fill="rgb(235,32,4)" fg:x="1830" fg:w="2547"/><text x="38.1068%" y="687.50">http_bench_json_ops`v8::internal::Execution::TryRunMicrotasks</text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal:: (2,539 samples, 52.52%)</title><rect x="38.0223%" y="661" width="52.5238%" height="15" fill="rgb(238,90,54)" fg:x="1838" fg:w="2539"/><text x="38.2723%" y="671.50">http_bench_json_ops`v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::interna..</text></g><g><title>http_bench_json_ops`v8::internal::SaveContext::~SaveContext (1 samples, 0.02%)</title><rect x="90.5254%" y="645" width="0.0207%" height="15" fill="rgb(213,208,19)" fg:x="4376" fg:w="1"/><text x="90.7754%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (2,665 samples, 55.13%)</title><rect x="35.4365%" y="741" width="55.1303%" height="15" fill="rgb(233,156,4)" fg:x="1713" fg:w="2665"/><text x="35.6865%" y="751.50">http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v..</text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (1 samples, 0.02%)</title><rect x="90.5461%" y="725" width="0.0207%" height="15" fill="rgb(207,194,5)" fg:x="4377" fg:w="1"/><text x="90.7961%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::HasPendingBackgroundTasks (1 samples, 0.02%)</title><rect x="90.5668%" y="741" width="0.0207%" height="15" fill="rgb(206,111,30)" fg:x="4378" fg:w="1"/><text x="90.8168%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::Exception (1 samples, 0.02%)</title><rect x="90.5875%" y="741" width="0.0207%" height="15" fill="rgb(243,70,54)" fg:x="4379" fg:w="1"/><text x="90.8375%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (2 samples, 0.04%)</title><rect x="90.6082%" y="741" width="0.0414%" height="15" fill="rgb(242,28,8)" fg:x="4380" fg:w="2"/><text x="90.8582%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::~TryCatch (4 samples, 0.08%)</title><rect x="90.6496%" y="741" width="0.0827%" height="15" fill="rgb(219,106,18)" fg:x="4382" fg:w="4"/><text x="90.8996%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle (2 samples, 0.04%)</title><rect x="90.7323%" y="741" width="0.0414%" height="15" fill="rgb(244,222,10)" fg:x="4386" fg:w="2"/><text x="90.9823%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (6 samples, 0.12%)</title><rect x="90.7737%" y="741" width="0.1241%" height="15" fill="rgb(236,179,52)" fg:x="4388" fg:w="6"/><text x="91.0237%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::FireCallCompletedCallbackInternal (2 samples, 0.04%)</title><rect x="90.8978%" y="741" width="0.0414%" height="15" fill="rgb(213,23,39)" fg:x="4394" fg:w="2"/><text x="91.1478%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::MicrotaskQueue::PerformCheckpointInternal (1 samples, 0.02%)</title><rect x="90.9392%" y="741" width="0.0207%" height="15" fill="rgb(238,48,10)" fg:x="4396" fg:w="1"/><text x="91.1892%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::TimerEventScope&lt;v8::internal::TimerEventExecute&gt;::LogTimerEvent (2 samples, 0.04%)</title><rect x="90.9599%" y="741" width="0.0414%" height="15" fill="rgb(251,196,23)" fg:x="4397" fg:w="2"/><text x="91.2099%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::wasm::WasmEngine::HasRunningCompileJob (1 samples, 0.02%)</title><rect x="91.0012%" y="741" width="0.0207%" height="15" fill="rgb(250,152,24)" fg:x="4399" fg:w="1"/><text x="91.2512%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (1 samples, 0.02%)</title><rect x="91.0219%" y="741" width="0.0207%" height="15" fill="rgb(209,150,17)" fg:x="4400" fg:w="1"/><text x="91.2719%" y="751.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="91.0426%" y="693" width="0.0207%" height="15" fill="rgb(234,202,34)" fg:x="4401" fg:w="1"/><text x="91.2926%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::UpdateStatistics (1 samples, 0.02%)</title><rect x="91.0633%" y="693" width="0.0207%" height="15" fill="rgb(253,148,53)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Print (1 samples, 0.02%)</title><rect x="91.0633%" y="677" width="0.0207%" height="15" fill="rgb(218,129,16)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::GCTracer::Output (1 samples, 0.02%)</title><rect x="91.0633%" y="661" width="0.0207%" height="15" fill="rgb(216,85,19)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::base::OS::VSNPrintF (1 samples, 0.02%)</title><rect x="91.0633%" y="645" width="0.0207%" height="15" fill="rgb(235,228,7)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="655.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="91.0633%" y="629" width="0.0207%" height="15" fill="rgb(245,175,0)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="639.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="91.0633%" y="613" width="0.0207%" height="15" fill="rgb(208,168,36)" fg:x="4402" fg:w="1"/><text x="91.3133%" y="623.50"></text></g><g><title>http_bench_json_ops`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="91.0840%" y="645" width="0.0207%" height="15" fill="rgb(246,171,24)" fg:x="4403" fg:w="1"/><text x="91.3340%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="91.0840%" y="629" width="0.0207%" height="15" fill="rgb(215,142,24)" fg:x="4403" fg:w="1"/><text x="91.3340%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="91.0840%" y="613" width="0.0207%" height="15" fill="rgb(250,187,7)" fg:x="4403" fg:w="1"/><text x="91.3340%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::Iterate (1 samples, 0.02%)</title><rect x="91.1047%" y="629" width="0.0207%" height="15" fill="rgb(228,66,33)" fg:x="4404" fg:w="1"/><text x="91.3547%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::StackFrameIteratorBase::StackFrameIteratorBase (1 samples, 0.02%)</title><rect x="91.1047%" y="613" width="0.0207%" height="15" fill="rgb(234,215,21)" fg:x="4404" fg:w="1"/><text x="91.3547%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::IterateRoots(v8::internal::RootVisitor*, v8::base::EnumSet (2 samples, 0.04%)</title><rect x="91.1047%" y="645" width="0.0414%" height="15" fill="rgb(222,191,20)" fg:x="4404" fg:w="2"/><text x="91.3547%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::RootScavengeVisitor::VisitRootPointer (1 samples, 0.02%)</title><rect x="91.1254%" y="629" width="0.0207%" height="15" fill="rgb(245,79,54)" fg:x="4405" fg:w="1"/><text x="91.3754%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Scavenger::Scavenger(v8::internal::ScavengerCollector*, v8::internal::Heap*, bool, heap::base::Worklist&lt;v8::internal::MemoryChunk*, (unsigned short)64&gt;*, heap::base::Worklist&lt;std::__1::pair&lt;v8::internal::HeapObject, int&gt;, (unsigned short)256&gt;*, v8::internal::Scavenger::PromotionList*, heap::base::Worklist&lt;v8::internal::EphemeronHashTable,  (1 samples, 0.02%)</title><rect x="91.1460%" y="645" width="0.0207%" height="15" fill="rgb(240,10,37)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::CompactionSpaceCollection::CompactionSpaceCollection (1 samples, 0.02%)</title><rect x="91.1460%" y="629" width="0.0207%" height="15" fill="rgb(214,192,32)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::PagedSpaceBase::PagedSpaceBase (1 samples, 0.02%)</title><rect x="91.1460%" y="613" width="0.0207%" height="15" fill="rgb(209,36,54)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="623.50"></text></g><g><title>http_bench_json_ops`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="91.1460%" y="597" width="0.0207%" height="15" fill="rgb(220,10,11)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="91.1460%" y="581" width="0.0207%" height="15" fill="rgb(221,106,17)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="91.1460%" y="565" width="0.0207%" height="15" fill="rgb(251,142,44)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="91.1460%" y="549" width="0.0207%" height="15" fill="rgb(238,13,15)" fg:x="4406" fg:w="1"/><text x="91.3960%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengeJob::Task::RunInternal (7 samples, 0.14%)</title><rect x="91.0426%" y="725" width="0.1448%" height="15" fill="rgb(208,107,27)" fg:x="4401" fg:w="7"/><text x="91.2926%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::CollectGarbage (7 samples, 0.14%)</title><rect x="91.0426%" y="709" width="0.1448%" height="15" fill="rgb(205,136,37)" fg:x="4401" fg:w="7"/><text x="91.2926%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::PerformGarbageCollection (5 samples, 0.10%)</title><rect x="91.0840%" y="693" width="0.1034%" height="15" fill="rgb(250,205,27)" fg:x="4403" fg:w="5"/><text x="91.3340%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::Heap::Scavenge (5 samples, 0.10%)</title><rect x="91.0840%" y="677" width="0.1034%" height="15" fill="rgb(210,80,43)" fg:x="4403" fg:w="5"/><text x="91.3340%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::ScavengerCollector::CollectGarbage (5 samples, 0.10%)</title><rect x="91.0840%" y="661" width="0.1034%" height="15" fill="rgb(247,160,36)" fg:x="4403" fg:w="5"/><text x="91.3340%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobHandle::Join (1 samples, 0.02%)</title><rect x="91.1667%" y="645" width="0.0207%" height="15" fill="rgb(234,13,49)" fg:x="4407" fg:w="1"/><text x="91.4167%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultJobState::~DefaultJobState (1 samples, 0.02%)</title><rect x="91.1667%" y="629" width="0.0207%" height="15" fill="rgb(234,122,0)" fg:x="4407" fg:w="1"/><text x="91.4167%" y="639.50"></text></g><g><title>http_bench_json_ops`DYLD-STUB$$pthread_cond_destroy (1 samples, 0.02%)</title><rect x="91.1667%" y="613" width="0.0207%" height="15" fill="rgb(207,146,38)" fg:x="4407" fg:w="1"/><text x="91.4167%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::MoveExpiredDelayedTasks(v8::base::LockGuard&lt;v8::base::Mutex, (1 samples, 0.02%)</title><rect x="91.1874%" y="709" width="0.0207%" height="15" fill="rgb(207,177,25)" fg:x="4408" fg:w="1"/><text x="91.4374%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultPlatform::PumpMessageLoop (9 samples, 0.19%)</title><rect x="91.0426%" y="741" width="0.1862%" height="15" fill="rgb(211,178,42)" fg:x="4401" fg:w="9"/><text x="91.2926%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultForegroundTaskRunner::PopTaskFromQueue (2 samples, 0.04%)</title><rect x="91.1874%" y="725" width="0.0414%" height="15" fill="rgb(230,69,54)" fg:x="4408" fg:w="2"/><text x="91.4374%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="91.2081%" y="709" width="0.0207%" height="15" fill="rgb(214,135,41)" fg:x="4409" fg:w="1"/><text x="91.4581%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::exception (1 samples, 0.02%)</title><rect x="91.2288%" y="741" width="0.0207%" height="15" fill="rgb(237,67,25)" fg:x="4410" fg:w="1"/><text x="91.4788%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (6 samples, 0.12%)</title><rect x="91.2495%" y="741" width="0.1241%" height="15" fill="rgb(222,189,50)" fg:x="4411" fg:w="6"/><text x="91.4995%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::TryCatch::TryCatch (1 samples, 0.02%)</title><rect x="91.3529%" y="725" width="0.0207%" height="15" fill="rgb(245,148,34)" fg:x="4416" fg:w="1"/><text x="91.6029%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.04%)</title><rect x="91.3736%" y="741" width="0.0414%" height="15" fill="rgb(222,29,6)" fg:x="4417" fg:w="2"/><text x="91.6236%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.06%)</title><rect x="91.5391%" y="725" width="0.0621%" height="15" fill="rgb(221,189,43)" fg:x="4425" fg:w="3"/><text x="91.7891%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.21%)</title><rect x="91.4150%" y="741" width="0.2069%" height="15" fill="rgb(207,36,27)" fg:x="4419" fg:w="10"/><text x="91.6650%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="91.6012%" y="725" width="0.0207%" height="15" fill="rgb(217,90,24)" fg:x="4428" fg:w="1"/><text x="91.8512%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.04%)</title><rect x="91.6218%" y="741" width="0.0414%" height="15" fill="rgb(224,66,35)" fg:x="4429" fg:w="2"/><text x="91.8718%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.06%)</title><rect x="91.6632%" y="741" width="0.0621%" height="15" fill="rgb(221,13,50)" fg:x="4431" fg:w="3"/><text x="91.9132%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.04%)</title><rect x="91.7253%" y="741" width="0.0414%" height="15" fill="rgb(236,68,49)" fg:x="4434" fg:w="2"/><text x="91.9753%" y="751.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop (4,420 samples, 91.44%)</title><rect x="0.3517%" y="757" width="91.4357%" height="15" fill="rgb(229,146,28)" fg:x="17" fg:w="4420"/><text x="0.6017%" y="767.50">http_bench_json_ops`deno_core::runtime::JsRuntime::poll_event_loop</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="91.7667%" y="741" width="0.0207%" height="15" fill="rgb(225,31,38)" fg:x="4436" fg:w="1"/><text x="92.0167%" y="751.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::clone_arc_raw (3 samples, 0.06%)</title><rect x="91.7873%" y="757" width="0.0621%" height="15" fill="rgb(250,208,3)" fg:x="4437" fg:w="3"/><text x="92.0373%" y="767.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::drop_arc_raw (2 samples, 0.04%)</title><rect x="91.8494%" y="757" width="0.0414%" height="15" fill="rgb(246,54,23)" fg:x="4440" fg:w="2"/><text x="92.0994%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local (1 samples, 0.02%)</title><rect x="91.8908%" y="757" width="0.0207%" height="15" fill="rgb(243,76,11)" fg:x="4442" fg:w="1"/><text x="92.1408%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::internal::GlobalHandles::NodeSpace&lt;v8::internal::GlobalHandles::Node&gt;::Release (1 samples, 0.02%)</title><rect x="91.9115%" y="757" width="0.0207%" height="15" fill="rgb(245,21,50)" fg:x="4443" fg:w="1"/><text x="92.1615%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::scope::TryCatch&lt;P&gt;::new (1 samples, 0.02%)</title><rect x="91.9321%" y="757" width="0.0207%" height="15" fill="rgb(228,9,43)" fg:x="4444" fg:w="1"/><text x="92.1821%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="91.9528%" y="757" width="0.0207%" height="15" fill="rgb(208,100,47)" fg:x="4445" fg:w="1"/><text x="92.2028%" y="767.50"></text></g><g><title>http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,444 samples, 91.93%)</title><rect x="0.0621%" y="773" width="91.9321%" height="15" fill="rgb(232,26,8)" fg:x="3" fg:w="4444"/><text x="0.3121%" y="783.50">http_bench_json_ops`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="91.9735%" y="757" width="0.0207%" height="15" fill="rgb(216,166,38)" fg:x="4446" fg:w="1"/><text x="92.2235%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::Script::Compile(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="91.9942%" y="741" width="0.0207%" height="15" fill="rgb(251,202,51)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::Compile(v8::Local (1 samples, 0.02%)</title><rect x="91.9942%" y="725" width="0.0207%" height="15" fill="rgb(254,216,34)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.02%)</title><rect x="91.9942%" y="709" width="0.0207%" height="15" fill="rgb(251,32,27)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="91.9942%" y="693" width="0.0207%" height="15" fill="rgb(208,127,28)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::GetSharedFunctionInfoForScriptImpl(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="91.9942%" y="677" width="0.0207%" height="15" fill="rgb(224,137,22)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileScriptOnMainThread(v8::internal::UnoptimizedCompileFlags, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::ScriptDetails const&amp;, v8::internal::NativesFlag, v8::Extension*, v8::internal::Isolate*, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="91.9942%" y="661" width="0.0207%" height="15" fill="rgb(254,70,32)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::CompileToplevel(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="91.9942%" y="645" width="0.0207%" height="15" fill="rgb(229,75,37)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::parsing::ParseProgram(v8::internal::ParseInfo*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="91.9942%" y="629" width="0.0207%" height="15" fill="rgb(252,64,23)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseProgram(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::MaybeHandle (1 samples, 0.02%)</title><rect x="91.9942%" y="613" width="0.0207%" height="15" fill="rgb(232,162,48)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::DoParseProgram (1 samples, 0.02%)</title><rect x="91.9942%" y="597" width="0.0207%" height="15" fill="rgb(246,160,12)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionOrLabelledStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="91.9942%" y="581" width="0.0207%" height="15" fill="rgb(247,166,0)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="565" width="0.0207%" height="15" fill="rgb(249,219,21)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="549" width="0.0207%" height="15" fill="rgb(205,209,3)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseLogicalExpression (1 samples, 0.02%)</title><rect x="91.9942%" y="533" width="0.0207%" height="15" fill="rgb(243,44,1)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="543.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParsePrimaryExpression (1 samples, 0.02%)</title><rect x="91.9942%" y="517" width="0.0207%" height="15" fill="rgb(206,159,16)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="501" width="0.0207%" height="15" fill="rgb(244,77,30)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="485" width="0.0207%" height="15" fill="rgb(218,69,12)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseArrowFunctionLiteral (1 samples, 0.02%)</title><rect x="91.9942%" y="469" width="0.0207%" height="15" fill="rgb(212,87,7)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseFunctionBody(v8::internal::ScopedList&lt;v8::internal::Statement*, void*&gt;*, v8::internal::AstRawString const*, int, v8::internal::ParserFormalParameters const&amp;, v8::internal::FunctionKind, v8::internal::FunctionSyntaxKind, v8::internal::ParserBase (1 samples, 0.02%)</title><rect x="91.9942%" y="453" width="0.0207%" height="15" fill="rgb(245,114,25)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::Parser&gt;::ParseHoistableDeclaration(int, v8::base::Flags&lt;v8::internal::ParseFunctionFlag, int&gt;, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="91.9942%" y="437" width="0.0207%" height="15" fill="rgb(210,61,42)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::ParseFunctionLiteral(v8::internal::AstRawString const*, v8::internal::Scanner::Location, v8::internal::FunctionNameValidity, v8::internal::FunctionKind, int, v8::internal::FunctionSyntaxKind, v8::internal::LanguageMode, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="91.9942%" y="421" width="0.0207%" height="15" fill="rgb(211,52,33)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::Parser::SkipFunction (1 samples, 0.02%)</title><rect x="91.9942%" y="405" width="0.0207%" height="15" fill="rgb(234,58,33)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="415.50"></text></g><g><title>http_bench_json_ops`v8::internal::PreParser::PreParseFunction (1 samples, 0.02%)</title><rect x="91.9942%" y="389" width="0.0207%" height="15" fill="rgb(220,115,36)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="399.50"></text></g><g><title>http_bench_json_ops`v8::internal::PreParser::ParseStatementListAndLogFunction (1 samples, 0.02%)</title><rect x="91.9942%" y="373" width="0.0207%" height="15" fill="rgb(243,153,54)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="383.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseExpressionOrLabelledStatement(v8::internal::ZoneList&lt;v8::internal::AstRawString const*&gt;*, v8::internal::ZoneList (1 samples, 0.02%)</title><rect x="91.9942%" y="357" width="0.0207%" height="15" fill="rgb(251,47,18)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="367.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="341" width="0.0207%" height="15" fill="rgb(242,102,42)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="351.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseAssignmentExpressionCoverGrammar (1 samples, 0.02%)</title><rect x="91.9942%" y="325" width="0.0207%" height="15" fill="rgb(234,31,38)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="335.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseLogicalExpression (1 samples, 0.02%)</title><rect x="91.9942%" y="309" width="0.0207%" height="15" fill="rgb(221,117,51)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="319.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseLeftHandSideContinuation (1 samples, 0.02%)</title><rect x="91.9942%" y="293" width="0.0207%" height="15" fill="rgb(212,20,18)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="303.50"></text></g><g><title>http_bench_json_ops`v8::internal::ParserBase&lt;v8::internal::PreParser&gt;::ParseArguments (1 samples, 0.02%)</title><rect x="91.9942%" y="277" width="0.0207%" height="15" fill="rgb(245,133,36)" fg:x="4447" fg:w="1"/><text x="92.2442%" y="287.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRealm::execute_script (2 samples, 0.04%)</title><rect x="91.9942%" y="757" width="0.0414%" height="15" fill="rgb(212,6,19)" fg:x="4447" fg:w="2"/><text x="92.2442%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::Script::Run(v8::Local&lt;v8::Context&gt;, v8::Local (1 samples, 0.02%)</title><rect x="92.0149%" y="741" width="0.0207%" height="15" fill="rgb(218,1,36)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::Execution::CallScript(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::JSFunction&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="725" width="0.0207%" height="15" fill="rgb(246,84,54)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal:: (1 samples, 0.02%)</title><rect x="92.0149%" y="709" width="0.0207%" height="15" fill="rgb(242,110,6)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="719.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntry (1 samples, 0.02%)</title><rect x="92.0149%" y="693" width="0.0207%" height="15" fill="rgb(214,47,5)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="703.50"></text></g><g><title>http_bench_json_ops`Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="92.0149%" y="677" width="0.0207%" height="15" fill="rgb(218,159,25)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="687.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="92.0149%" y="661" width="0.0207%" height="15" fill="rgb(215,211,28)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="671.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="92.0149%" y="645" width="0.0207%" height="15" fill="rgb(238,59,32)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="655.50"></text></g><g><title>http_bench_json_ops`Builtins_ArrayForEach (1 samples, 0.02%)</title><rect x="92.0149%" y="629" width="0.0207%" height="15" fill="rgb(226,82,3)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="639.50"></text></g><g><title>http_bench_json_ops`Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="92.0149%" y="613" width="0.0207%" height="15" fill="rgb(240,164,32)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="623.50"></text></g><g><title>http_bench_json_ops`Builtins_CompileLazy (1 samples, 0.02%)</title><rect x="92.0149%" y="597" width="0.0207%" height="15" fill="rgb(232,46,7)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="607.50"></text></g><g><title>http_bench_json_ops`Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (1 samples, 0.02%)</title><rect x="92.0149%" y="581" width="0.0207%" height="15" fill="rgb(229,129,53)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::Runtime_CompileLazy (1 samples, 0.02%)</title><rect x="92.0149%" y="565" width="0.0207%" height="15" fill="rgb(234,188,29)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="575.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="549" width="0.0207%" height="15" fill="rgb(246,141,4)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="559.50"></text></g><g><title>http_bench_json_ops`v8::internal::Compiler::Compile(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="533" width="0.0207%" height="15" fill="rgb(229,23,39)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="543.50"></text></g><g><title>http_bench_json_ops`bool v8::internal::(anonymous namespace)::IterativelyExecuteAndFinalizeUnoptimizedCompilationJobs&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Handle&lt;v8::internal::Script&gt;, v8::internal::ParseInfo*, v8::internal::AccountingAllocator*, v8::internal::IsCompiledScope*, std::__1::vector&lt;v8::internal::FinalizeUnoptimizedCompilationData, std::__1::allocator&lt;v8::internal::FinalizeUnoptimizedCompilationData&gt; &gt;*, std::__1::vector&lt;v8::internal::DeferredFinalizationJobData, std::__1::allocator (1 samples, 0.02%)</title><rect x="92.0149%" y="517" width="0.0207%" height="15" fill="rgb(206,12,3)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="527.50"></text></g><g><title>http_bench_json_ops`v8::internal::CompilationJob::Status v8::internal::(anonymous namespace)::FinalizeSingleUnoptimizedCompilationJob&lt;v8::internal::Isolate&gt;(v8::internal::UnoptimizedCompilationJob*, v8::internal::Handle&lt;v8::internal::SharedFunctionInfo&gt;, v8::internal::Isolate*, std::__1::vector&lt;v8::internal::FinalizeUnoptimizedCompilationData, std::__1::allocator (1 samples, 0.02%)</title><rect x="92.0149%" y="501" width="0.0207%" height="15" fill="rgb(252,226,20)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="511.50"></text></g><g><title>http_bench_json_ops`v8::internal::interpreter::InterpreterCompilationJob::FinalizeJobImpl(v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="485" width="0.0207%" height="15" fill="rgb(216,123,35)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="495.50"></text></g><g><title>http_bench_json_ops`v8::internal::CompilationJob::Status v8::internal::interpreter::InterpreterCompilationJob::DoFinalizeJobImpl&lt;v8::internal::Isolate&gt;(v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="469" width="0.0207%" height="15" fill="rgb(212,68,40)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="479.50"></text></g><g><title>http_bench_json_ops`v8::internal::Handle&lt;v8::internal::BytecodeArray&gt; v8::internal::interpreter::BytecodeGenerator::FinalizeBytecode&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="453" width="0.0207%" height="15" fill="rgb(254,125,32)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="463.50"></text></g><g><title>http_bench_json_ops`v8::internal::Handle&lt;v8::internal::BytecodeArray&gt; v8::internal::interpreter::BytecodeArrayWriter::ToBytecodeArray&lt;v8::internal::Isolate&gt;(v8::internal::Isolate*, int, int, v8::internal::Handle (1 samples, 0.02%)</title><rect x="92.0149%" y="437" width="0.0207%" height="15" fill="rgb(253,97,22)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="447.50"></text></g><g><title>http_bench_json_ops`v8::internal::Handle&lt;v8::internal::FixedArray&gt; v8::internal::interpreter::ConstantArrayBuilder::ToFixedArray&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="92.0149%" y="421" width="0.0207%" height="15" fill="rgb(241,101,14)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="431.50"></text></g><g><title>http_bench_json_ops`v8::internal::Handle&lt;v8::internal::Object&gt; v8::internal::interpreter::ConstantArrayBuilder::Entry::ToHandle&lt;v8::internal::Isolate&gt; (1 samples, 0.02%)</title><rect x="92.0149%" y="405" width="0.0207%" height="15" fill="rgb(238,103,29)" fg:x="4448" fg:w="1"/><text x="92.2649%" y="415.50"></text></g><g><title>http_bench_json_ops`deno_core::runtime::JsRuntime::new (3 samples, 0.06%)</title><rect x="91.9942%" y="773" width="0.0621%" height="15" fill="rgb(233,195,47)" fg:x="4447" fg:w="3"/><text x="92.2442%" y="783.50"></text></g><g><title>http_bench_json_ops`v8::Isolate::New (1 samples, 0.02%)</title><rect x="92.0356%" y="757" width="0.0207%" height="15" fill="rgb(246,218,30)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::internal::Isolate::New (1 samples, 0.02%)</title><rect x="92.0356%" y="741" width="0.0207%" height="15" fill="rgb(219,145,47)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::IsolateAllocator::IsolateAllocator (1 samples, 0.02%)</title><rect x="92.0356%" y="725" width="0.0207%" height="15" fill="rgb(243,12,26)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="735.50"></text></g><g><title>http_bench_json_ops`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="92.0356%" y="709" width="0.0207%" height="15" fill="rgb(214,87,16)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="92.0356%" y="693" width="0.0207%" height="15" fill="rgb(208,99,42)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.0356%" y="677" width="0.0207%" height="15" fill="rgb(253,99,2)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.0356%" y="661" width="0.0207%" height="15" fill="rgb(220,168,23)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.02%)</title><rect x="92.0356%" y="645" width="0.0207%" height="15" fill="rgb(242,38,24)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.02%)</title><rect x="92.0356%" y="629" width="0.0207%" height="15" fill="rgb(225,182,9)" fg:x="4449" fg:w="1"/><text x="92.2856%" y="639.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::wake_arc_raw (1 samples, 0.02%)</title><rect x="92.3252%" y="741" width="0.0207%" height="15" fill="rgb(243,178,37)" fg:x="4463" fg:w="1"/><text x="92.5752%" y="751.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="92.8631%" y="725" width="0.0207%" height="15" fill="rgb(232,139,19)" fg:x="4489" fg:w="1"/><text x="93.1131%" y="735.50"></text></g><g><title>http_bench_json_ops`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.02%)</title><rect x="93.0699%" y="693" width="0.0207%" height="15" fill="rgb(225,201,24)" fg:x="4499" fg:w="1"/><text x="93.3199%" y="703.50"></text></g><g><title>http_bench_json_ops`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (56 samples, 1.16%)</title><rect x="92.8837%" y="709" width="1.1585%" height="15" fill="rgb(221,47,46)" fg:x="4490" fg:w="56"/><text x="93.1337%" y="719.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::wake_arc_raw (46 samples, 0.95%)</title><rect x="93.0906%" y="693" width="0.9516%" height="15" fill="rgb(249,23,13)" fg:x="4500" fg:w="46"/><text x="93.3406%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`kevent (45 samples, 0.93%)</title><rect x="93.1113%" y="677" width="0.9309%" height="15" fill="rgb(219,9,5)" fg:x="4501" fg:w="45"/><text x="93.3613%" y="687.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::Driver::turn (93 samples, 1.92%)</title><rect x="92.1390%" y="757" width="1.9239%" height="15" fill="rgb(254,171,16)" fg:x="4454" fg:w="93"/><text x="92.3890%" y="767.50">h..</text></g><g><title>http_bench_json_ops`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (83 samples, 1.72%)</title><rect x="92.3459%" y="741" width="1.7170%" height="15" fill="rgb(230,171,20)" fg:x="4464" fg:w="83"/><text x="92.5959%" y="751.50"></text></g><g><title>http_bench_json_ops`futures_task::waker::wake_arc_raw (57 samples, 1.18%)</title><rect x="92.8837%" y="725" width="1.1791%" height="15" fill="rgb(210,71,41)" fg:x="4490" fg:w="57"/><text x="93.1337%" y="735.50"></text></g><g><title>http_bench_json_ops`tokio::util::wake::wake_arc_raw (1 samples, 0.02%)</title><rect x="94.0422%" y="709" width="0.0207%" height="15" fill="rgb(206,173,20)" fg:x="4546" fg:w="1"/><text x="94.2922%" y="719.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="94.0629%" y="757" width="0.0207%" height="15" fill="rgb(233,88,34)" fg:x="4547" fg:w="1"/><text x="94.3129%" y="767.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (3 samples, 0.06%)</title><rect x="94.0836%" y="757" width="0.0621%" height="15" fill="rgb(223,209,46)" fg:x="4548" fg:w="3"/><text x="94.3336%" y="767.50"></text></g><g><title>http_bench_json_ops`tokio::signal::unix::driver::Driver::process (2 samples, 0.04%)</title><rect x="94.1456%" y="757" width="0.0414%" height="15" fill="rgb(250,43,18)" fg:x="4551" fg:w="2"/><text x="94.3956%" y="767.50"></text></g><g><title>http_bench_json_ops`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.02%)</title><rect x="94.1663%" y="741" width="0.0207%" height="15" fill="rgb(208,13,10)" fg:x="4552" fg:w="1"/><text x="94.4163%" y="751.50"></text></g><g><title>http_bench_json_ops`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="94.2698%" y="741" width="0.0207%" height="15" fill="rgb(212,200,36)" fg:x="4557" fg:w="1"/><text x="94.5198%" y="751.50"></text></g><g><title> 32]&gt; (1 samples, 0.02%)</title><rect x="94.2698%" y="725" width="0.0207%" height="15" fill="rgb(225,90,30)" fg:x="4557" fg:w="1"/><text x="94.5198%" y="735.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (6 samples, 0.12%)</title><rect x="94.1870%" y="757" width="0.1241%" height="15" fill="rgb(236,182,39)" fg:x="4553" fg:w="6"/><text x="94.4370%" y="767.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.02%)</title><rect x="94.2904%" y="741" width="0.0207%" height="15" fill="rgb(212,144,35)" fg:x="4558" fg:w="1"/><text x="94.5404%" y="751.50"></text></g><g><title>http_bench_json_ops`tokio::time::driver::Driver&lt;P&gt;::park_internal (360 samples, 7.45%)</title><rect x="92.0563%" y="773" width="7.4472%" height="15" fill="rgb(228,63,44)" fg:x="4450" fg:w="360"/><text x="92.3063%" y="783.50">http_bench..</text></g><g><title>libsystem_kernel.dylib`kevent (251 samples, 5.19%)</title><rect x="94.3111%" y="757" width="5.1924%" height="15" fill="rgb(228,109,6)" fg:x="4559" fg:w="251"/><text x="94.5611%" y="767.50">libsys..</text></g><g><title>http_bench_json_ops`http_bench_json_ops::main (4,813 samples, 99.57%)</title><rect x="0.0207%" y="789" width="99.5656%" height="15" fill="rgb(238,117,24)" fg:x="1" fg:w="4813"/><text x="0.2707%" y="799.50">http_bench_json_ops`http_bench_json_ops::main</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.08%)</title><rect x="99.5035%" y="773" width="0.0827%" height="15" fill="rgb(242,26,26)" fg:x="4810" fg:w="4"/><text x="99.7535%" y="783.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="99.5863%" y="789" width="0.0207%" height="15" fill="rgb(221,92,48)" fg:x="4814" fg:w="1"/><text x="99.8363%" y="799.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.04%)</title><rect x="99.6070%" y="789" width="0.0414%" height="15" fill="rgb(209,209,32)" fg:x="4815" fg:w="2"/><text x="99.8570%" y="799.50"></text></g><g><title>dyld`start (4,826 samples, 99.83%)</title><rect x="0.0000%" y="837" width="99.8345%" height="15" fill="rgb(221,70,22)" fg:x="0" fg:w="4826"/><text x="0.2500%" y="847.50">dyld`start</text></g><g><title>http_bench_json_ops`main (4,826 samples, 99.83%)</title><rect x="0.0000%" y="821" width="99.8345%" height="15" fill="rgb(248,145,5)" fg:x="0" fg:w="4826"/><text x="0.2500%" y="831.50">http_bench_json_ops`main</text></g><g><title>http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace (4,826 samples, 99.83%)</title><rect x="0.0000%" y="805" width="99.8345%" height="15" fill="rgb(226,116,26)" fg:x="0" fg:w="4826"/><text x="0.2500%" y="815.50">http_bench_json_ops`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.19%)</title><rect x="99.6483%" y="789" width="0.1862%" height="15" fill="rgb(244,5,17)" fg:x="4817" fg:w="9"/><text x="99.8983%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.02%)</title><rect x="99.8345%" y="837" width="0.0207%" height="15" fill="rgb(252,159,33)" fg:x="4826" fg:w="1"/><text x="100.0845%" y="847.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::CreateGraph (1 samples, 0.02%)</title><rect x="99.8552%" y="709" width="0.0207%" height="15" fill="rgb(206,71,0)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="719.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::InliningPhase&gt; (1 samples, 0.02%)</title><rect x="99.8552%" y="693" width="0.0207%" height="15" fill="rgb(233,118,54)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::InliningPhase::Run (1 samples, 0.02%)</title><rect x="99.8552%" y="677" width="0.0207%" height="15" fill="rgb(234,83,48)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::GraphReducer::ReduceNode (1 samples, 0.02%)</title><rect x="99.8552%" y="661" width="0.0207%" height="15" fill="rgb(228,3,54)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::JSInliningHeuristic::Finalize (1 samples, 0.02%)</title><rect x="99.8552%" y="645" width="0.0207%" height="15" fill="rgb(226,155,13)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::JSInliningHeuristic::InlineCandidate (1 samples, 0.02%)</title><rect x="99.8552%" y="629" width="0.0207%" height="15" fill="rgb(241,28,37)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::JSInliner::ReduceJSCall (1 samples, 0.02%)</title><rect x="99.8552%" y="613" width="0.0207%" height="15" fill="rgb(233,93,10)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::AllNodes::AllNodes (1 samples, 0.02%)</title><rect x="99.8552%" y="597" width="0.0207%" height="15" fill="rgb(225,113,19)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::AllNodes::Mark (1 samples, 0.02%)</title><rect x="99.8552%" y="581" width="0.0207%" height="15" fill="rgb(241,2,18)" fg:x="4827" fg:w="1"/><text x="100.1052%" y="591.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::JSGraph::GetCachedNodes(v8::internal::ZoneVector (1 samples, 0.02%)</title><rect x="99.8759%" y="661" width="0.0207%" height="15" fill="rgb(228,207,21)" fg:x="4828" fg:w="1"/><text x="100.1259%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::CommonNodeCache::GetCachedNodes(v8::internal::ZoneVector (1 samples, 0.02%)</title><rect x="99.8759%" y="645" width="0.0207%" height="15" fill="rgb(213,211,35)" fg:x="4828" fg:w="1"/><text x="100.1259%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::NodeCache&lt;long long, v8::base::hash&lt;long long&gt;, std::__1::equal_to&lt;long long&gt; &gt;::GetCachedNodes(v8::internal::ZoneVector (1 samples, 0.02%)</title><rect x="99.8759%" y="629" width="0.0207%" height="15" fill="rgb(209,83,10)" fg:x="4828" fg:w="1"/><text x="100.1259%" y="639.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EffectControlLinearizationPhase&gt; (2 samples, 0.04%)</title><rect x="99.8759%" y="693" width="0.0414%" height="15" fill="rgb(209,164,1)" fg:x="4828" fg:w="2"/><text x="100.1259%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectControlLinearizationPhase::Run (2 samples, 0.04%)</title><rect x="99.8759%" y="677" width="0.0414%" height="15" fill="rgb(213,184,43)" fg:x="4828" fg:w="2"/><text x="100.1259%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Scheduler::ComputeSchedule(v8::internal::Zone*, v8::internal::compiler::Graph*, v8::base::Flags (1 samples, 0.02%)</title><rect x="99.8966%" y="661" width="0.0207%" height="15" fill="rgb(231,61,34)" fg:x="4829" fg:w="1"/><text x="100.1466%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Schedule::Schedule (1 samples, 0.02%)</title><rect x="99.8966%" y="645" width="0.0207%" height="15" fill="rgb(235,75,3)" fg:x="4829" fg:w="1"/><text x="100.1466%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::Schedule::NewBasicBlock (1 samples, 0.02%)</title><rect x="99.8966%" y="629" width="0.0207%" height="15" fill="rgb(220,106,47)" fg:x="4829" fg:w="1"/><text x="100.1466%" y="639.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::EscapeAnalysisPhase&gt; (1 samples, 0.02%)</title><rect x="99.9173%" y="693" width="0.0207%" height="15" fill="rgb(210,196,33)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysisPhase::Run (1 samples, 0.02%)</title><rect x="99.9173%" y="677" width="0.0207%" height="15" fill="rgb(229,154,42)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EffectGraphReducer::ReduceFrom (1 samples, 0.02%)</title><rect x="99.9173%" y="661" width="0.0207%" height="15" fill="rgb(228,114,26)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysis::Reduce (1 samples, 0.02%)</title><rect x="99.9173%" y="645" width="0.0207%" height="15" fill="rgb(208,144,1)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::EscapeAnalysisTracker::Scope::~Scope (1 samples, 0.02%)</title><rect x="99.9173%" y="629" width="0.0207%" height="15" fill="rgb(239,112,37)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="639.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::operator==(v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash (1 samples, 0.02%)</title><rect x="99.9173%" y="613" width="0.0207%" height="15" fill="rgb(210,96,50)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::ZipIterable::begin (1 samples, 0.02%)</title><rect x="99.9173%" y="597" width="0.0207%" height="15" fill="rgb(222,178,2)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="607.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash&lt;v8::internal::compiler::Variable&gt; &gt;::iterator::begin(v8::internal::compiler::PersistentMap&lt;v8::internal::compiler::Variable, v8::internal::compiler::Node*, v8::base::hash (1 samples, 0.02%)</title><rect x="99.9173%" y="581" width="0.0207%" height="15" fill="rgb(226,74,18)" fg:x="4830" fg:w="1"/><text x="100.1673%" y="591.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::SimplifiedLoweringPhase, v8::internal::compiler::Linkage*&amp;&gt; (1 samples, 0.02%)</title><rect x="99.9379%" y="693" width="0.0207%" height="15" fill="rgb(225,67,54)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLoweringPhase::Run (1 samples, 0.02%)</title><rect x="99.9379%" y="677" width="0.0207%" height="15" fill="rgb(251,92,32)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="687.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::SimplifiedLowering::LowerAllNodes (1 samples, 0.02%)</title><rect x="99.9379%" y="661" width="0.0207%" height="15" fill="rgb(228,149,22)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::RepresentationSelector::RunRetypePhase (1 samples, 0.02%)</title><rect x="99.9379%" y="645" width="0.0207%" height="15" fill="rgb(243,54,13)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::RepresentationSelector::RetypeNode (1 samples, 0.02%)</title><rect x="99.9379%" y="629" width="0.0207%" height="15" fill="rgb(243,180,28)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="639.50"></text></g><g><title>http_bench_json_ops`void v8::internal::compiler::RepresentationSelector::VisitNode&lt;(v8::internal::compiler::Phase)1&gt; (1 samples, 0.02%)</title><rect x="99.9379%" y="613" width="0.0207%" height="15" fill="rgb(208,167,24)" fg:x="4831" fg:w="1"/><text x="100.1879%" y="623.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LinearScanAllocator::AllocateBlockedReg (1 samples, 0.02%)</title><rect x="99.9586%" y="629" width="0.0207%" height="15" fill="rgb(245,73,45)" fg:x="4832" fg:w="1"/><text x="100.2086%" y="639.50"></text></g><g><title>all (4,834 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(237,203,48)" fg:x="0" fg:w="4834"/><text x="0.2500%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (7 samples, 0.14%)</title><rect x="99.8552%" y="837" width="0.1448%" height="15" fill="rgb(211,197,16)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (7 samples, 0.14%)</title><rect x="99.8552%" y="821" width="0.1448%" height="15" fill="rgb(243,99,51)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="831.50"></text></g><g><title>http_bench_json_ops`v8::base::ThreadEntry (7 samples, 0.14%)</title><rect x="99.8552%" y="805" width="0.1448%" height="15" fill="rgb(215,123,29)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="815.50"></text></g><g><title>http_bench_json_ops`v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread::Run (7 samples, 0.14%)</title><rect x="99.8552%" y="789" width="0.1448%" height="15" fill="rgb(239,186,37)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="799.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileTask::RunInternal (7 samples, 0.14%)</title><rect x="99.8552%" y="773" width="0.1448%" height="15" fill="rgb(252,136,39)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="783.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizingCompileDispatcher::CompileNext (7 samples, 0.14%)</title><rect x="99.8552%" y="757" width="0.1448%" height="15" fill="rgb(223,213,32)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="767.50"></text></g><g><title>http_bench_json_ops`v8::internal::OptimizedCompilationJob::ExecuteJob (7 samples, 0.14%)</title><rect x="99.8552%" y="741" width="0.1448%" height="15" fill="rgb(233,115,5)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="751.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (7 samples, 0.14%)</title><rect x="99.8552%" y="725" width="0.1448%" height="15" fill="rgb(207,226,44)" fg:x="4827" fg:w="7"/><text x="100.1052%" y="735.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::OptimizeGraph (6 samples, 0.12%)</title><rect x="99.8759%" y="709" width="0.1241%" height="15" fill="rgb(208,126,0)" fg:x="4828" fg:w="6"/><text x="100.1259%" y="719.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::SelectInstructions (2 samples, 0.04%)</title><rect x="99.9586%" y="693" width="0.0414%" height="15" fill="rgb(244,66,21)" fg:x="4832" fg:w="2"/><text x="100.2086%" y="703.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::PipelineImpl::AllocateRegistersForTopTier (2 samples, 0.04%)</title><rect x="99.9586%" y="677" width="0.0414%" height="15" fill="rgb(222,97,12)" fg:x="4832" fg:w="2"/><text x="100.2086%" y="687.50"></text></g><g><title>http_bench_json_ops`auto v8::internal::compiler::PipelineImpl::Run&lt;v8::internal::compiler::AllocateGeneralRegistersPhase&lt;v8::internal::compiler::LinearScanAllocator&gt; &gt; (2 samples, 0.04%)</title><rect x="99.9586%" y="661" width="0.0414%" height="15" fill="rgb(219,213,19)" fg:x="4832" fg:w="2"/><text x="100.2086%" y="671.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LinearScanAllocator::AllocateRegisters (2 samples, 0.04%)</title><rect x="99.9586%" y="645" width="0.0414%" height="15" fill="rgb(252,169,30)" fg:x="4832" fg:w="2"/><text x="100.2086%" y="655.50"></text></g><g><title>http_bench_json_ops`v8::internal::compiler::LinearScanAllocator::ForwardStateTo (1 samples, 0.02%)</title><rect x="99.9793%" y="629" width="0.0207%" height="15" fill="rgb(206,32,51)" fg:x="4833" fg:w="1"/><text x="100.2293%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="99.9793%" y="613" width="0.0207%" height="15" fill="rgb(250,172,42)" fg:x="4833" fg:w="1"/><text x="100.2293%" y="623.50"></text></g></svg></svg>