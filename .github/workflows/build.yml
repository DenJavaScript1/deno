name: Build and test

on: [push]

jobs:
  build:
    name: Build and test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Setup rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.37.0"
      - name: Install rust components
        run: |
          rustup component add clippy
          rustup component add rustfmt
      - name: Check versions
        run: |
          node -v
          rustc --version
          cargo --version
      - name: Run tools/setup.py
        run: ./tools/setup.py
        shell: bash
      - name: Start sccache (linux)
        if: contains(matrix.os, 'linux')
        run: "`pwd`/prebuilt/linux64/sccache --start-server"
      - name: Start sccache (macos)
        if: contains(matrix.os, 'macos')
        run: "`pwd`/prebuilt/mac/sccache --start-server"
      - name: Start sccache (windows)
        if: contains(matrix.os, 'windows')
        run: "%cd%\\prebuilt\\windows\\sccache.exe --start-server"
      - name: Lint
        run: ./tools/lint.py
        shell: bash
      - name: Format
        run: ./tools/test_format.py
        shell: bash
      - name: Build
        run: ./tools/build.py -C target/release
        shell: bash
      - name: Run tests
        run: DENO_BUILD_MODE=release ./tools/test.py
        shell: bash
      - name: Upload linux and macOS artifacts
        uses: actions/upload-artifact@master
        if: contains(matrix.os, 'linux') || contains(matrix.os, 'macOS')
        with:
          name: deno
          path: target/release/deno
      - name: Upload windows artifacts
        uses: actions/upload-artifact@master
        if: contains(matrix.os, 'windows')
        with:
          name: deno
          path: target\release\deno.exe
