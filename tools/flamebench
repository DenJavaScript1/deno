#!/bin/bash

##
# flamebench: flamegraph your benchmarks üî•ü™ë‚Ñ¢Ô∏è
##

# Compute root DIR
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )

# Bash robustness flags
set -o nounset
set -o errexit
set -o pipefail

# Args
bench=${1:-}
bench_filter=${2:-}

# Validate args
if [[ -z ${bench} ]]; then
    # Print usage if no bench specified
    echo "flamebench <bench_name> [bench_filter]"
    exit 1
fi

# List available benches, hoping we don't have any benches called "ls" :D
if [[ ${bench} == "ls" ]]; then
    find ${DIR} -type d \
        \( -path ${DIR}/third_party -o -path ${DIR}/.git -o -path ${DIR}/target -o -path ${DIR}/docs -o -path ${DIR}/test_util \) \
        -prune -false -o  \
        -path "${DIR}/*/benches/*" -type f -name "*.rs" \
        | xargs basename | cut -f1 -d.
    exit 0
fi

# Ensure flamegraph is installed
if ! command -v flamegraph &> /dev/null; then
    echo "flamegraph (https://github.com/flamegraph-rs/flamegraph) not found, please run:"
    echo
    echo "cargo install flamegraph"
    exit 1
fi

# Cargo build
RUSTFLAGS='-C force-frame-pointers=y' cargo build --release --bench ${bench}

# Find built bench binary
bench_bin=$(ls -t "${DIR}/target/release/deps/${bench}"* | head -n 1)

# Set $PROFILING env so benches can improve their flamegraphs
export PROFILING=1

# Run it with flamegraph
output_file="${DIR}/flamebench.svg"
sudo -E flamegraph -o ${output_file} ${bench_bin} ${bench_filter}

# Open it (in your browser / SVG viewer)
open ${output_file}
